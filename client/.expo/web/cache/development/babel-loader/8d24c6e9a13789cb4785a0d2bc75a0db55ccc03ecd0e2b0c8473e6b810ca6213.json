{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useTranslation } from 'react-i18next';\nimport { firestore } from '@/core/config/firebase';\nimport { HebrewNormalizer } from '@/utils/text/hebrewNormalizer';\nexport var searchReceipts = function () {\n  var _ref = _asyncToGenerator(function* (searchTerm) {\n    var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n    var isHebrew = i18n.language === 'he';\n    var queries = [];\n    if (isHebrew) {\n      var hebrewSearchTerm = HebrewNormalizer.normalizeHebrewText(searchTerm);\n      queries = [firestore().collection('receipts').where('merchantHe', '>=', hebrewSearchTerm).where('merchantHe', '<=', hebrewSearchTerm + \"\\uF8FF\"), firestore().collection('receipts').where('itemsHe', 'array-contains', hebrewSearchTerm)];\n    } else {\n      queries = [firestore().collection('receipts').where('merchant', '>=', searchTerm).where('merchant', '<=', searchTerm + \"\\uF8FF\")];\n    }\n    var results = yield Promise.all(queries.map(function (q) {\n      return q.get();\n    }));\n    return results.flatMap(function (snapshot) {\n      return snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n    });\n  });\n  return function searchReceipts(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["useTranslation","firestore","HebrewNormalizer","searchReceipts","_ref","_asyncToGenerator","searchTerm","_useTranslation","i18n","isHebrew","language","queries","hebrewSearchTerm","normalizeHebrewText","collection","where","results","Promise","all","map","q","get","flatMap","snapshot","docs","doc","_objectSpread","id","data","_x","apply","arguments"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/receipts/services/receiptSearch.js"],"sourcesContent":["import { useTranslation } from 'react-i18next';\r\nimport { firestore } from '@/core/config/firebase'; // Assuming firestore is exported from firebase config\r\nimport { HebrewNormalizer } from '@/utils/text/hebrewNormalizer'; // Assuming HebrewNormalizer is exported\r\n\r\nexport const searchReceipts = async (searchTerm) => {\r\n  const { i18n } = useTranslation();\r\n  const isHebrew = i18n.language === 'he';\r\n  \r\n  // For Hebrew, search both normalized and original text\r\n  let queries = [];\r\n  \r\n  if (isHebrew) {\r\n    const hebrewSearchTerm = HebrewNormalizer.normalizeHebrewText(searchTerm);\r\n    queries = [\r\n      firestore()\r\n        .collection('receipts')\r\n        .where('merchantHe', '>=', hebrewSearchTerm)\r\n        .where('merchantHe', '<=', hebrewSearchTerm + '\\uf8ff'),\r\n      firestore()\r\n        .collection('receipts')\r\n        .where('itemsHe', 'array-contains', hebrewSearchTerm)\r\n    ];\r\n  } else {\r\n    queries = [\r\n      firestore()\r\n        .collection('receipts')\r\n        .where('merchant', '>=', searchTerm)\r\n        .where('merchant', '<=', searchTerm + '\\uf8ff')\r\n    ];\r\n  }\r\n  \r\n  const results = await Promise.all(queries.map(q => q.get()));\r\n  return results.flatMap(snapshot => snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n};\r\n"],"mappings":";;;;AAAA,SAASA,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,gBAAgB,QAAQ,+BAA+B;AAEhE,OAAO,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,UAAU,EAAK;IAClD,IAAAC,eAAA,GAAiBP,cAAc,CAAC,CAAC;MAAzBQ,IAAI,GAAAD,eAAA,CAAJC,IAAI;IACZ,IAAMC,QAAQ,GAAGD,IAAI,CAACE,QAAQ,KAAK,IAAI;IAGvC,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAIF,QAAQ,EAAE;MACZ,IAAMG,gBAAgB,GAAGV,gBAAgB,CAACW,mBAAmB,CAACP,UAAU,CAAC;MACzEK,OAAO,GAAG,CACRV,SAAS,CAAC,CAAC,CACRa,UAAU,CAAC,UAAU,CAAC,CACtBC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAEH,gBAAgB,CAAC,CAC3CG,KAAK,CAAC,YAAY,EAAE,IAAI,EAAEH,gBAAgB,GAAG,QAAQ,CAAC,EACzDX,SAAS,CAAC,CAAC,CACRa,UAAU,CAAC,UAAU,CAAC,CACtBC,KAAK,CAAC,SAAS,EAAE,gBAAgB,EAAEH,gBAAgB,CAAC,CACxD;IACH,CAAC,MAAM;MACLD,OAAO,GAAG,CACRV,SAAS,CAAC,CAAC,CACRa,UAAU,CAAC,UAAU,CAAC,CACtBC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAET,UAAU,CAAC,CACnCS,KAAK,CAAC,UAAU,EAAE,IAAI,EAAET,UAAU,GAAG,QAAQ,CAAC,CAClD;IACH;IAEA,IAAMU,OAAO,SAASC,OAAO,CAACC,GAAG,CAACP,OAAO,CAACQ,GAAG,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,GAAG,CAAC,CAAC;IAAA,EAAC,CAAC;IAC5D,OAAOL,OAAO,CAACM,OAAO,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,UAAAM,GAAG;QAAA,OAAAC,aAAA;UAAOC,EAAE,EAAEF,GAAG,CAACE;QAAE,GAAKF,GAAG,CAACG,IAAI,CAAC,CAAC;MAAA,CAAG,CAAC;IAAA,EAAC;EAC/F,CAAC;EAAA,gBA7BYzB,cAAcA,CAAA0B,EAAA;IAAA,OAAAzB,IAAA,CAAA0B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA6B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
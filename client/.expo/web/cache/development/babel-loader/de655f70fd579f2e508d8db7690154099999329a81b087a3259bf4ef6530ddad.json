{"ast":null,"code":"#!/usr/bin/env node\nvar _require = require('child_process'),\n  execSync = _require.execSync;\nvar fs = require('fs-extra');\nvar path = require('path');\nvar clientDir = path.resolve(__dirname, '../');\nvar buildDir = path.resolve(clientDir, 'build');\nconsole.log('‚ú® Validating client environment variables...');\nvar requiredEnvVars = ['REACT_APP_FIREBASE_API_KEY', 'REACT_APP_FIREBASE_AUTH_DOMAIN', 'REACT_APP_FIREBASE_PROJECT_ID', 'REACT_APP_FIREBASE_STORAGE_BUCKET', 'REACT_APP_FIREBASE_MESSAGING_SENDER_ID', 'REACT_APP_FIREBASE_APP_ID', 'REACT_APP_FRONTEND_URL'];\nvar missingVars = requiredEnvVars.filter(function (key) {\n  return !process.env[key];\n});\nif (missingVars.length > 0) {\n  console.error(`‚ùå Missing required environment variables: ${missingVars.join(', ')}`);\n  console.error('Please ensure your .env.production file is correctly configured.');\n  process.exit(1);\n}\nconsole.log('‚úÖ Environment variables validated.');\nconsole.log('‚ú® Cleaning previous build directory...');\ntry {\n  fs.emptyDirSync(buildDir);\n  console.log('‚úÖ Previous build directory cleaned.');\n} catch (error) {\n  console.error('‚ùå Failed to clean build directory:', error);\n  process.exit(1);\n}\nconsole.log('‚ú® Running production build...');\ntry {\n  execSync('npm run build:web', {\n    cwd: clientDir,\n    stdio: 'inherit'\n  });\n  console.log('‚úÖ Production build completed.');\n} catch (error) {\n  console.error('‚ùå Production build failed:', error);\n  process.exit(1);\n}\nconsole.log('‚ú® Verifying build output (Placeholder)...');\nif (!fs.existsSync(path.join(buildDir, 'index.html'))) {\n  console.error('‚ùå Build verification failed: index.html not found.');\n  process.exit(1);\n}\nconsole.log('‚úÖ Build output verified (Basic check).');\nconsole.log('‚ú® Preparing for deployment (Placeholder)...');\nconsole.log('‚úÖ Preparation for deployment completed (Placeholder).');\nconsole.log('üöÄ Client build process finished.');","map":{"version":3,"names":["_require","require","execSync","fs","path","clientDir","resolve","__dirname","buildDir","console","log","requiredEnvVars","missingVars","filter","key","process","env","length","error","join","exit","emptyDirSync","cwd","stdio","existsSync"],"sources":["C:/Users/user/Documents/app.v3/client/scripts/build.js"],"sourcesContent":["#!/usr/bin/env node\r\n\r\nconst { execSync } = require('child_process');\r\nconst fs = require('fs-extra');\r\nconst path = require('path');\r\n\r\nconst clientDir = path.resolve(__dirname, '../');\r\nconst buildDir = path.resolve(clientDir, 'build');\r\n\r\n// 1. Validate environment variables\r\nconsole.log('‚ú® Validating client environment variables...');\r\nconst requiredEnvVars = [\r\n  'REACT_APP_FIREBASE_API_KEY',\r\n  'REACT_APP_FIREBASE_AUTH_DOMAIN',\r\n  'REACT_APP_FIREBASE_PROJECT_ID',\r\n  'REACT_APP_FIREBASE_STORAGE_BUCKET',\r\n  'REACT_APP_FIREBASE_MESSAGING_SENDER_ID',\r\n  'REACT_APP_FIREBASE_APP_ID',\r\n  'REACT_APP_FRONTEND_URL',\r\n];\r\n\r\nconst missingVars = requiredEnvVars.filter(key => !process.env[key]);\r\n\r\nif (missingVars.length > 0) {\r\n  console.error(`‚ùå Missing required environment variables: ${missingVars.join(', ')}`);\r\n  console.error('Please ensure your .env.production file is correctly configured.');\r\n  process.exit(1);\r\n}\r\nconsole.log('‚úÖ Environment variables validated.');\r\n\r\n// 2. Clean previous builds\r\nconsole.log('‚ú® Cleaning previous build directory...');\r\ntry {\r\n  fs.emptyDirSync(buildDir);\r\n  console.log('‚úÖ Previous build directory cleaned.');\r\n} catch (error) {\r\n  console.error('‚ùå Failed to clean build directory:', error);\r\n  process.exit(1);\r\n}\r\n\r\n// 3. Run the production build process\r\nconsole.log('‚ú® Running production build...');\r\ntry {\r\n  // Use the npm script defined in package.json\r\n  execSync('npm run build:web', { cwd: clientDir, stdio: 'inherit' });\r\n  console.log('‚úÖ Production build completed.');\r\n} catch (error) {\r\n  console.error('‚ùå Production build failed:', error);\r\n  process.exit(1);\r\n}\r\n\r\n// 4. Verify the build output (Placeholder)\r\nconsole.log('‚ú® Verifying build output (Placeholder)...');\r\n// Add checks here, e.g., check if index.html exists, check for expected asset files\r\nif (!fs.existsSync(path.join(buildDir, 'index.html'))) {\r\n    console.error('‚ùå Build verification failed: index.html not found.');\r\n    process.exit(1);\r\n}\r\nconsole.log('‚úÖ Build output verified (Basic check).');\r\n\r\n\r\n// 5. Prepare for deployment (Placeholder)\r\nconsole.log('‚ú® Preparing for deployment (Placeholder)...');\r\n// Add steps here, e.g., copying build files to a deployment directory, zipping\r\nconsole.log('‚úÖ Preparation for deployment completed (Placeholder).');\r\n\r\nconsole.log('üöÄ Client build process finished.');\r\n"],"mappings":"AAAA;AAEA,IAAAA,QAAA,GAAqBC,OAAO,CAAC,eAAe,CAAC;EAArCC,QAAQ,GAAAF,QAAA,CAARE,QAAQ;AAChB,IAAMC,EAAE,GAAGF,OAAO,CAAC,UAAU,CAAC;AAC9B,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE5B,IAAMI,SAAS,GAAGD,IAAI,CAACE,OAAO,CAACC,SAAS,EAAE,KAAK,CAAC;AAChD,IAAMC,QAAQ,GAAGJ,IAAI,CAACE,OAAO,CAACD,SAAS,EAAE,OAAO,CAAC;AAGjDI,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;AAC3D,IAAMC,eAAe,GAAG,CACtB,4BAA4B,EAC5B,gCAAgC,EAChC,+BAA+B,EAC/B,mCAAmC,EACnC,wCAAwC,EACxC,2BAA2B,EAC3B,wBAAwB,CACzB;AAED,IAAMC,WAAW,GAAGD,eAAe,CAACE,MAAM,CAAC,UAAAC,GAAG;EAAA,OAAI,CAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AAAA,EAAC;AAEpE,IAAIF,WAAW,CAACK,MAAM,GAAG,CAAC,EAAE;EAC1BR,OAAO,CAACS,KAAK,CAAC,6CAA6CN,WAAW,CAACO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;EACpFV,OAAO,CAACS,KAAK,CAAC,kEAAkE,CAAC;EACjFH,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;AACjB;AACAX,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAGjDD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AACrD,IAAI;EACFP,EAAE,CAACkB,YAAY,CAACb,QAAQ,CAAC;EACzBC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;AACpD,CAAC,CAAC,OAAOQ,KAAK,EAAE;EACdT,OAAO,CAACS,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;EAC1DH,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;AACjB;AAGAX,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAC5C,IAAI;EAEFR,QAAQ,CAAC,mBAAmB,EAAE;IAAEoB,GAAG,EAAEjB,SAAS;IAAEkB,KAAK,EAAE;EAAU,CAAC,CAAC;EACnEd,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAC9C,CAAC,CAAC,OAAOQ,KAAK,EAAE;EACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EAClDH,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;AACjB;AAGAX,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;AAExD,IAAI,CAACP,EAAE,CAACqB,UAAU,CAACpB,IAAI,CAACe,IAAI,CAACX,QAAQ,EAAE,YAAY,CAAC,CAAC,EAAE;EACnDC,OAAO,CAACS,KAAK,CAAC,oDAAoD,CAAC;EACnEH,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;AACnB;AACAX,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AAIrDD,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;AAE1DD,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;AAEpED,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
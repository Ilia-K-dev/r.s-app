{"ast":null,"code":"import React, { memo } from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from 'recharts';\nimport { formatCurrency } from \"../../../shared/utils/currency\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CategoryBreakdown = memo(function (_ref) {\n  var _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data;\n  function getCategoryColor(category) {\n    var colors = {\n      'Groceries': '#22C55E',\n      'Dining': '#F59E0B',\n      'Transportation': '#3B82F6',\n      'Utilities': '#8B5CF6',\n      'Entertainment': '#EC4899',\n      'Shopping': '#06B6D4',\n      'Health': '#EF4444',\n      'Uncategorized': '#6B7280'\n    };\n    return colors[category] || '#6B7280';\n  }\n  if (!data || data.length === 0) {\n    return _jsx(\"div\", {\n      className: \"h-full flex items-center justify-center text-gray-500\",\n      children: \"No data available\"\n    });\n  }\n  return _jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: _jsxs(PieChart, {\n      children: [_jsx(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: false,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        label: function label(_ref2) {\n          var name = _ref2.name,\n            percent = _ref2.percent;\n          return `${name} (${(percent * 100).toFixed(0)}%)`;\n        },\n        children: data.map(function (entry, index) {\n          return (_jsx(Cell, {\n              fill: entry.color || getCategoryColor(entry.name)\n            }, `cell-${index}`)\n          );\n        })\n      }), _jsx(Tooltip, {\n        formatter: function formatter(value) {\n          return [formatCurrency(value), 'Amount'];\n        },\n        labelStyle: {\n          color: '#111827'\n        },\n        contentStyle: {\n          backgroundColor: '#FFFFFF',\n          border: '1px solid #E5E7EB',\n          borderRadius: '0.375rem',\n          padding: '0.5rem'\n        }\n      }), _jsx(Legend, {})]\n    })\n  });\n});\nexport default CategoryBreakdown;","map":{"version":3,"names":["React","memo","PieChart","Pie","Cell","Legend","Tooltip","ResponsiveContainer","formatCurrency","jsx","_jsx","jsxs","_jsxs","CategoryBreakdown","_ref","_ref$data","data","getCategoryColor","category","colors","length","className","children","width","height","cx","cy","labelLine","outerRadius","fill","dataKey","label","_ref2","name","percent","toFixed","map","entry","index","color","formatter","value","labelStyle","contentStyle","backgroundColor","border","borderRadius","padding"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/CategoryBreakdown.js"],"sourcesContent":["import React, { memo } from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Legend,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { formatCurrency } from '../../../shared/utils/currency';\r\n\r\nexport const CategoryBreakdown = memo(({ data = [] }) => {\r\n\r\n  // Helper to get a consistent color for each category\r\n  function getCategoryColor(category) {\r\n    const colors = {\r\n      'Groceries': '#22C55E',\r\n      'Dining': '#F59E0B',\r\n      'Transportation': '#3B82F6',\r\n      'Utilities': '#8B5CF6',\r\n      'Entertainment': '#EC4899',\r\n      'Shopping': '#06B6D4',\r\n      'Health': '#EF4444',\r\n      'Uncategorized': '#6B7280'\r\n      // Add more colors as needed\r\n    };\r\n\r\n    return colors[category] || '#6B7280';\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div className=\"h-full flex items-center justify-center text-gray-500\">\r\n        No data available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <PieChart>\r\n        <Pie\r\n          data={data} // Use the data prop directly\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          label={({ name, percent }) => `${name} (${(percent * 100).toFixed(0)}%)`}\r\n        >\r\n          {data.map((entry, index) => ( // Map over data prop\r\n            <Cell key={`cell-${index}`} fill={entry.color || getCategoryColor(entry.name)} /> // Use color from data or helper\r\n          ))}\r\n        </Pie>\r\n        <Tooltip\r\n          formatter={(value) => [formatCurrency(value), 'Amount']}\r\n          labelStyle={{ color: '#111827' }}\r\n          contentStyle={{\r\n            backgroundColor: '#FFFFFF',\r\n            border: '1px solid #E5E7EB',\r\n            borderRadius: '0.375rem',\r\n            padding: '0.5rem'\r\n          }}\r\n        />\r\n        <Legend />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n});\r\n\r\nexport default CategoryBreakdown;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SACEC,QAAQ,EACRC,GAAG,EACHC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,mBAAmB,QACd,UAAU;AACjB,SAASC,cAAc;AAAyC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEhE,OAAO,IAAMC,iBAAiB,GAAGZ,IAAI,CAAC,UAAAa,IAAA,EAAmB;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAAhBE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;EAGhD,SAASE,gBAAgBA,CAACC,QAAQ,EAAE;IAClC,IAAMC,MAAM,GAAG;MACb,WAAW,EAAE,SAAS;MACtB,QAAQ,EAAE,SAAS;MACnB,gBAAgB,EAAE,SAAS;MAC3B,WAAW,EAAE,SAAS;MACtB,eAAe,EAAE,SAAS;MAC1B,UAAU,EAAE,SAAS;MACrB,QAAQ,EAAE,SAAS;MACnB,eAAe,EAAE;IAEnB,CAAC;IAED,OAAOA,MAAM,CAACD,QAAQ,CAAC,IAAI,SAAS;EACtC;EAEA,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;IAC9B,OACEV,IAAA;MAAKW,SAAS,EAAC,uDAAuD;MAAAC,QAAA,EAAC;IAEvE,CAAK,CAAC;EAEV;EAEA,OACEZ,IAAA,CAACH,mBAAmB;IAACgB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAAF,QAAA,EAC7CV,KAAA,CAACV,QAAQ;MAAAoB,QAAA,GACPZ,IAAA,CAACP,GAAG;QACFa,IAAI,EAAEA,IAAK;QACXS,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,SAAS,EAAE,KAAM;QACjBC,WAAW,EAAE,EAAG;QAChBC,IAAI,EAAC,SAAS;QACdC,OAAO,EAAC,OAAO;QACfC,KAAK,EAAE,SAAPA,KAAKA,CAAAC,KAAA;UAAA,IAAKC,IAAI,GAAAD,KAAA,CAAJC,IAAI;YAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;UAAA,OAAO,GAAGD,IAAI,KAAK,CAACC,OAAO,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,IAAI;QAAA,CAAC;QAAAb,QAAA,EAExEN,IAAI,CAACoB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;UAAA,QACrB5B,IAAA,CAACN,IAAI;cAAuByB,IAAI,EAAEQ,KAAK,CAACE,KAAK,IAAItB,gBAAgB,CAACoB,KAAK,CAACJ,IAAI;YAAE,GAAnE,QAAQK,KAAK,EAAwD;UAAC;QAAA,CAClF;MAAC,CACC,CAAC,EACN5B,IAAA,CAACJ,OAAO;QACNkC,SAAS,EAAE,SAAXA,SAASA,CAAGC,KAAK;UAAA,OAAK,CAACjC,cAAc,CAACiC,KAAK,CAAC,EAAE,QAAQ,CAAC;QAAA,CAAC;QACxDC,UAAU,EAAE;UAAEH,KAAK,EAAE;QAAU,CAAE;QACjCI,YAAY,EAAE;UACZC,eAAe,EAAE,SAAS;UAC1BC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,UAAU;UACxBC,OAAO,EAAE;QACX;MAAE,CACH,CAAC,EACFrC,IAAA,CAACL,MAAM,IAAE,CAAC;IAAA,CACF;EAAC,CACQ,CAAC;AAE1B,CAAC,CAAC;AAEF,eAAeQ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
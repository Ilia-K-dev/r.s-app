{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport { Card } from \"../../../shared/components/ui/Card\";\nimport { Button } from \"../../../shared/components/ui/Button\";\nimport { Dropdown } from \"../../../shared/components/forms/Dropdown\";\nimport { Alert } from \"../../../shared/components/ui/Alert\";\nimport { useToast } from \"../../../shared/hooks/useToast\";\nimport { FileDown, FileText, Download } from 'lucide-react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ExportSettings = function ExportSettings() {\n  var _useToast = useToast(),\n    showToast = _useToast.showToast;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState({\n      format: 'csv',\n      dateRange: 'all',\n      includeImages: false\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    exportOptions = _useState6[0],\n    setExportOptions = _useState6[1];\n  var formats = [{\n    value: 'csv',\n    label: 'CSV'\n  }, {\n    value: 'json',\n    label: 'JSON'\n  }, {\n    value: 'pdf',\n    label: 'PDF'\n  }];\n  var dateRanges = [{\n    value: 'all',\n    label: 'All Time'\n  }, {\n    value: 'this_month',\n    label: 'This Month'\n  }, {\n    value: 'last_month',\n    label: 'Last Month'\n  }, {\n    value: 'this_year',\n    label: 'This Year'\n  }, {\n    value: 'custom',\n    label: 'Custom Range'\n  }];\n  var handleExport = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n      setError(null);\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1500);\n        });\n        showToast(`Data exported as ${exportOptions.format.toUpperCase()} successfully`, 'success');\n      } catch (err) {\n        setError('Failed to export data. Please try again.');\n        showToast('Export failed', 'error');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleExport() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Card, {\n    className: \"p-6\",\n    children: [_jsx(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Data Export\"\n    }), error && _jsx(Alert, {\n      type: \"error\",\n      message: error,\n      className: \"mb-4\"\n    }), _jsxs(\"div\", {\n      className: \"space-y-6\",\n      children: [_jsxs(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [_jsx(Dropdown, {\n          label: \"Export Format\",\n          options: formats,\n          value: exportOptions.format,\n          onChange: function onChange(value) {\n            return setExportOptions(_objectSpread(_objectSpread({}, exportOptions), {}, {\n              format: value\n            }));\n          }\n        }), _jsx(Dropdown, {\n          label: \"Date Range\",\n          options: dateRanges,\n          value: exportOptions.dateRange,\n          onChange: function onChange(value) {\n            return setExportOptions(_objectSpread(_objectSpread({}, exportOptions), {}, {\n              dateRange: value\n            }));\n          }\n        }), _jsxs(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [_jsx(\"input\", {\n            type: \"checkbox\",\n            id: \"includeImages\",\n            checked: exportOptions.includeImages,\n            onChange: function onChange(e) {\n              return setExportOptions(_objectSpread(_objectSpread({}, exportOptions), {}, {\n                includeImages: e.target.checked\n              }));\n            },\n            className: \"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n          }), _jsx(\"label\", {\n            htmlFor: \"includeImages\",\n            className: \"ml-2 text-sm text-gray-700\",\n            children: \"Include receipt images (where available)\"\n          })]\n        })]\n      }), _jsxs(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [_jsx(\"div\", {\n          children: _jsx(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Export your receipt data in your chosen format.\"\n          })\n        }), _jsxs(\"div\", {\n          className: \"flex space-x-2\",\n          children: [_jsx(Button, {\n            variant: \"secondary\",\n            icon: FileText,\n            onClick: function onClick() {\n              return showToast('Template downloaded', 'success');\n            },\n            children: \"Download Template\"\n          }), _jsx(Button, {\n            onClick: handleExport,\n            loading: loading,\n            icon: FileDown,\n            children: \"Export Data\"\n          })]\n        })]\n      })]\n    })]\n  });\n};\nexport default ExportSettings;","map":{"version":3,"names":["React","useState","Card","Button","Dropdown","Alert","useToast","FileDown","FileText","Download","jsx","_jsx","jsxs","_jsxs","ExportSettings","_useToast","showToast","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","format","dateRange","includeImages","_useState6","exportOptions","setExportOptions","formats","value","label","dateRanges","handleExport","_ref","_asyncToGenerator","Promise","resolve","setTimeout","toUpperCase","err","apply","arguments","className","children","type","message","options","onChange","_objectSpread","id","checked","e","target","htmlFor","variant","icon","onClick"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/settings/components/ExportSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card } from '../../../shared/components/ui/Card';\r\nimport { Button } from '../../../shared/components/ui/Button';\r\nimport { Dropdown } from '../../../shared/components/forms/Dropdown';\r\nimport { Alert } from '../../../shared/components/ui/Alert';\r\nimport { useToast } from '../../../shared/hooks/useToast';\r\nimport { FileDown, FileText, Download } from 'lucide-react';\r\n\r\nexport const ExportSettings = () => {\r\n  const { showToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const [exportOptions, setExportOptions] = useState({\r\n    format: 'csv',\r\n    dateRange: 'all',\r\n    includeImages: false\r\n  });\r\n  \r\n  const formats = [\r\n    { value: 'csv', label: 'CSV' },\r\n    { value: 'json', label: 'JSON' },\r\n    { value: 'pdf', label: 'PDF' }\r\n  ];\r\n  \r\n  const dateRanges = [\r\n    { value: 'all', label: 'All Time' },\r\n    { value: 'this_month', label: 'This Month' },\r\n    { value: 'last_month', label: 'Last Month' },\r\n    { value: 'this_year', label: 'This Year' },\r\n    { value: 'custom', label: 'Custom Range' }\r\n  ];\r\n  \r\n  const handleExport = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In a real app, call your export API here\r\n      // For this example, we'll just simulate a delay\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      showToast(`Data exported as ${exportOptions.format.toUpperCase()} successfully`, 'success');\r\n    } catch (err) {\r\n      setError('Failed to export data. Please try again.');\r\n      showToast('Export failed', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"p-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Data Export</h2>\r\n      \r\n      {error && (\r\n        <Alert \r\n          type=\"error\" \r\n          message={error} \r\n          className=\"mb-4\" \r\n        />\r\n      )}\r\n      \r\n      <div className=\"space-y-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <Dropdown\r\n            label=\"Export Format\"\r\n            options={formats}\r\n            value={exportOptions.format}\r\n            onChange={(value) => setExportOptions({ ...exportOptions, format: value })}\r\n          />\r\n          \r\n          <Dropdown\r\n            label=\"Date Range\"\r\n            options={dateRanges}\r\n            value={exportOptions.dateRange}\r\n            onChange={(value) => setExportOptions({ ...exportOptions, dateRange: value })}\r\n          />\r\n          \r\n          <div className=\"flex items-center mt-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"includeImages\"\r\n              checked={exportOptions.includeImages}\r\n              onChange={(e) => setExportOptions({ \r\n                ...exportOptions, \r\n                includeImages: e.target.checked \r\n              })}\r\n              className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\r\n            />\r\n            <label htmlFor=\"includeImages\" className=\"ml-2 text-sm text-gray-700\">\r\n              Include receipt images (where available)\r\n            </label>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm text-gray-500\">\r\n              Export your receipt data in your chosen format.\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"flex space-x-2\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              icon={FileText}\r\n              onClick={() => showToast('Template downloaded', 'success')}\r\n            >\r\n              Download Template\r\n            </Button>\r\n            \r\n            <Button\r\n              onClick={handleExport}\r\n              loading={loading}\r\n              icon={FileDown}\r\n            >\r\n              Export Data\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExportSettings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var logger = {\n  info: function info(message, data) {\n    console.log(`[INFO] ${message}`, data !== undefined ? data : '');\n  },\n  error: function error(message, data) {\n    console.error(`[ERROR] ${message}`, data !== undefined ? data : '');\n  },\n  debug: function debug(message, data) {\n    if (process.env.NODE_ENV === 'development') {\n      console.debug(`[DEBUG] ${message}`, data !== undefined ? data : '');\n    }\n  },\n  warn: function warn(message, data) {\n    console.warn(`[WARN] ${message}`, data !== undefined ? data : '');\n  }\n};\nexport default logger;","map":{"version":3,"names":["logger","info","message","data","console","log","undefined","error","debug","process","env","NODE_ENV","warn"],"sources":["C:/Users/user/Documents/app.v3/client/src/shared/services/logger.js"],"sourcesContent":["/**\r\n * @desc A simple client-side logger utility.\r\n * Logs messages to the browser console.\r\n */\r\nconst logger = {\r\n  /**\r\n   * @desc Logs an informational message.\r\n   * @param {string} message - The message to log.\r\n   * @param {*} [data] - Optional additional data to log.\r\n   */\r\n  info: (message, data) => {\r\n    console.log(`[INFO] ${message}`, data !== undefined ? data : '');\r\n  },\r\n\r\n  /**\r\n   * @desc Logs an error message.\r\n   * @param {string} message - The message to log.\r\n   * @param {*} [data] - Optional additional data to log.\r\n   */\r\n  error: (message, data) => {\r\n    console.error(`[ERROR] ${message}`, data !== undefined ? data : '');\r\n  },\r\n\r\n  /**\r\n   * @desc Logs a debug message (only in development).\r\n   * @param {string} message - The message to log.\r\n   * @param {*} [data] - Optional additional data to log.\r\n   */\r\n  debug: (message, data) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.debug(`[DEBUG] ${message}`, data !== undefined ? data : '');\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @desc Logs a warning message.\r\n   * @param {string} message - The message to log.\r\n   * @param {*} [data] - Optional additional data to log.\r\n   */\r\n  warn: (message, data) => {\r\n    console.warn(`[WARN] ${message}`, data !== undefined ? data : '');\r\n  },\r\n};\r\n\r\nexport default logger;\r\n"],"mappings":"AAIA,IAAMA,MAAM,GAAG;EAMbC,IAAI,EAAE,SAANA,IAAIA,CAAGC,OAAO,EAAEC,IAAI,EAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,UAAUH,OAAO,EAAE,EAAEC,IAAI,KAAKG,SAAS,GAAGH,IAAI,GAAG,EAAE,CAAC;EAClE,CAAC;EAODI,KAAK,EAAE,SAAPA,KAAKA,CAAGL,OAAO,EAAEC,IAAI,EAAK;IACxBC,OAAO,CAACG,KAAK,CAAC,WAAWL,OAAO,EAAE,EAAEC,IAAI,KAAKG,SAAS,GAAGH,IAAI,GAAG,EAAE,CAAC;EACrE,CAAC;EAODK,KAAK,EAAE,SAAPA,KAAKA,CAAGN,OAAO,EAAEC,IAAI,EAAK;IACxB,IAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1CP,OAAO,CAACI,KAAK,CAAC,WAAWN,OAAO,EAAE,EAAEC,IAAI,KAAKG,SAAS,GAAGH,IAAI,GAAG,EAAE,CAAC;IACrE;EACF,CAAC;EAODS,IAAI,EAAE,SAANA,IAAIA,CAAGV,OAAO,EAAEC,IAAI,EAAK;IACvBC,OAAO,CAACQ,IAAI,CAAC,UAAUV,OAAO,EAAE,EAAEC,IAAI,KAAKG,SAAS,GAAGH,IAAI,GAAG,EAAE,CAAC;EACnE;AACF,CAAC;AAED,eAAeH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nfunction logFirebaseStatus(message) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  console.log(`[Firebase] ${message}`, data);\n}\nvar getEnvVar = function getEnvVar(key) {\n  var _process, _process$env, _window, _window$__FIREBASE_CO;\n  var fromProcessEnv = (_process = process) == null ? void 0 : (_process$env = _process.env) == null ? void 0 : _process$env[key];\n  var windowKey = key.replace('REACT_APP_FIREBASE_', '').replace('_', '');\n  var fromWindow = (_window = window) == null ? void 0 : (_window$__FIREBASE_CO = _window.__FIREBASE_CONFIG__) == null ? void 0 : _window$__FIREBASE_CO[windowKey];\n  var value = fromProcessEnv || fromWindow;\n  var source = fromProcessEnv ? 'process.env' : fromWindow ? 'window.__FIREBASE_CONFIG__' : 'not found';\n  if (key.includes('API_KEY') || key.includes('APP_ID')) {\n    console.log(`[Firebase] ${key.replace('REACT_APP_FIREBASE_', '')}: ${value ? value.substring(0, 3) + '...' + value.substring(value.length - 3) : 'undefined'} (from ${source})`);\n  } else {\n    console.log(`[Firebase] ${key.replace('REACT_APP_FIREBASE_', '')}: ${value || 'undefined'} (from ${source})`);\n  }\n  return value;\n};\nvar hardcodedDevConfig = {};\nvar firebaseConfig = {\n  apiKey: getEnvVar('REACT_APP_FIREBASE_API_KEY') || hardcodedDevConfig.apiKey,\n  authDomain: getEnvVar('REACT_APP_FIREBASE_AUTH_DOMAIN') || hardcodedDevConfig.authDomain,\n  projectId: getEnvVar('REACT_APP_FIREBASE_PROJECT_ID') || hardcodedDevConfig.projectId,\n  storageBucket: getEnvVar('REACT_APP_FIREBASE_STORAGE_BUCKET') || hardcodedDevConfig.storageBucket,\n  messagingSenderId: getEnvVar('REACT_APP_FIREBASE_MESSAGING_SENDER_ID') || hardcodedDevConfig.messagingSenderId,\n  appId: getEnvVar('REACT_APP_FIREBASE_APP_ID') || hardcodedDevConfig.appId,\n  measurementId: getEnvVar('REACT_APP_FIREBASE_MEASUREMENT_ID') || hardcodedDevConfig.measurementId\n};\nvar hasMinConfig = firebaseConfig.apiKey && firebaseConfig.authDomain && firebaseConfig.projectId;\nvar app;\nvar auth;\nvar db;\nvar storage;\ntry {\n  console.log('[Firebase] Initializing Firebase app...');\n  if (!hasMinConfig) {\n    var missingKeys = Object.keys(firebaseConfig).filter(function (key) {\n      return !firebaseConfig[key];\n    });\n    throw new Error(`Missing required Firebase configuration values: ${missingKeys.join(', ')}. Check environment variables.`);\n  }\n  if (!getApps().length) {\n    app = initializeApp(firebaseConfig);\n    console.log('[Firebase] Firebase app initialized successfully:', app.name);\n  } else {\n    console.log('[Firebase] Firebase app already initialized');\n    app = getApps()[0];\n  }\n  try {\n    auth = getAuth(app);\n    console.log('[Firebase] Auth service initialized.');\n  } catch (authError) {\n    console.error('[Firebase] Auth service initialization failed:', authError);\n  }\n  try {\n    db = getFirestore(app);\n    console.log('[Firebase] Firestore service initialized.');\n  } catch (firestoreError) {\n    console.error('[Firebase] Firestore service initialization failed:', firestoreError);\n  }\n  try {\n    storage = getStorage(app);\n    console.log('[Firebase] Storage service initialized.');\n  } catch (storageError) {\n    console.error('[Firebase] Storage service initialization failed:', storageError);\n  }\n  console.log('[Firebase] Firebase initialization process completed.');\n} catch (error) {\n  console.error('CRITICAL ERROR: Firebase initialization failed', error);\n  console.error('[Firebase] Initialization error details:', error);\n  if (process.env.NODE_ENV === 'development') {\n    console.warn('[Firebase] Using mock implementations for development');\n  }\n}\nexport { app, auth, db, storage };","map":{"version":3,"names":["initializeApp","getApps","getAuth","getFirestore","getStorage","logFirebaseStatus","message","data","arguments","length","undefined","console","log","getEnvVar","key","_process","_process$env","_window","_window$__FIREBASE_CO","fromProcessEnv","process","env","windowKey","replace","fromWindow","window","__FIREBASE_CONFIG__","value","source","includes","substring","hardcodedDevConfig","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","hasMinConfig","app","auth","db","storage","missingKeys","Object","keys","filter","Error","join","name","authError","error","firestoreError","storageError","NODE_ENV","warn"],"sources":["C:/Users/user/Documents/app.v3/client/src/core/config/firebase.js"],"sourcesContent":["// Modified as part of build error fix task on 2025-05-08, 3:14:17 AM\r\n// Implemented robust environment variable loading with fallbacks to address undefined env variables.\r\n// Enhanced error handling during Firebase initialization.\r\n\r\nimport { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n// Constants from expo-constants might still be useful for other configurations,\r\n// but we will prioritize process.env and window.__FIREBASE_CONFIG__ for Firebase config.\r\n// import Constants from 'expo-constants';\r\n\r\n// --- Diagnostic Logging Function ---\r\nfunction logFirebaseStatus(message, data = {}) {\r\n  console.log(`[Firebase] ${message}`, data);\r\n}\r\n\r\n// --- Robust Environment Variable Loading ---\r\nconst getEnvVar = (key) => {\r\n  // Try process.env (injected by webpack DefinePlugin)\r\n  const fromProcessEnv = process?.env?.[key];\r\n  \r\n  // Try window.__FIREBASE_CONFIG__ if it exists (could be set by a script tag in index.html)\r\n  // We need to map the key names if using window.__FIREBASE_CONFIG__\r\n  const windowKey = key.replace('REACT_APP_FIREBASE_', '').replace('_', ''); // Simple mapping, adjust if needed\r\n  const fromWindow = window?.__FIREBASE_CONFIG__?.[windowKey];\r\n  \r\n  // Determine the source and value\r\n  const value = fromProcessEnv || fromWindow;\r\n  const source = fromProcessEnv ? 'process.env' : (fromWindow ? 'window.__FIREBASE_CONFIG__' : 'not found');\r\n  \r\n  // Log the source and value (partially masked for sensitive values)\r\n  if (key.includes('API_KEY') || key.includes('APP_ID')) {\r\n    // Mask sensitive values\r\n    console.log(`[Firebase] ${key.replace('REACT_APP_FIREBASE_', '')}: ${value ? (value.substring(0, 3) + '...' + value.substring(value.length - 3)) : 'undefined'} (from ${source})`);\r\n  } else {\r\n    console.log(`[Firebase] ${key.replace('REACT_APP_FIREBASE_', '')}: ${value || 'undefined'} (from ${source})`);\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\n// Explicit hardcoded configuration as absolute fallback (get from Firebase console)\r\n// ONLY USE THIS IN DEVELOPMENT, AND DO NOT COMMIT API KEYS TO VERSION CONTROL\r\nconst hardcodedDevConfig = {\r\n  // apiKey: \"YOUR_FIREBASE_API_KEY\",\r\n  // authDomain: \"YOUR_FIREBASE_AUTH_DOMAIN\",\r\n  // projectId: \"YOUR_FIREBASE_PROJECT_ID\",\r\n  // storageBucket: \"YOUR_FIREBASE_STORAGE_BUCKET\",\r\n  // messagingSenderId: \"YOUR_FIREBASE_MESSAGING_SENDER_ID\",\r\n  // appId: \"YOUR_FIREBASE_APP_ID\",\r\n  // measurementId: \"YOUR_FIREBASE_MEASUREMENT_ID\"\r\n};\r\n\r\n// Get firebase configuration with fallbacks\r\nconst firebaseConfig = {\r\n  apiKey: getEnvVar('REACT_APP_FIREBASE_API_KEY') || hardcodedDevConfig.apiKey,\r\n  authDomain: getEnvVar('REACT_APP_FIREBASE_AUTH_DOMAIN') || hardcodedDevConfig.authDomain,\r\n  projectId: getEnvVar('REACT_APP_FIREBASE_PROJECT_ID') || hardcodedDevConfig.projectId,\r\n  storageBucket: getEnvVar('REACT_APP_FIREBASE_STORAGE_BUCKET') || hardcodedDevConfig.storageBucket,\r\n  messagingSenderId: getEnvVar('REACT_APP_FIREBASE_MESSAGING_SENDER_ID') || hardcodedDevConfig.messagingSenderId,\r\n  appId: getEnvVar('REACT_APP_FIREBASE_APP_ID') || hardcodedDevConfig.appId,\r\n  measurementId: getEnvVar('REACT_APP_FIREBASE_MEASUREMENT_ID') || hardcodedDevConfig.measurementId\r\n};\r\n\r\n// Check if we have minimum required configuration\r\nconst hasMinConfig = firebaseConfig.apiKey && firebaseConfig.authDomain && firebaseConfig.projectId;\r\n\r\n// --- Core Firebase Services ---\r\nlet app;\r\nlet auth;\r\nlet db;\r\nlet storage;\r\n\r\n// --- Initialize Firebase with Enhanced Error Handling ---\r\ntry {\r\n  console.log('[Firebase] Initializing Firebase app...');\r\n  \r\n  if (!hasMinConfig) {\r\n    const missingKeys = Object.keys(firebaseConfig).filter(key => !firebaseConfig[key]);\r\n    throw new Error(`Missing required Firebase configuration values: ${missingKeys.join(', ')}. Check environment variables.`);\r\n  }\r\n  \r\n  // Check if Firebase is already initialized\r\n  if (!getApps().length) {\r\n    app = initializeApp(firebaseConfig);\r\n    console.log('[Firebase] Firebase app initialized successfully:', app.name);\r\n  } else {\r\n    console.log('[Firebase] Firebase app already initialized');\r\n    app = getApps()[0];\r\n  }\r\n\r\n  // Initialize services with individual error handling\r\n  try {\r\n    auth = getAuth(app);\r\n    console.log('[Firebase] Auth service initialized.');\r\n  } catch (authError) {\r\n    console.error('[Firebase] Auth service initialization failed:', authError);\r\n    // Decide whether to re-throw or continue with other services\r\n    // throw authError; // Uncomment to stop initialization on Auth failure\r\n  }\r\n\r\n  try {\r\n    db = getFirestore(app);\r\n    console.log('[Firebase] Firestore service initialized.');\r\n  } catch (firestoreError) {\r\n    console.error('[Firebase] Firestore service initialization failed:', firestoreError);\r\n    // Decide whether to re-throw or continue\r\n  }\r\n\r\n  try {\r\n    storage = getStorage(app);\r\n    console.log('[Firebase] Storage service initialized.');\r\n  } catch (storageError) {\r\n    console.error('[Firebase] Storage service initialization failed:', storageError);\r\n    // Decide whether to re-throw or continue\r\n  }\r\n\r\n  console.log('[Firebase] Firebase initialization process completed.');\r\n\r\n} catch (error) {\r\n  console.error('CRITICAL ERROR: Firebase initialization failed', error);\r\n  console.error('[Firebase] Initialization error details:', error);\r\n  \r\n  // Optional: Set up mock implementations for development if Firebase fails\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.warn('[Firebase] Using mock implementations for development');\r\n    // Set up mock implementations here if needed\r\n    // Example: auth = { currentUser: null, onAuthStateChanged: () => () => {} };\r\n  }\r\n  // Re-throw the error to halt the application if initialization is critical\r\n  // throw error;\r\n}\r\n\r\n// Export Firebase services\r\nexport { app, auth, db, storage };\r\n// Export default for backward compatibility (optional, depending on usage)\r\n// export default firebaseConfig; // Removed as config is now accessed via getEnvVar and firebaseConfig object is internal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
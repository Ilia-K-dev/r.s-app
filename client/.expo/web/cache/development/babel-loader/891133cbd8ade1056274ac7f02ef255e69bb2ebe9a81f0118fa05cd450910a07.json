{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Progress = function Progress(_ref) {\n  var _ref$value = _ref.value,\n    value = _ref$value === void 0 ? 0 : _ref$value,\n    _ref$max = _ref.max,\n    max = _ref$max === void 0 ? 100 : _ref$max,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'primary' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'md' : _ref$size,\n    _ref$showLabel = _ref.showLabel,\n    showLabel = _ref$showLabel === void 0 ? false : _ref$showLabel,\n    _ref$striped = _ref.striped,\n    striped = _ref$striped === void 0 ? false : _ref$striped,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? false : _ref$animated,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className;\n  var normalizedValue = Math.min(Math.max(0, value), max);\n  var percentage = normalizedValue / max * 100;\n  var colors = {\n    primary: 'bg-primary-600',\n    success: 'bg-green-600',\n    warning: 'bg-yellow-500',\n    danger: 'bg-red-600',\n    info: 'bg-blue-600'\n  };\n  var sizes = {\n    xs: 'h-1',\n    sm: 'h-2',\n    md: 'h-3',\n    lg: 'h-4',\n    xl: 'h-5'\n  };\n  var baseClasses = 'relative bg-gray-200 rounded-full overflow-hidden';\n  var sizeClass = sizes[size] || sizes.md;\n  var getBgColor = function getBgColor() {\n    if (percentage >= 100) return colors.success;\n    if (percentage >= 80) return colors.warning;\n    if (percentage >= 60) return colors.primary;\n    return colors[color] || colors.primary;\n  };\n  return _jsxs(\"div\", {\n    className: \"w-full\",\n    children: [_jsxs(\"div\", {\n      className: `${baseClasses} ${sizeClass} ${className}`,\n      children: [_jsx(\"div\", {\n        className: `\n            absolute left-0 top-0 bottom-0 \n            ${getBgColor()} \n            transition-all duration-300 ease-out \n            ${striped ? 'progress-striped' : ''} \n            ${animated ? 'progress-animated' : ''}\n          `,\n        style: {\n          width: `${percentage}%`\n        },\n        role: \"progressbar\",\n        \"aria-valuenow\": normalizedValue,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": max\n      }), showLabel && _jsx(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center\",\n        children: _jsxs(\"span\", {\n          className: `\n              text-xs font-medium \n              ${percentage > 50 ? 'text-white' : 'text-gray-700'}\n            `,\n          children: [percentage.toFixed(1), \"%\"]\n        })\n      })]\n    }), showLabel && _jsxs(\"div\", {\n      className: \"mt-1 flex justify-between text-xs text-gray-500\",\n      children: [_jsx(\"span\", {\n        children: normalizedValue\n      }), _jsx(\"span\", {\n        children: max\n      })]\n    })]\n  });\n};\nProgress.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.number,\n  color: PropTypes.oneOf(['primary', 'success', 'warning', 'danger', 'info']),\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  showLabel: PropTypes.bool,\n  striped: PropTypes.bool,\n  animated: PropTypes.bool,\n  className: PropTypes.string\n};\nexport default Progress;","map":{"version":3,"names":["PropTypes","React","jsx","_jsx","jsxs","_jsxs","Progress","_ref","_ref$value","value","_ref$max","max","_ref$color","color","_ref$size","size","_ref$showLabel","showLabel","_ref$striped","striped","_ref$animated","animated","_ref$className","className","normalizedValue","Math","min","percentage","colors","primary","success","warning","danger","info","sizes","xs","sm","md","lg","xl","baseClasses","sizeClass","getBgColor","children","style","width","role","toFixed","propTypes","number","oneOf","bool","string"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/reports/Progress.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Progress = ({\r\n  value = 0,\r\n  max = 100,\r\n  color = 'primary',\r\n  size = 'md',\r\n  showLabel = false,\r\n  striped = false,\r\n  animated = false,\r\n  className = '',\r\n}) => {\r\n  // Normalize value between 0 and max\r\n  const normalizedValue = Math.min(Math.max(0, value), max);\r\n  const percentage = (normalizedValue / max) * 100;\r\n\r\n  // Color variants\r\n  const colors = {\r\n    primary: 'bg-primary-600',\r\n    success: 'bg-green-600',\r\n    warning: 'bg-yellow-500',\r\n    danger: 'bg-red-600',\r\n    info: 'bg-blue-600',\r\n  };\r\n\r\n  // Size variants\r\n  const sizes = {\r\n    xs: 'h-1',\r\n    sm: 'h-2',\r\n    md: 'h-3',\r\n    lg: 'h-4',\r\n    xl: 'h-5',\r\n  };\r\n\r\n  // Base classes\r\n  const baseClasses = 'relative bg-gray-200 rounded-full overflow-hidden';\r\n  const sizeClass = sizes[size] || sizes.md;\r\n\r\n  // Background colors for different states\r\n  const getBgColor = () => {\r\n    if (percentage >= 100) return colors.success;\r\n    if (percentage >= 80) return colors.warning;\r\n    if (percentage >= 60) return colors.primary;\r\n    return colors[color] || colors.primary;\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className={`${baseClasses} ${sizeClass} ${className}`}>\r\n        <div\r\n          className={`\r\n            absolute left-0 top-0 bottom-0 \r\n            ${getBgColor()} \r\n            transition-all duration-300 ease-out \r\n            ${striped ? 'progress-striped' : ''} \r\n            ${animated ? 'progress-animated' : ''}\r\n          `}\r\n          style={{ width: `${percentage}%` }}\r\n          role=\"progressbar\"\r\n          aria-valuenow={normalizedValue}\r\n          aria-valuemin={0}\r\n          aria-valuemax={max}\r\n        />\r\n        {showLabel && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <span\r\n              className={`\r\n              text-xs font-medium \r\n              ${percentage > 50 ? 'text-white' : 'text-gray-700'}\r\n            `}\r\n            >\r\n              {percentage.toFixed(1)}%\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {showLabel && (\r\n        <div className=\"mt-1 flex justify-between text-xs text-gray-500\">\r\n          <span>{normalizedValue}</span>\r\n          <span>{max}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProgress.propTypes = {\r\n  value: PropTypes.number,\r\n  max: PropTypes.number,\r\n  color: PropTypes.oneOf(['primary', 'success', 'warning', 'danger', 'info']),\r\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n  showLabel: PropTypes.bool,\r\n  striped: PropTypes.bool,\r\n  animated: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Progress;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigError = void 0;\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar ConfigError = function (_Error) {\n  function ConfigError(message, code, cause) {\n    var _this;\n    _classCallCheck(this, ConfigError);\n    _this = _callSuper(this, ConfigError, [cause ? `${message}\\n└─ Cause: ${cause.name}: ${cause.message}` : message]);\n    _this.code = code;\n    _this.cause = cause;\n    _defineProperty(_this, \"name\", 'ConfigError');\n    _defineProperty(_this, \"isConfigError\", true);\n    return _this;\n  }\n  _inherits(ConfigError, _Error);\n  return _createClass(ConfigError);\n}(_wrapNativeSuper(Error));\nexports.ConfigError = ConfigError;","map":{"version":3,"names":["ConfigError","_Error","message","code","cause","_this","_classCallCheck","_callSuper","name","_defineProperty","_inherits","_createClass","_wrapNativeSuper","Error","exports"],"sources":["C:\\Users\\user\\Documents\\app.v3\\client\\node_modules\\@expo\\config\\src\\Errors.ts"],"sourcesContent":["import { ConfigErrorCode } from './Config.types';\n\n/**\n * Based on `JsonFileError` from `@expo/json-file`\n */\nexport class ConfigError extends Error {\n  readonly name = 'ConfigError';\n  readonly isConfigError = true;\n\n  constructor(message: string, public code: ConfigErrorCode, public cause?: Error) {\n    super(cause ? `${message}\\n└─ Cause: ${cause.name}: ${cause.message}` : message);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKaA,WAAW,aAAAC,MAAA;EAItB,SAAAD,YAAYE,OAAe,EAASC,IAAqB,EAASC,KAAa,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,WAAA;IAC/EK,KAAA,GAAAE,UAAA,OAAAP,WAAA,GAAMI,KAAK,GAAI,GAAEF,OAAQ,eAAcE,KAAK,CAACI,IAAK,KAAIJ,KAAK,CAACF,OAAQ,EAAC,GAAGA,OAAO;IAAEG,KAAA,CAD/CF,IAAqB,GAArBA,IAAqB;IAAAE,KAAA,CAASD,KAAa,GAAbA,KAAa;IAAAK,eAAA,CAAAJ,KAAA,UAH/D,aAAa;IAAAI,eAAA,CAAAJ,KAAA,mBACJ,IAAI;IAAA,OAAAA,KAAA;EAI7B;EAAAK,SAAA,CAAAV,WAAA,EAAAC,MAAA;EAAA,OAAAU,YAAA,CAAAX,WAAA;AAAA,EAAAY,gBAAA,CAN+BC,KAAK;AAOrCC,OAAA,CAAAd,WAAA,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
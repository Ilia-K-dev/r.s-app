{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { formatCurrency } from \"../../../shared/utils/currency\";\nimport { format, parseISO, subMonths, subDays, startOfMonth, endOfMonth } from 'date-fns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SpendingTrends = function SpendingTrends(_ref) {\n  var _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    _ref$timeframe = _ref.timeframe,\n    timeframe = _ref$timeframe === void 0 ? 'month' : _ref$timeframe;\n  var chartData = useMemo(function () {\n    if (!data || data.length === 0) return [];\n    var today = new Date();\n    var groupedData = [];\n    switch (timeframe) {\n      case 'week':\n        var _loop = function _loop() {\n          var date = subDays(today, i);\n          var dateString = format(date, 'MMM dd');\n          var dayTotal = data.filter(function (receipt) {\n            var receiptDate = parseISO(receipt.date);\n            return format(receiptDate, 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd');\n          }).reduce(function (sum, receipt) {\n            return sum + receipt.total;\n          }, 0);\n          groupedData.push({\n            date: dateString,\n            amount: dayTotal\n          });\n        };\n        for (var i = 6; i >= 0; i--) {\n          _loop();\n        }\n        break;\n      case 'month':\n        var _loop2 = function _loop2() {\n          var weekStart = subDays(today, _i * 7 + 6);\n          var weekEnd = subDays(today, _i * 7);\n          var weekTotal = data.filter(function (receipt) {\n            var receiptDate = parseISO(receipt.date);\n            return receiptDate >= weekStart && receiptDate <= weekEnd;\n          }).reduce(function (sum, receipt) {\n            return sum + receipt.total;\n          }, 0);\n          groupedData.push({\n            date: `Week ${4 - _i}`,\n            amount: weekTotal\n          });\n        };\n        for (var _i = 3; _i >= 0; _i--) {\n          _loop2();\n        }\n        break;\n      case 'quarter':\n        var _loop3 = function _loop3() {\n          var month = subMonths(today, _i2);\n          var monthStart = startOfMonth(month);\n          var monthEnd = endOfMonth(month);\n          var monthTotal = data.filter(function (receipt) {\n            var receiptDate = parseISO(receipt.date);\n            return receiptDate >= monthStart && receiptDate <= monthEnd;\n          }).reduce(function (sum, receipt) {\n            return sum + receipt.total;\n          }, 0);\n          groupedData.push({\n            date: format(month, 'MMM yyyy'),\n            amount: monthTotal\n          });\n        };\n        for (var _i2 = 2; _i2 >= 0; _i2--) {\n          _loop3();\n        }\n        break;\n      case 'year':\n        var _loop4 = function _loop4() {\n          var month = subMonths(today, _i3);\n          var monthStart = startOfMonth(month);\n          var monthEnd = endOfMonth(month);\n          var monthTotal = data.filter(function (receipt) {\n            var receiptDate = parseISO(receipt.date);\n            return receiptDate >= monthStart && receiptDate <= monthEnd;\n          }).reduce(function (sum, receipt) {\n            return sum + receipt.total;\n          }, 0);\n          groupedData.push({\n            date: format(month, 'MMM'),\n            amount: monthTotal\n          });\n        };\n        for (var _i3 = 11; _i3 >= 0; _i3--) {\n          _loop4();\n        }\n        break;\n      default:\n        var _loop5 = function _loop5() {\n          var month = subMonths(today, _i4);\n          var monthStart = startOfMonth(month);\n          var monthEnd = endOfMonth(month);\n          var monthTotal = data.filter(function (receipt) {\n            var receiptDate = parseISO(receipt.date);\n            return receiptDate >= monthStart && receiptDate <= monthEnd;\n          }).reduce(function (sum, receipt) {\n            return sum + receipt.total;\n          }, 0);\n          groupedData.push({\n            date: format(month, 'MMM'),\n            amount: monthTotal\n          });\n        };\n        for (var _i4 = 11; _i4 >= 0; _i4--) {\n          _loop5();\n        }\n    }\n    return groupedData;\n  }, [data, timeframe]);\n  if (chartData.length === 0) {\n    return _jsx(\"div\", {\n      className: \"h-full flex items-center justify-center text-gray-500\",\n      children: \"No data available\"\n    });\n  }\n  return _jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: _jsxs(BarChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [_jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#E5E7EB\"\n      }), _jsx(XAxis, {\n        dataKey: \"date\",\n        stroke: \"#6B7280\",\n        fontSize: 12\n      }), _jsx(YAxis, {\n        stroke: \"#6B7280\",\n        fontSize: 12,\n        tickFormatter: function tickFormatter(value) {\n          return formatCurrency(value);\n        }\n      }), _jsx(Tooltip, {\n        formatter: function formatter(value) {\n          return [formatCurrency(value), 'Amount'];\n        },\n        labelStyle: {\n          color: '#111827'\n        },\n        contentStyle: {\n          backgroundColor: '#FFFFFF',\n          border: '1px solid #E5E7EB',\n          borderRadius: '0.375rem',\n          padding: '0.5rem'\n        }\n      }), _jsx(Bar, {\n        dataKey: \"amount\",\n        fill: \"#8884d8\",\n        radius: [4, 4, 0, 0]\n      })]\n    })\n  });\n};\nexport default SpendingTrends;","map":{"version":3,"names":["React","useMemo","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","formatCurrency","format","parseISO","subMonths","subDays","startOfMonth","endOfMonth","jsx","_jsx","jsxs","_jsxs","SpendingTrends","_ref","_ref$data","data","_ref$timeframe","timeframe","chartData","length","today","Date","groupedData","_loop","date","i","dateString","dayTotal","filter","receipt","receiptDate","reduce","sum","total","push","amount","_loop2","weekStart","weekEnd","weekTotal","_loop3","month","monthStart","monthEnd","monthTotal","_loop4","_loop5","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","fontSize","tickFormatter","value","formatter","labelStyle","color","contentStyle","backgroundColor","border","borderRadius","padding","fill","radius"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/SpendingTrends.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { formatCurrency } from '../../../shared/utils/currency';\r\nimport { format, parseISO, subMonths, subDays, startOfMonth, endOfMonth } from 'date-fns';\r\n\r\nexport const SpendingTrends = ({ data = [], timeframe = 'month' }) => {\r\n  const chartData = useMemo(() => {\r\n    if (!data || data.length === 0) return [];\r\n\r\n    const today = new Date();\r\n    let groupedData = [];\r\n    \r\n    switch (timeframe) {\r\n      case 'week':\r\n        // Last 7 days by day\r\n        for (let i = 6; i >= 0; i--) {\r\n          const date = subDays(today, i);\r\n          const dateString = format(date, 'MMM dd');\r\n          const dayTotal = data\r\n            .filter(receipt => {\r\n              const receiptDate = parseISO(receipt.date);\r\n              return format(receiptDate, 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd');\r\n            })\r\n            .reduce((sum, receipt) => sum + receipt.total, 0);\r\n            \r\n          groupedData.push({\r\n            date: dateString,\r\n            amount: dayTotal\r\n          });\r\n        }\r\n        break;\r\n        \r\n      case 'month':\r\n        // Last 4 weeks by week\r\n        for (let i = 3; i >= 0; i--) {\r\n          const weekStart = subDays(today, i * 7 + 6);\r\n          const weekEnd = subDays(today, i * 7);\r\n          \r\n          const weekTotal = data\r\n            .filter(receipt => {\r\n              const receiptDate = parseISO(receipt.date);\r\n              return receiptDate >= weekStart && receiptDate <= weekEnd;\r\n            })\r\n            .reduce((sum, receipt) => sum + receipt.total, 0);\r\n            \r\n          groupedData.push({\r\n            date: `Week ${4-i}`,\r\n            amount: weekTotal\r\n          });\r\n        }\r\n        break;\r\n        \r\n      case 'quarter':\r\n        // Last 3 months by month\r\n        for (let i = 2; i >= 0; i--) {\r\n          const month = subMonths(today, i);\r\n          const monthStart = startOfMonth(month);\r\n          const monthEnd = endOfMonth(month);\r\n          \r\n          const monthTotal = data\r\n            .filter(receipt => {\r\n              const receiptDate = parseISO(receipt.date);\r\n              return receiptDate >= monthStart && receiptDate <= monthEnd;\r\n            })\r\n            .reduce((sum, receipt) => sum + receipt.total, 0);\r\n            \r\n          groupedData.push({\r\n            date: format(month, 'MMM yyyy'),\r\n            amount: monthTotal\r\n          });\r\n        }\r\n        break;\r\n        \r\n      case 'year':\r\n        // Last 12 months by month\r\n        for (let i = 11; i >= 0; i--) {\r\n          const month = subMonths(today, i);\r\n          const monthStart = startOfMonth(month);\r\n          const monthEnd = endOfMonth(month);\r\n          \r\n          const monthTotal = data\r\n            .filter(receipt => {\r\n              const receiptDate = parseISO(receipt.date);\r\n              return receiptDate >= monthStart && receiptDate <= monthEnd;\r\n            })\r\n            .reduce((sum, receipt) => sum + receipt.total, 0);\r\n            \r\n          groupedData.push({\r\n            date: format(month, 'MMM'),\r\n            amount: monthTotal\r\n          });\r\n        }\r\n        break;\r\n        \r\n      default:\r\n        // Default to monthly\r\n        for (let i = 11; i >= 0; i--) {\r\n          const month = subMonths(today, i);\r\n          const monthStart = startOfMonth(month);\r\n          const monthEnd = endOfMonth(month);\r\n          \r\n          const monthTotal = data\r\n            .filter(receipt => {\r\n              const receiptDate = parseISO(receipt.date);\r\n              return receiptDate >= monthStart && receiptDate <= monthEnd;\r\n            })\r\n            .reduce((sum, receipt) => sum + receipt.total, 0);\r\n            \r\n          groupedData.push({\r\n            date: format(month, 'MMM'),\r\n            amount: monthTotal\r\n          });\r\n        }\r\n    }\r\n    \r\n    return groupedData;\r\n  }, [data, timeframe]);\r\n\r\n  if (chartData.length === 0) {\r\n    return (\r\n      <div className=\"h-full flex items-center justify-center text-gray-500\">\r\n        No data available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <BarChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n        <XAxis \r\n          dataKey=\"date\" \r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n        />\r\n        <YAxis \r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n          tickFormatter={(value) => formatCurrency(value)}\r\n        />\r\n        <Tooltip\r\n          formatter={(value) => [formatCurrency(value), 'Amount']}\r\n          labelStyle={{ color: '#111827' }}\r\n          contentStyle={{\r\n            backgroundColor: '#FFFFFF',\r\n            border: '1px solid #E5E7EB',\r\n            borderRadius: '0.375rem',\r\n            padding: '0.5rem'\r\n          }}\r\n        />\r\n        <Bar \r\n          dataKey=\"amount\" \r\n          fill=\"#8884d8\" \r\n          radius={[4, 4, 0, 0]}\r\n        />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SpendingTrends;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
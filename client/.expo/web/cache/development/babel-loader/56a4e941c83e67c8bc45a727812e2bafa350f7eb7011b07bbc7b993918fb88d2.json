{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { format } from 'date-fns';\nimport React, { useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Card } from \"../../../shared/components/ui/Card\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SpendingChart = function SpendingChart(_ref) {\n  var data = _ref.data;\n  var chartData = useMemo(function () {\n    if (!(data != null && data.length)) return [];\n    var groupedData = data.reduce(function (acc, receipt) {\n      var date = format(new Date(receipt.date), 'MMM dd');\n      acc[date] = (acc[date] || 0) + receipt.total;\n      return acc;\n    }, {});\n    return Object.entries(groupedData).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        date = _ref3[0],\n        amount = _ref3[1];\n      return {\n        date: date,\n        amount: amount\n      };\n    });\n  }, [data]);\n  return _jsxs(Card, {\n    className: \"h-[400px]\",\n    children: [_jsx(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: _jsx(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900\",\n        children: \"Spending Trend\"\n      })\n    }), _jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: _jsxs(LineChart, {\n        data: chartData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [_jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#E5E7EB\"\n        }), _jsx(XAxis, {\n          dataKey: \"date\",\n          stroke: \"#6B7280\",\n          fontSize: 12\n        }), _jsx(YAxis, {\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickFormatter: function tickFormatter(value) {\n            return `$${value}`;\n          }\n        }), _jsx(Tooltip, {\n          formatter: function formatter(value) {\n            return [`$${value}`, 'Amount'];\n          },\n          labelStyle: {\n            color: '#111827'\n          },\n          contentStyle: {\n            background: '#FFFFFF',\n            border: '1px solid #E5E7EB',\n            borderRadius: '0.375rem',\n            padding: '0.5rem'\n          }\n        }), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"amount\",\n          stroke: \"#0EA5E9\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#0EA5E9',\n            r: 4\n          },\n          activeDot: {\n            r: 6\n          }\n        })]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["format","React","useMemo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Card","jsx","_jsx","jsxs","_jsxs","SpendingChart","_ref","data","chartData","length","groupedData","reduce","acc","receipt","date","Date","total","Object","entries","map","_ref2","_ref3","_slicedToArray","amount","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","fontSize","tickFormatter","value","formatter","labelStyle","color","contentStyle","background","border","borderRadius","padding","type","strokeWidth","dot","fill","r","activeDot"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/SpendingChart.js"],"sourcesContent":["import { format } from 'date-fns'; //correct\r\nimport React, { useMemo } from 'react'; //correct\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts'; //correct\n\r\nimport { Card } from '../../../shared/components/ui/Card'; //correct\r\n\r\nexport const SpendingChart = ({ data }) => {\r\n  const chartData = useMemo(() => {\r\n    if (!data?.length) return [];\r\n\r\n    const groupedData = data.reduce((acc, receipt) => {\r\n      const date = format(new Date(receipt.date), 'MMM dd');\r\n      acc[date] = (acc[date] || 0) + receipt.total;\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(groupedData).map(([date, amount]) => ({\r\n      date,\r\n      amount,\r\n    }));\r\n  }, [data]);\r\n\r\n  return (\r\n    <Card className=\"h-[400px]\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900\">Spending Trend</h3>\r\n      </div>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n          <XAxis dataKey=\"date\" stroke=\"#6B7280\" fontSize={12} />\r\n          <YAxis stroke=\"#6B7280\" fontSize={12} tickFormatter={value => `$${value}`} />\r\n          <Tooltip\r\n            formatter={value => [`$${value}`, 'Amount']}\r\n            labelStyle={{ color: '#111827' }}\r\n            contentStyle={{\r\n              background: '#FFFFFF',\r\n              border: '1px solid #E5E7EB',\r\n              borderRadius: '0.375rem',\r\n              padding: '0.5rem',\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"amount\"\r\n            stroke=\"#0EA5E9\"\r\n            strokeWidth={2}\r\n            dot={{ fill: '#0EA5E9', r: 4 }}\r\n            activeDot={{ r: 6 }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Card>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
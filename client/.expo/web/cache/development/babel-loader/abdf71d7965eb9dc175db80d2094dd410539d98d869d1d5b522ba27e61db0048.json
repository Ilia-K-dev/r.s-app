{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport useReceipts from \"../hooks/useReceipts\";\nimport ReceiptList from \"../components/ReceiptList\";\nimport ReceiptFilters from \"../components/ReceiptFilters\";\nimport Button from \"../../../shared/components/forms/Button\";\nimport Loading from \"../../../shared/components/ui/Loading\";\nimport { Alert } from \"../../../shared/components/ui/Alert\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ReceiptListPage = function ReceiptListPage() {\n  var _useReceipts = useReceipts(),\n    receipts = _useReceipts.receipts,\n    loading = _useReceipts.loading,\n    error = _useReceipts.error,\n    pagination = _useReceipts.pagination,\n    setPagination = _useReceipts.setPagination,\n    filters = _useReceipts.filters,\n    setFilters = _useReceipts.setFilters;\n  var navigate = useNavigate();\n  var handleNewReceiptClick = function handleNewReceiptClick() {\n    navigate('/upload-receipt');\n  };\n  var handleNextPage = function handleNextPage() {\n    if (pagination.hasNextPage) {\n      setPagination(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          startAfter: pagination.lastVisible\n        });\n      });\n    }\n  };\n  var handlePreviousPage = function handlePreviousPage() {\n    console.warn(\"Previous page not fully implemented with cursor-based pagination.\");\n  };\n  var handleFilterChange = function handleFilterChange(newFilters) {\n    setFilters(newFilters);\n    setPagination(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        startAfter: null\n      });\n    });\n  };\n  if (loading) {\n    return _jsx(Loading, {});\n  }\n  if (error) {\n    return _jsxs(\"div\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: [_jsx(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Receipts\"\n      }), _jsx(Alert, {\n        type: \"error\",\n        message: error\n      })]\n    });\n  }\n  return _jsxs(\"div\", {\n    className: \"container mx-auto px-4 py-6\",\n    children: [_jsx(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Receipts\"\n    }), _jsxs(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [_jsx(ReceiptFilters, {\n        currentFilters: filters,\n        onFilterChange: handleFilterChange\n      }), _jsx(Button, {\n        onClick: handleNewReceiptClick,\n        children: \"New Receipt\"\n      })]\n    }), receipts && receipts.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(ReceiptList, {\n        receipts: receipts\n      }), _jsx(\"div\", {\n        className: \"flex justify-center mt-4 space-x-4\",\n        children: _jsx(Button, {\n          onClick: handleNextPage,\n          disabled: !pagination.hasNextPage || loading,\n          children: \"Next Page\"\n        })\n      })]\n    }) : _jsx(\"div\", {\n      className: \"text-center text-gray-500\",\n      children: \"No receipts found.\"\n    })]\n  });\n};\nexport default ReceiptListPage;","map":{"version":3,"names":["React","useReceipts","ReceiptList","ReceiptFilters","Button","Loading","Alert","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ReceiptListPage","_useReceipts","receipts","loading","error","pagination","setPagination","filters","setFilters","navigate","handleNewReceiptClick","handleNextPage","hasNextPage","prev","_objectSpread","startAfter","lastVisible","handlePreviousPage","console","warn","handleFilterChange","newFilters","className","children","type","message","currentFilters","onFilterChange","onClick","length","disabled"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/receipts/pages/ReceiptListPage.js"],"sourcesContent":["import React from 'react';\r\nimport useReceipts from '../hooks/useReceipts';\r\nimport ReceiptList from '../components/ReceiptList';\r\nimport ReceiptFilters from '../components/ReceiptFilters';\r\nimport Button from '../../../shared/components/forms/Button';\r\nimport Loading from '../../../shared/components/ui/Loading';\r\nimport { Alert } from '../../../shared/components/ui/Alert';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ReceiptListPage = () => {\r\n  const { receipts, loading, error, pagination, setPagination, filters, setFilters } = useReceipts();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleNewReceiptClick = () => {\r\n    navigate('/upload-receipt');\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (pagination.hasNextPage) {\r\n      setPagination(prev => ({ ...prev, startAfter: pagination.lastVisible }));\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n      // Note: Implementing \"Previous\" page with cursor-based pagination requires storing\r\n      // the startAfter cursor for each page visited. This is a more complex state management\r\n      // task and is beyond the basic implementation here. For simplicity, only \"Next\" is fully\r\n      // supported with the current hook structure. A full implementation would involve\r\n      // storing a history of lastVisible cursors.\r\n      console.warn(\"Previous page not fully implemented with cursor-based pagination.\");\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setPagination(prev => ({ ...prev, startAfter: null })); // Reset pagination on filter change\r\n  };\r\n\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-6\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Receipts</h1>\r\n        <Alert type=\"error\" message={error} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Receipts</h1>\r\n\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <ReceiptFilters currentFilters={filters} onFilterChange={handleFilterChange} />\r\n        <Button onClick={handleNewReceiptClick}>New Receipt</Button>\r\n      </div>\r\n\r\n      {receipts && receipts.length > 0 ? (\r\n        <>\r\n          <ReceiptList receipts={receipts} />\r\n\r\n          {/* Pagination Controls */}\r\n          <div className=\"flex justify-center mt-4 space-x-4\">\r\n            {/* Previous button is complex with cursor pagination, omitting for basic implementation */}\r\n            {/* <Button onClick={handlePreviousPage} disabled={!pagination.startAfter || loading}>Previous</Button> */}\r\n            <Button onClick={handleNextPage} disabled={!pagination.hasNextPage || loading}>Next Page</Button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"text-center text-gray-500\">No receipts found.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiptListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
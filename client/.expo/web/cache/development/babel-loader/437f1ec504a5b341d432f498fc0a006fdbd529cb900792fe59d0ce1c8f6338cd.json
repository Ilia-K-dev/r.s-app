{"ast":null,"code":"import { format } from 'date-fns';\nimport React from 'react';\nimport { ChartComponent } from \"../../../shared/components/charts/ChartComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TrendLine = function TrendLine(_ref) {\n  var data = _ref.data,\n    title = _ref.title,\n    lines = _ref.lines,\n    xAxisKey = _ref.xAxisKey;\n  var config = {\n    xAxis: xAxisKey,\n    showGrid: false,\n    showLegend: true\n  };\n  return _jsx(ChartComponent, {\n    type: \"line\",\n    data: data,\n    config: config,\n    height: 300\n  });\n};\nexport var MonthlyTrends = function MonthlyTrends(_ref2) {\n  var data = _ref2.data;\n  var formattedData = data.map(function (item) {\n    return {\n      date: format(new Date(item.date), 'MMM yyyy'),\n      total: item.total,\n      average: item.average\n    };\n  });\n  return _jsx(TrendLine, {\n    data: formattedData,\n    title: \"Monthly Spending Trends\",\n    lines: [{\n      dataKey: 'total',\n      color: '#0EA5E9',\n      name: 'Total Spending'\n    }, {\n      dataKey: 'average',\n      color: '#22C55E',\n      name: 'Average Spending'\n    }],\n    xAxisKey: \"date\"\n  });\n};","map":{"version":3,"names":["format","React","ChartComponent","jsx","_jsx","TrendLine","_ref","data","title","lines","xAxisKey","config","xAxis","showGrid","showLegend","type","height","MonthlyTrends","_ref2","formattedData","map","item","date","Date","total","average","dataKey","color","name"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/MonthlyTrends.js"],"sourcesContent":["import { format } from 'date-fns'; //correct\r\nimport React from 'react'; //correct\n\r\nimport { ChartComponent } from '../../../shared/components/charts/ChartComponent'; //correct\r\n\r\nconst TrendLine = ({ data, title, lines, xAxisKey }) => {\r\n  const config = {\r\n    xAxis: xAxisKey,\r\n    showGrid: false,\r\n    showLegend: true,\r\n  };\r\n\r\n  return <ChartComponent type=\"line\" data={data} config={config} height={300} />;\r\n};\r\n\r\nexport const MonthlyTrends = ({ data }) => {\r\n  const formattedData = data.map(item => ({\r\n    date: format(new Date(item.date), 'MMM yyyy'),\r\n    total: item.total,\r\n    average: item.average,\r\n  }));\r\n\r\n  return (\r\n    <TrendLine\r\n      data={formattedData}\r\n      title=\"Monthly Spending Trends\"\r\n      lines={[\r\n        { dataKey: 'total', color: '#0EA5E9', name: 'Total Spending' },\r\n        { dataKey: 'average', color: '#22C55E', name: 'Average Spending' },\r\n      ]}\r\n      xAxisKey=\"date\"\r\n    />\r\n  );\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc;AAA2D,SAAAC,GAAA,IAAAC,IAAA;AAElF,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAyC;EAAA,IAAnCC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;EAC/C,IAAMC,MAAM,GAAG;IACbC,KAAK,EAAEF,QAAQ;IACfG,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE;EACd,CAAC;EAED,OAAOV,IAAA,CAACF,cAAc;IAACa,IAAI,EAAC,MAAM;IAACR,IAAI,EAAEA,IAAK;IAACI,MAAM,EAAEA,MAAO;IAACK,MAAM,EAAE;EAAI,CAAE,CAAC;AAChF,CAAC;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAAiB;EAAA,IAAXX,IAAI,GAAAW,KAAA,CAAJX,IAAI;EAClC,IAAMY,aAAa,GAAGZ,IAAI,CAACa,GAAG,CAAC,UAAAC,IAAI;IAAA,OAAK;MACtCC,IAAI,EAAEtB,MAAM,CAAC,IAAIuB,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE,UAAU,CAAC;MAC7CE,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,OAAO,EAAEJ,IAAI,CAACI;IAChB,CAAC;EAAA,CAAC,CAAC;EAEH,OACErB,IAAA,CAACC,SAAS;IACRE,IAAI,EAAEY,aAAc;IACpBX,KAAK,EAAC,yBAAyB;IAC/BC,KAAK,EAAE,CACL;MAAEiB,OAAO,EAAE,OAAO;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAiB,CAAC,EAC9D;MAAEF,OAAO,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAmB,CAAC,CAClE;IACFlB,QAAQ,EAAC;EAAM,CAChB,CAAC;AAEN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
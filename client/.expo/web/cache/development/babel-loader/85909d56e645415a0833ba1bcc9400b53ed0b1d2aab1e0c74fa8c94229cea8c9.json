{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useMemo } from 'react';\nimport { ResponsiveContainer, LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { formatCurrency } from \"../../src/shared/utils/currency\";\nimport { generateChartColors } from \"../../../utils/chartHelpers\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LineChart = function LineChart(_ref) {\n  var _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    _ref$lines = _ref.lines,\n    lines = _ref$lines === void 0 ? [{\n      key: 'value',\n      name: 'Value',\n      color: '#0EA5E9'\n    }] : _ref$lines,\n    _ref$xAxisKey = _ref.xAxisKey,\n    xAxisKey = _ref$xAxisKey === void 0 ? 'date' : _ref$xAxisKey,\n    _ref$yAxisFormatter = _ref.yAxisFormatter,\n    yAxisFormatter = _ref$yAxisFormatter === void 0 ? function (value) {\n      return formatCurrency(value);\n    } : _ref$yAxisFormatter,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 400 : _ref$height,\n    _ref$showGrid = _ref.showGrid,\n    showGrid = _ref$showGrid === void 0 ? true : _ref$showGrid,\n    _ref$showLegend = _ref.showLegend,\n    showLegend = _ref$showLegend === void 0 ? true : _ref$showLegend,\n    _ref$showTooltip = _ref.showTooltip,\n    showTooltip = _ref$showTooltip === void 0 ? true : _ref$showTooltip,\n    _ref$curved = _ref.curved,\n    curved = _ref$curved === void 0 ? true : _ref$curved,\n    _ref$dotSize = _ref.dotSize,\n    dotSize = _ref$dotSize === void 0 ? 4 : _ref$dotSize,\n    _ref$strokeWidth = _ref.strokeWidth,\n    strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth;\n  var chartLines = useMemo(function () {\n    var colors = generateChartColors(lines.length);\n    return lines.map(function (line, index) {\n      return _objectSpread(_objectSpread({}, line), {}, {\n        color: line.color || colors[index]\n      });\n    });\n  }, [lines]);\n  var CustomTooltip = function CustomTooltip(_ref2) {\n    var active = _ref2.active,\n      payload = _ref2.payload,\n      label = _ref2.label;\n    if (!active || !payload || !payload.length) return null;\n    return _jsxs(\"div\", {\n      className: \"bg-white p-3 rounded-lg shadow-lg border\",\n      children: [_jsx(\"p\", {\n        className: \"font-medium text-gray-900 mb-2\",\n        children: label\n      }), payload.map(function (entry, index) {\n        return _jsxs(\"p\", {\n          className: \"text-sm\",\n          style: {\n            color: entry.color\n          },\n          children: [entry.name, \": \", yAxisFormatter(entry.value)]\n        }, index);\n      })]\n    });\n  };\n  var CustomLegend = function CustomLegend(_ref3) {\n    var payload = _ref3.payload;\n    if (!showLegend) return null;\n    return _jsx(\"ul\", {\n      className: \"flex flex-wrap justify-center gap-4 mt-4\",\n      children: payload.map(function (entry, index) {\n        return _jsxs(\"li\", {\n          className: \"flex items-center\",\n          children: [_jsx(\"span\", {\n            className: \"w-3 h-3 rounded-full mr-2\",\n            style: {\n              backgroundColor: entry.color\n            }\n          }), _jsx(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: entry.value\n          })]\n        }, `legend-${index}`);\n      })\n    });\n  };\n  return _jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: height\n    },\n    children: _jsx(ResponsiveContainer, {\n      children: _jsxs(RechartsLineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [showGrid && _jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#E5E7EB\",\n          vertical: false\n        }), _jsx(XAxis, {\n          dataKey: xAxisKey,\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickLine: false,\n          axisLine: {\n            stroke: '#E5E7EB'\n          }\n        }), _jsx(YAxis, {\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickLine: false,\n          axisLine: {\n            stroke: '#E5E7EB'\n          },\n          tickFormatter: yAxisFormatter\n        }), showTooltip && _jsx(Tooltip, {\n          content: _jsx(CustomTooltip, {})\n        }), showLegend && _jsx(Legend, {\n          content: _jsx(CustomLegend, {})\n        }), chartLines.map(function (line, index) {\n          return _jsx(Line, {\n            type: curved ? \"monotone\" : \"linear\",\n            dataKey: line.key,\n            name: line.name,\n            stroke: line.color,\n            strokeWidth: strokeWidth,\n            dot: {\n              r: dotSize,\n              fill: line.color,\n              strokeWidth: 0\n            },\n            activeDot: {\n              r: dotSize + 2,\n              fill: line.color,\n              stroke: '#fff',\n              strokeWidth: 2\n            }\n          }, index);\n        })]\n      })\n    })\n  });\n};\nexport default LineChart;","map":{"version":3,"names":["React","useMemo","ResponsiveContainer","LineChart","RechartsLineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","formatCurrency","generateChartColors","jsx","_jsx","jsxs","_jsxs","_ref","_ref$data","data","_ref$lines","lines","key","name","color","_ref$xAxisKey","xAxisKey","_ref$yAxisFormatter","yAxisFormatter","value","_ref$height","height","_ref$showGrid","showGrid","_ref$showLegend","showLegend","_ref$showTooltip","showTooltip","_ref$curved","curved","_ref$dotSize","dotSize","_ref$strokeWidth","strokeWidth","chartLines","colors","length","map","line","index","_objectSpread","CustomTooltip","_ref2","active","payload","label","className","children","entry","style","CustomLegend","_ref3","backgroundColor","width","margin","top","right","left","bottom","strokeDasharray","stroke","vertical","dataKey","fontSize","tickLine","axisLine","tickFormatter","content","type","dot","r","fill","activeDot"],"sources":["C:/Users/user/Documents/app.v3/client/extra/extra/extraLineChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  LineChart as RechartsLineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from 'recharts';\r\nimport { formatCurrency } from '../../src/shared/utils/currency';\r\nimport { generateChartColors } from '../../../utils/chartHelpers';\r\n\r\nconst LineChart = ({\r\n  data = [],\r\n  lines = [{ key: 'value', name: 'Value', color: '#0EA5E9' }],\r\n  xAxisKey = 'date',\r\n  yAxisFormatter = value => formatCurrency(value),\r\n  height = 400,\r\n  showGrid = true,\r\n  showLegend = true,\r\n  showTooltip = true,\r\n  curved = true,\r\n  dotSize = 4,\r\n  strokeWidth = 2\r\n}) => {\r\n  // Generate colors if not all lines have colors specified\r\n  const chartLines = useMemo(() => {\r\n    const colors = generateChartColors(lines.length);\r\n    return lines.map((line, index) => ({\r\n      ...line,\r\n      color: line.color || colors[index]\r\n    }));\r\n  }, [lines]);\r\n\r\n  // Custom tooltip\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (!active || !payload || !payload.length) return null;\r\n\r\n    return (\r\n      <div className=\"bg-white p-3 rounded-lg shadow-lg border\">\r\n        <p className=\"font-medium text-gray-900 mb-2\">{label}</p>\r\n        {payload.map((entry, index) => (\r\n          <p\r\n            key={index}\r\n            className=\"text-sm\"\r\n            style={{ color: entry.color }}\r\n          >\r\n            {entry.name}: {yAxisFormatter(entry.value)}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Custom legend\r\n  const CustomLegend = ({ payload }) => {\r\n    if (!showLegend) return null;\r\n\r\n    return (\r\n      <ul className=\"flex flex-wrap justify-center gap-4 mt-4\">\r\n        {payload.map((entry, index) => (\r\n          <li key={`legend-${index}`} className=\"flex items-center\">\r\n            <span\r\n              className=\"w-3 h-3 rounded-full mr-2\"\r\n              style={{ backgroundColor: entry.color }}\r\n            />\r\n            <span className=\"text-sm text-gray-600\">{entry.value}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%', height }}>\r\n      <ResponsiveContainer>\r\n        <RechartsLineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          {showGrid && (\r\n            <CartesianGrid\r\n              strokeDasharray=\"3 3\"\r\n              stroke=\"#E5E7EB\"\r\n              vertical={false}\r\n            />\r\n          )}\r\n          \r\n          <XAxis\r\n            dataKey={xAxisKey}\r\n            stroke=\"#6B7280\"\r\n            fontSize={12}\r\n            tickLine={false}\r\n            axisLine={{ stroke: '#E5E7EB' }}\r\n          />\r\n          \r\n          <YAxis\r\n            stroke=\"#6B7280\"\r\n            fontSize={12}\r\n            tickLine={false}\r\n            axisLine={{ stroke: '#E5E7EB' }}\r\n            tickFormatter={yAxisFormatter}\r\n          />\r\n          \r\n          {showTooltip && <Tooltip content={<CustomTooltip />} />}\r\n          {showLegend && <Legend content={<CustomLegend />} />}\r\n\r\n          {chartLines.map((line, index) => (\r\n            <Line\r\n              key={index}\r\n              type={curved ? \"monotone\" : \"linear\"}\r\n              dataKey={line.key}\r\n              name={line.name}\r\n              stroke={line.color}\r\n              strokeWidth={strokeWidth}\r\n              dot={{\r\n                r: dotSize,\r\n                fill: line.color,\r\n                strokeWidth: 0\r\n              }}\r\n              activeDot={{\r\n                r: dotSize + 2,\r\n                fill: line.color,\r\n                stroke: '#fff',\r\n                strokeWidth: 2\r\n              }}\r\n            />\r\n          ))}\r\n        </RechartsLineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
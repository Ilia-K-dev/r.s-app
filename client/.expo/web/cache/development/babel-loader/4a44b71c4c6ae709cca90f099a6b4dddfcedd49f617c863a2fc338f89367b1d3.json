{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Download, Share, ChevronLeft, Filter } from 'lucide-react';\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReportFilters } from \"../../../features/analytics/components/reports/ReportFilters\";\nimport { SpendingChart } from \"../../../features/analytics/components/SpendingChart\";\nimport { useReports } from \"../../../features/analytics/hooks/useReports\";\nimport { ChartComponent as CategoryChart, ChartComponent as DonutChart, ChartComponent as LineChart } from \"../../../shared/components/charts/ChartComponent\";\nimport { Button } from \"../../../shared/components/forms/Button\";\nimport PageHeader from \"../../../shared/components/layout/PageHeader\";\nimport { Alert } from \"../../../shared/components/ui//Alert\";\nimport { Card } from \"../../../shared/components/ui/Card\";\nimport { Loading } from \"../../../shared/components/ui/Loading\";\nimport { useToast } from \"../../../shared/hooks/useToast\";\nimport { formatCurrency } from \"../../../shared/utils/currency\";\nimport { formatDate } from \"../../../shared/utils/date\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReportDetailPage = function ReportDetailPage() {\n  var _trendAnalysis$foreca;\n  var _useParams = useParams(),\n    type = _useParams.type;\n  var navigate = useNavigate();\n  var _useToast = useToast(),\n    showToast = _useToast.showToast;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showFilters = _useState2[0],\n    setShowFilters = _useState2[1];\n  var _useReports = useReports(),\n    loading = _useReports.loading,\n    error = _useReports.error,\n    reports = _useReports.reports,\n    filters = _useReports.filters,\n    summaries = _useReports.summaries,\n    categoryAnalysis = _useReports.categoryAnalysis,\n    trendAnalysis = _useReports.trendAnalysis,\n    updateFilters = _useReports.updateFilters,\n    exportReport = _useReports.exportReport;\n  var reportTypes = {\n    spending: {\n      title: 'Spending Analysis',\n      description: 'Detailed breakdown of your spending patterns',\n      component: SpendingChart\n    },\n    category: {\n      title: 'Category Analysis',\n      description: 'Analysis of spending by category',\n      component: CategoryChart\n    }\n  };\n  var currentReport = reportTypes[type];\n  if (!currentReport) {\n    return _jsxs(\"div\", {\n      className: \"p-4\",\n      children: [_jsx(Alert, {\n        type: \"error\",\n        title: \"Invalid Report Type\",\n        message: \"The requested report type does not exist.\"\n      }), _jsx(Button, {\n        variant: \"secondary\",\n        icon: ChevronLeft,\n        onClick: function onClick() {\n          return navigate('/reports');\n        },\n        className: \"mt-4\",\n        children: \"Back to Reports\"\n      })]\n    });\n  }\n  var handleExport = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'csv';\n      try {\n        yield exportReport(format);\n        showToast(`Report exported successfully as ${format.toUpperCase()}`, 'success');\n      } catch (error) {\n        showToast('Failed to export report', 'error');\n      }\n    });\n    return function handleExport() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleShare = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var shareParams = new URLSearchParams({\n          startDate: filters.startDate,\n          endDate: filters.endDate,\n          type: type\n        });\n        var shareUrl = `${window.location.origin}/reports/${type}?${shareParams}`;\n        yield navigator.clipboard.writeText(shareUrl);\n        showToast('Report link copied to clipboard', 'success');\n      } catch (error) {\n        showToast('Failed to copy report link', 'error');\n      }\n    });\n    return function handleShare() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsx(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: _jsx(Loading, {\n        size: \"lg\"\n      })\n    });\n  }\n  return _jsxs(\"div\", {\n    className: \"space-y-6 p-6\",\n    children: [_jsx(PageHeader, {\n      title: currentReport.title,\n      subtitle: currentReport.description,\n      showBack: true,\n      action: _jsxs(\"div\", {\n        className: \"flex space-x-2\",\n        children: [_jsx(Button, {\n          variant: \"secondary\",\n          icon: Filter,\n          onClick: function onClick() {\n            return setShowFilters(!showFilters);\n          },\n          children: \"Filters\"\n        }), _jsx(Button, {\n          variant: \"secondary\",\n          icon: Share,\n          onClick: handleShare,\n          children: \"Share\"\n        }), _jsx(Button, {\n          variant: \"primary\",\n          icon: Download,\n          onClick: function onClick() {\n            return handleExport('csv');\n          },\n          children: \"Export\"\n        })]\n      })\n    }), error && _jsx(Alert, {\n      type: \"error\",\n      title: \"Error loading report\",\n      message: error\n    }), showFilters && _jsx(Card, {\n      className: \"mb-6\",\n      children: _jsx(ReportFilters, {\n        filters: filters,\n        onChange: updateFilters,\n        onClose: function onClose() {\n          return setShowFilters(false);\n        }\n      })\n    }), _jsxs(\"div\", {\n      className: \"grid gap-6\",\n      children: [_jsxs(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n        children: [_jsx(Card, {\n          children: _jsxs(\"div\", {\n            className: \"p-6\",\n            children: [_jsx(\"h3\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Total Spending\"\n            }), _jsx(\"p\", {\n              className: \"mt-2 text-3xl font-semibold text-gray-900\",\n              children: formatCurrency((summaries == null ? void 0 : summaries.totalSpent) || 0)\n            }), _jsxs(\"p\", {\n              className: \"mt-2 text-sm text-gray-500\",\n              children: [formatDate(filters.startDate), \" - \", formatDate(filters.endDate)]\n            })]\n          })\n        }), _jsx(Card, {\n          children: _jsxs(\"div\", {\n            className: \"p-6\",\n            children: [_jsx(\"h3\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Average per Day\"\n            }), _jsx(\"p\", {\n              className: \"mt-2 text-3xl font-semibold text-gray-900\",\n              children: formatCurrency((summaries == null ? void 0 : summaries.avgPerDay) || 0)\n            }), _jsxs(\"p\", {\n              className: \"mt-2 text-sm text-gray-500\",\n              children: [\"Based on \", (summaries == null ? void 0 : summaries.transactionCount) || 0, \" transactions\"]\n            })]\n          })\n        }), _jsx(Card, {\n          children: _jsxs(\"div\", {\n            className: \"p-6\",\n            children: [_jsx(\"h3\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Growth Rate\"\n            }), _jsxs(\"p\", {\n              className: \"mt-2 text-3xl font-semibold text-gray-900\",\n              children: [((trendAnalysis == null ? void 0 : trendAnalysis.growth) || 0).toFixed(1), \"%\"]\n            }), _jsx(\"p\", {\n              className: \"mt-2 text-sm text-gray-500\",\n              children: \"Compared to previous period\"\n            })]\n          })\n        })]\n      }), _jsx(Card, {\n        className: \"p-6\",\n        children: React.createElement(currentReport.component, {\n          data: type === 'spending' ? reports.spending : categoryAnalysis,\n          loading: loading,\n          error: error\n        })\n      }), type === 'spending' && (trendAnalysis == null ? void 0 : (_trendAnalysis$foreca = trendAnalysis.forecast) == null ? void 0 : _trendAnalysis$foreca.length) > 0 && _jsxs(Card, {\n        className: \"p-6\",\n        children: [_jsx(\"h3\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Spending Forecast\"\n        }), _jsxs(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n          children: [_jsxs(\"div\", {\n            className: \"space-y-4\",\n            children: [_jsx(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Based on your spending patterns, here's a forecast for the next period:\"\n            }), trendAnalysis.forecast.map(function (forecast, index) {\n              return _jsxs(\"div\", {\n                className: \"flex justify-between border-b pb-2\",\n                children: [_jsx(\"span\", {\n                  className: \"text-gray-600\",\n                  children: formatDate(forecast.date)\n                }), _jsx(\"span\", {\n                  className: \"font-medium text-gray-900\",\n                  children: formatCurrency(forecast.amount)\n                })]\n              }, index);\n            })]\n          }), _jsx(\"div\", {\n            children: _jsx(LineChart, {\n              data: trendAnalysis.forecast,\n              xAxisKey: \"date\",\n              yAxisKey: \"amount\",\n              color: \"#0EA5E9\"\n            })\n          })]\n        })]\n      }), type === 'category' && (categoryAnalysis == null ? void 0 : categoryAnalysis.length) > 0 && _jsxs(Card, {\n        className: \"p-6\",\n        children: [_jsx(\"h3\", {\n          className: \"text-lg font-medium mb-4\",\n          children: \"Category Breakdown\"\n        }), _jsxs(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n          children: [_jsx(\"div\", {\n            className: \"space-y-4\",\n            children: categoryAnalysis.map(function (category) {\n              return _jsxs(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: [_jsxs(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [_jsx(\"div\", {\n                    className: \"w-3 h-3 rounded-full\",\n                    style: {\n                      backgroundColor: category.color || '#000'\n                    }\n                  }), _jsx(\"span\", {\n                    className: \"text-gray-700\",\n                    children: category.name\n                  })]\n                }), _jsxs(\"div\", {\n                  className: \"text-right\",\n                  children: [_jsx(\"p\", {\n                    className: \"font-medium text-gray-900\",\n                    children: formatCurrency(category.total || 0)\n                  }), _jsxs(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [(category.percentage || 0).toFixed(1), \"%\"]\n                  })]\n                })]\n              }, category.id);\n            })\n          }), _jsx(\"div\", {\n            children: _jsx(DonutChart, {\n              data: categoryAnalysis,\n              nameKey: \"name\",\n              valueKey: \"total\",\n              colors: categoryAnalysis.map(function (cat) {\n                return cat.color || '#000';\n              })\n            })\n          })]\n        })]\n      }), reports.receipts && reports.receipts.length > 0 && _jsxs(Card, {\n        className: \"overflow-hidden\",\n        children: [_jsx(\"div\", {\n          className: \"px-6 py-4 border-b\",\n          children: _jsx(\"h3\", {\n            className: \"text-lg font-medium\",\n            children: \"Related Transactions\"\n          })\n        }), _jsx(\"div\", {\n          className: \"divide-y\",\n          children: reports.receipts.map(function (receipt) {\n            return _jsx(\"div\", {\n              className: \"px-6 py-4 hover:bg-gray-50 cursor-pointer\",\n              onClick: function onClick() {\n                return navigate(`/receipts/${receipt.id}`);\n              },\n              role: \"link\",\n              tabIndex: 0,\n              onKeyDown: function onKeyDown(e) {\n                if (e.key === 'Enter') navigate(`/receipts/${receipt.id}`);\n              },\n              children: _jsxs(\"div\", {\n                className: \"flex justify-between items-start\",\n                children: [_jsxs(\"div\", {\n                  children: [_jsx(\"h4\", {\n                    className: \"font-medium text-gray-900\",\n                    children: receipt.merchant\n                  }), _jsx(\"p\", {\n                    className: \"text-sm text-gray-500\",\n                    children: formatDate(receipt.date)\n                  })]\n                }), _jsxs(\"div\", {\n                  className: \"text-right\",\n                  children: [_jsx(\"p\", {\n                    className: \"font-medium text-gray-900\",\n                    children: formatCurrency(receipt.total)\n                  }), receipt.category && _jsx(\"span\", {\n                    className: \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800\",\n                    children: receipt.category\n                  })]\n                })]\n              })\n            }, receipt.id);\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default ReportDetailPage;","map":{"version":3,"names":["Download","Share","ChevronLeft","Filter","React","useState","useParams","useNavigate","ReportFilters","SpendingChart","useReports","ChartComponent","CategoryChart","DonutChart","LineChart","Button","PageHeader","Alert","Card","Loading","useToast","formatCurrency","formatDate","jsx","_jsx","jsxs","_jsxs","ReportDetailPage","_trendAnalysis$foreca","_useParams","type","navigate","_useToast","showToast","_useState","_useState2","_slicedToArray","showFilters","setShowFilters","_useReports","loading","error","reports","filters","summaries","categoryAnalysis","trendAnalysis","updateFilters","exportReport","reportTypes","spending","title","description","component","category","currentReport","className","children","message","variant","icon","onClick","handleExport","_ref","_asyncToGenerator","format","arguments","length","undefined","toUpperCase","apply","handleShare","_ref2","shareParams","URLSearchParams","startDate","endDate","shareUrl","window","location","origin","navigator","clipboard","writeText","size","subtitle","showBack","action","onChange","onClose","totalSpent","avgPerDay","transactionCount","growth","toFixed","createElement","data","forecast","map","index","date","amount","xAxisKey","yAxisKey","color","style","backgroundColor","name","total","percentage","id","nameKey","valueKey","colors","cat","receipts","receipt","role","tabIndex","onKeyDown","e","key","merchant"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/pages/ReportDetailPage.js"],"sourcesContent":["import { Download, Share, ChevronLeft, Filter } from 'lucide-react'; //correct\r\nimport React, { useState } from 'react'; //correct\r\nimport { useParams, useNavigate } from 'react-router-dom'; //correct\r\n\r\nimport { ReportFilters } from '../../../features/analytics/components/reports/ReportFilters'; //correct\r\nimport { SpendingChart } from '../../../features/analytics/components/SpendingChart'; //correct\r\nimport { useReports } from '../../../features/analytics/hooks/useReports'; //correct\r\nimport { ChartComponent as CategoryChart, ChartComponent as DonutChart, ChartComponent as LineChart } from '../../../shared/components/charts/ChartComponent'; //correct\r\nimport { Button } from '../../../shared/components/forms/Button'; //correct\r\nimport PageHeader from '../../../shared/components/layout/PageHeader'; //correct\r\nimport { Alert } from '../../../shared/components/ui//Alert'; //correct\r\nimport { Card } from '../../../shared/components/ui/Card'; //correct\r\nimport { Loading } from '../../../shared/components/ui/Loading'; //correct\r\nimport { useToast } from '../../../shared/hooks/useToast'; //correct\r\nimport { formatCurrency } from '../../../shared/utils/currency'; //correct\r\nimport { formatDate } from '../../../shared/utils/date'; //correct\r\n\r\nconst ReportDetailPage = () => {\r\n  const { type } = useParams();\r\n  const navigate = useNavigate();\r\n  const { showToast } = useToast();\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  const {\r\n    loading,\r\n    error,\r\n    reports,\r\n    filters,\r\n    summaries,\r\n    categoryAnalysis,\r\n    trendAnalysis,\r\n    updateFilters,\r\n    exportReport,\r\n  } = useReports();\r\n\r\n  // Report type configurations\r\n  const reportTypes = {\r\n    spending: {\r\n      title: 'Spending Analysis',\r\n      description: 'Detailed breakdown of your spending patterns',\r\n      component: SpendingChart,\r\n    },\r\n    category: {\r\n      title: 'Category Analysis',\r\n      description: 'Analysis of spending by category',\r\n      component: CategoryChart,\r\n    },\r\n  };\r\n\r\n  const currentReport = reportTypes[type];\r\n\r\n  if (!currentReport) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <Alert\r\n          type=\"error\"\r\n          title=\"Invalid Report Type\"\r\n          message=\"The requested report type does not exist.\"\r\n        />\r\n        <Button\r\n          variant=\"secondary\"\r\n          icon={ChevronLeft}\r\n          onClick={() => navigate('/reports')}\r\n          className=\"mt-4\"\r\n        >\r\n          Back to Reports\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleExport = async (format = 'csv') => {\r\n    try {\r\n      await exportReport(format);\r\n      showToast(`Report exported successfully as ${format.toUpperCase()}`, 'success');\r\n    } catch (error) {\r\n      showToast('Failed to export report', 'error');\r\n    }\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    try {\r\n      // Only include essential, non-sensitive filters\r\n      const shareParams = new URLSearchParams({\r\n        startDate: filters.startDate,\r\n        endDate: filters.endDate,\r\n        type,\r\n      });\r\n      const shareUrl = `${window.location.origin}/reports/${type}?${shareParams}`;\r\n\r\n      await navigator.clipboard.writeText(shareUrl);\r\n      showToast('Report link copied to clipboard', 'success');\r\n    } catch (error) {\r\n      showToast('Failed to copy report link', 'error');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <Loading size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-6\">\r\n      <PageHeader\r\n        title={currentReport.title}\r\n        subtitle={currentReport.description}\r\n        showBack\r\n        action={\r\n          <div className=\"flex space-x-2\">\r\n            <Button variant=\"secondary\" icon={Filter} onClick={() => setShowFilters(!showFilters)}>\r\n              Filters\r\n            </Button>\r\n            <Button variant=\"secondary\" icon={Share} onClick={handleShare}>\r\n              Share\r\n            </Button>\r\n            <Button variant=\"primary\" icon={Download} onClick={() => handleExport('csv')}>\r\n              Export\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {error && <Alert type=\"error\" title=\"Error loading report\" message={error} />}\r\n\r\n      {showFilters && (\r\n        <Card className=\"mb-6\">\r\n          <ReportFilters\r\n            filters={filters}\r\n            onChange={updateFilters}\r\n            onClose={() => setShowFilters(false)}\r\n          />\r\n        </Card>\r\n      )}\r\n\r\n      <div className=\"grid gap-6\">\r\n        {/* Summary Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <Card>\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-sm font-medium text-gray-500\">Total Spending</h3>\r\n              <p className=\"mt-2 text-3xl font-semibold text-gray-900\">\r\n                {formatCurrency(summaries?.totalSpent || 0)}\r\n              </p>\r\n              <p className=\"mt-2 text-sm text-gray-500\">\r\n                {formatDate(filters.startDate)} - {formatDate(filters.endDate)}\r\n              </p>\r\n            </div>\r\n          </Card>\r\n          <Card>\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-sm font-medium text-gray-500\">Average per Day</h3>\r\n              <p className=\"mt-2 text-3xl font-semibold text-gray-900\">\r\n                {formatCurrency(summaries?.avgPerDay || 0)}\r\n              </p>\r\n              <p className=\"mt-2 text-sm text-gray-500\">\r\n                Based on {summaries?.transactionCount || 0} transactions\r\n              </p>\r\n            </div>\r\n          </Card>\r\n          <Card>\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-sm font-medium text-gray-500\">Growth Rate</h3>\r\n              <p className=\"mt-2 text-3xl font-semibold text-gray-900\">\r\n                {(trendAnalysis?.growth || 0).toFixed(1)}%\r\n              </p>\r\n              <p className=\"mt-2 text-sm text-gray-500\">Compared to previous period</p>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Main Chart */}\r\n        <Card className=\"p-6\">\r\n          {React.createElement(currentReport.component, {\r\n            data: type === 'spending' ? reports.spending : categoryAnalysis,\r\n            loading,\r\n            error,\r\n          })}\r\n        </Card>\r\n\r\n        {/* Forecast Visualization */}\r\n        {type === 'spending' && trendAnalysis?.forecast?.length > 0 && (\r\n          <Card className=\"p-6\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Spending Forecast</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"space-y-4\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Based on your spending patterns, here's a forecast for the next period:\r\n                </p>\r\n                {trendAnalysis.forecast.map((forecast, index) => (\r\n                  <div key={index} className=\"flex justify-between border-b pb-2\">\r\n                    <span className=\"text-gray-600\">{formatDate(forecast.date)}</span>\r\n                    <span className=\"font-medium text-gray-900\">\r\n                      {formatCurrency(forecast.amount)}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div>\r\n                <LineChart\r\n                  data={trendAnalysis.forecast}\r\n                  xAxisKey=\"date\"\r\n                  yAxisKey=\"amount\"\r\n                  color=\"#0EA5E9\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Category Breakdown */}\r\n        {type === 'category' && categoryAnalysis?.length > 0 && (\r\n          <Card className=\"p-6\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Category Breakdown</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"space-y-4\">\r\n                {categoryAnalysis.map(category => (\r\n                  <div key={category.id} className=\"flex justify-between items-center\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div\r\n                        className=\"w-3 h-3 rounded-full\"\r\n                        style={{ backgroundColor: category.color || '#000' }}\r\n                      />\r\n                      <span className=\"text-gray-700\">{category.name}</span>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"font-medium text-gray-900\">\r\n                        {formatCurrency(category.total || 0)}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        {(category.percentage || 0).toFixed(1)}%\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div>\r\n                <DonutChart\r\n                  data={categoryAnalysis}\r\n                  nameKey=\"name\"\r\n                  valueKey=\"total\"\r\n                  colors={categoryAnalysis.map(cat => cat.color || '#000')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Transaction List */}\r\n        {reports.receipts && reports.receipts.length > 0 && (\r\n          <Card className=\"overflow-hidden\">\r\n            <div className=\"px-6 py-4 border-b\">\r\n              <h3 className=\"text-lg font-medium\">Related Transactions</h3>\r\n            </div>\r\n            <div className=\"divide-y\">\r\n              {reports.receipts.map(receipt => (\r\n                <div\r\n                  key={receipt.id}\r\n                  className=\"px-6 py-4 hover:bg-gray-50 cursor-pointer\"\r\n                  onClick={() => navigate(`/receipts/${receipt.id}`)}\r\n                  role=\"link\"\r\n                  tabIndex={0}\r\n                  onKeyDown={(e) => {if (e.key === 'Enter') navigate(`/receipts/${receipt.id}`)}}\r\n                >\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <h4 className=\"font-medium text-gray-900\">{receipt.merchant}</h4>\r\n                      <p className=\"text-sm text-gray-500\">{formatDate(receipt.date)}</p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"font-medium text-gray-900\">{formatCurrency(receipt.total)}</p>\r\n                      {receipt.category && (\r\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800\">\r\n                          {receipt.category}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
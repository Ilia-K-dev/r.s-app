{"ast":null,"code":"import { FirebaseError } from 'firebase/app';\nimport { isFeatureEnabled, disableFeature } from \"../core/config/featureFlags\";\nvar firebaseErrorMessages = {\n  'auth/email-already-in-use': 'This email address is already in use.',\n  'auth/invalid-email': 'The email address is invalid.',\n  'auth/operation-not-allowed': 'Email/password sign in is not enabled.',\n  'auth/weak-password': 'The password is too weak.',\n  'auth/user-disabled': 'This user account has been disabled.',\n  'auth/user-not-found': 'No user found with this email.',\n  'auth/wrong-password': 'Incorrect password.',\n  'auth/popup-closed-by-user': 'Authentication popup closed.',\n  'auth/cancelled-popup-request': 'Multiple authentication popups.',\n  'auth/popup-blocked': 'Authentication popup blocked by browser.',\n  'auth/network-request-failed': 'Network error. Please try again.',\n  'auth/requires-recent-login': 'Please log in again to perform this action.',\n  'permission-denied': 'You do not have permission to perform this action.',\n  'not-found': 'The requested document was not found.',\n  'unavailable': 'The service is currently unavailable. Please try again later.',\n  'cancelled': 'The operation was cancelled.',\n  'unknown': 'An unknown error occurred.',\n  'invalid-argument': 'Invalid argument provided.',\n  'deadline-exceeded': 'The operation timed out.',\n  'resource-exhausted': 'Resource exhausted. You may have exceeded your quota.',\n  'internal': 'An internal error occurred.',\n  'unauthenticated': 'You must be authenticated to perform this action.',\n  'storage/unauthorized': 'You do not have permission to access this file.',\n  'storage/canceled': 'The upload/download was cancelled.',\n  'storage/unknown': 'An unknown error occurred during storage operation.',\n  'storage/object-not-found': 'The requested file was not found.',\n  'storage/quota-exceeded': 'Storage quota exceeded.',\n  'storage/unauthenticated': 'You must be authenticated to perform storage operations.',\n  'storage/cannot-slice-blob': 'File is too large or corrupted.',\n  'default-firebase': 'An unexpected Firebase error occurred.',\n  'default-general': 'An unexpected error occurred.',\n  'automatic-fallback': 'Persistent errors detected. Falling back to API.'\n};\nvar featureFlagErrorCounts = {};\nvar ERROR_THRESHOLD = 3;\nexport var handleError = function handleError(error) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Application';\n  var featureName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var featureEnabled = featureName ? isFeatureEnabled(featureName) : undefined;\n  console.error(`[${context} Error]${featureName ? ` Feature Flag (${featureName}) Enabled: ${featureEnabled}` : ''}`, error);\n  var userMessage = firebaseErrorMessages['default-general'];\n  var isFirebaseError = false;\n  if (error instanceof FirebaseError) {\n    isFirebaseError = true;\n    var errorCode = error.code;\n    userMessage = firebaseErrorMessages[errorCode] || firebaseErrorMessages['default-firebase'];\n    console.error(`[${context} Firebase Error] Code: ${errorCode}, Message: ${error.message}`);\n  } else if (error instanceof Error) {\n    console.error(`[${context} General Error] Message: ${error.message}`);\n    userMessage = error.message || firebaseErrorMessages['default-general'];\n  } else {\n    console.error(`[${context} Unknown Error]`, error);\n    userMessage = firebaseErrorMessages['default-general'];\n  }\n  if (featureName && featureEnabled) {\n    featureFlagErrorCounts[featureName] = (featureFlagErrorCounts[featureName] || 0) + 1;\n    console.warn(`[${context} Error] Consecutive errors for feature \"${featureName}\": ${featureFlagErrorCounts[featureName]}`);\n    if (featureFlagErrorCounts[featureName] >= ERROR_THRESHOLD) {\n      console.error(`[${context} Error] Error threshold reached (${ERROR_THRESHOLD}) for feature \"${featureName}\". Automatically disabling flag.`);\n      disableFeature(featureName);\n      userMessage = firebaseErrorMessages['automatic-fallback'];\n      featureFlagErrorCounts[featureName] = 0;\n      console.warn(`[Feature Flag State Change] Feature \"${featureName}\" has been automatically disabled due to persistent errors.`);\n    }\n  } else if (featureName && !featureEnabled) {\n    featureFlagErrorCounts[featureName] = 0;\n  } else {}\n  return userMessage;\n};\nexport var handleGeneralError = function handleGeneralError(error) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Application';\n  console.error(`[${context} General Error]`, error);\n  var userMessage = firebaseErrorMessages['default-general'];\n  if (error instanceof Error) {\n    userMessage = error.message || userMessage;\n  }\n  return userMessage;\n};","map":{"version":3,"names":["FirebaseError","isFeatureEnabled","disableFeature","firebaseErrorMessages","featureFlagErrorCounts","ERROR_THRESHOLD","handleError","error","context","arguments","length","undefined","featureName","featureEnabled","console","userMessage","isFirebaseError","errorCode","code","message","Error","warn","handleGeneralError"],"sources":["C:/Users/user/Documents/app.v3/client/src/utils/errorHandler.js"],"sourcesContent":["// File: client/src/utils/errorHandler.js\r\n// Date: 2025-05-18 05:37:47\r\n// Description: Centralized utility for handling errors, with feature toggle awareness, automatic fallback logic, and basic error tracking per feature flag.\r\n// Reasoning: Provides a consistent way to process errors, map them to user-friendly messages, log them with context (including feature toggle state), and implement automatic fallback for persistent errors associated with feature flags.\r\n// Potential Optimizations: Integrate with a dedicated logging/error tracking service (e.g., Sentry). Refine fallback logic, error thresholds, and implement a robust gradual recovery system.\r\n\r\nimport { FirebaseError } from 'firebase/app';\r\nimport { isFeatureEnabled, disableFeature } from '../core/config/featureFlags'; // Import feature toggle utilities\r\n\r\n// Map Firebase error codes to user-friendly messages\r\nconst firebaseErrorMessages = {\r\n  // Auth Errors\r\n  'auth/email-already-in-use': 'This email address is already in use.',\r\n  'auth/invalid-email': 'The email address is invalid.',\r\n  'auth/operation-not-allowed': 'Email/password sign in is not enabled.',\r\n  'auth/weak-password': 'The password is too weak.',\r\n  'auth/user-disabled': 'This user account has been disabled.',\r\n  'auth/user-not-found': 'No user found with this email.',\r\n  'auth/wrong-password': 'Incorrect password.',\r\n  'auth/popup-closed-by-user': 'Authentication popup closed.',\r\n  'auth/cancelled-popup-request': 'Multiple authentication popups.',\r\n  'auth/popup-blocked': 'Authentication popup blocked by browser.',\r\n  'auth/network-request-failed': 'Network error. Please try again.',\r\n  'auth/requires-recent-login': 'Please log in again to perform this action.',\r\n\r\n  // Firestore Errors\r\n  'permission-denied': 'You do not have permission to perform this action.',\r\n  'not-found': 'The requested document was not found.',\r\n  'unavailable': 'The service is currently unavailable. Please try again later.',\r\n  'cancelled': 'The operation was cancelled.',\r\n  'unknown': 'An unknown error occurred.',\r\n  'invalid-argument': 'Invalid argument provided.',\r\n  'deadline-exceeded': 'The operation timed out.',\r\n  'resource-exhausted': 'Resource exhausted. You may have exceeded your quota.',\r\n  'internal': 'An internal error occurred.',\r\n  'unauthenticated': 'You must be authenticated to perform this action.',\r\n\r\n  // Storage Errors\r\n  'storage/unauthorized': 'You do not have permission to access this file.',\r\n  'storage/canceled': 'The upload/download was cancelled.',\r\n  'storage/unknown': 'An unknown error occurred during storage operation.',\r\n  'storage/object-not-found': 'The requested file was not found.',\r\n  'storage/quota-exceeded': 'Storage quota exceeded.',\r\n  'storage/unauthenticated': 'You must be authenticated to perform storage operations.',\r\n  'storage/cannot-slice-blob': 'File is too large or corrupted.',\r\n\r\n  // Default message for unhandled Firebase errors\r\n  'default-firebase': 'An unexpected Firebase error occurred.',\r\n  // Default message for non-Firebase errors\r\n  'default-general': 'An unexpected error occurred.',\r\n  // Message for automatic fallback\r\n  'automatic-fallback': 'Persistent errors detected. Falling back to API.',\r\n};\r\n\r\n// Track consecutive errors per feature flag for automatic disabling\r\nconst featureFlagErrorCounts = {};\r\nconst ERROR_THRESHOLD = 3; // Number of consecutive errors before automatic disabling\r\n\r\n/**\r\n * Handles errors, logs them with context and feature toggle state,\r\n * implements automatic disabling for persistent errors associated with feature flags,\r\n * and returns a user-friendly message.\r\n * @param {Error} error The error object.\r\n * @param {string} context Optional context for logging (e.g., \"Login\", \"Fetching Receipts\").\r\n * @param {string} [featureName] Optional name of the feature flag associated with this operation.\r\n * @returns {string} A user-friendly error message.\r\n */\r\nexport const handleError = (error, context = 'Application', featureName = null) => {\r\n  const featureEnabled = featureName ? isFeatureEnabled(featureName) : undefined; // Check flag state if featureName is provided\r\n  console.error(`[${context} Error]${featureName ? ` Feature Flag (${featureName}) Enabled: ${featureEnabled}` : ''}`, error); // Log the full error with toggle state\r\n\r\n  let userMessage = firebaseErrorMessages['default-general'];\r\n  let isFirebaseError = false;\r\n\r\n  if (error instanceof FirebaseError) {\r\n    isFirebaseError = true;\r\n    const errorCode = error.code;\r\n    userMessage = firebaseErrorMessages[errorCode] || firebaseErrorMessages['default-firebase'];\r\n    console.error(`[${context} Firebase Error] Code: ${errorCode}, Message: ${error.message}`);\r\n  } else if (error instanceof Error) {\r\n    // Handle standard JavaScript errors or errors thrown from other parts of the app\r\n    console.error(`[${context} General Error] Message: ${error.message}`);\r\n    userMessage = error.message || firebaseErrorMessages['default-general'];\r\n  } else {\r\n    // Handle cases where the thrown value is not an Error object\r\n    console.error(`[${context} Unknown Error]`, error);\r\n    userMessage = firebaseErrorMessages['default-general'];\r\n  }\r\n\r\n  // --- Automatic Disabling Logic ---\r\n  if (featureName && featureEnabled) {\r\n    // Increment error count for this feature flag\r\n    featureFlagErrorCounts[featureName] = (featureFlagErrorCounts[featureName] || 0) + 1;\r\n    console.warn(`[${context} Error] Consecutive errors for feature \"${featureName}\": ${featureFlagErrorCounts[featureName]}`);\r\n\r\n    if (featureFlagErrorCounts[featureName] >= ERROR_THRESHOLD) {\r\n      console.error(`[${context} Error] Error threshold reached (${ERROR_THRESHOLD}) for feature \"${featureName}\". Automatically disabling flag.`);\r\n      disableFeature(featureName); // Automatically disable the feature flag\r\n      userMessage = firebaseErrorMessages['automatic-fallback']; // Provide fallback message\r\n      // Reset error count after disabling\r\n      featureFlagErrorCounts[featureName] = 0;\r\n      console.warn(`[Feature Flag State Change] Feature \"${featureName}\" has been automatically disabled due to persistent errors.`);\r\n      // TODO: Implement notification system (e.g., send alert to monitoring)\r\n    }\r\n  } else if (featureName && !featureEnabled) {\r\n     // If the feature was already disabled, reset its error count\r\n     featureFlagErrorCounts[featureName] = 0;\r\n  } else {\r\n      // If no featureName is provided, reset all counts (or handle differently based on strategy)\r\n      // For now, we'll just not track/disable if no featureName is given\r\n  }\r\n\r\n  // TODO: Implement Gradual Recovery System\r\n  // If a flag was auto-disabled, periodically check if the underlying issue is resolved\r\n  // and gradually re-enable the flag for a small percentage of users/requests.\r\n\r\n  return userMessage;\r\n};\r\n\r\n// Helper function to handle non-Firebase errors if needed separately, or can use handleError\r\nexport const handleGeneralError = (error, context = 'Application') => {\r\n   console.error(`[${context} General Error]`, error);\r\n   let userMessage = firebaseErrorMessages['default-general'];\r\n   if (error instanceof Error) {\r\n      userMessage = error.message || userMessage;\r\n   }\r\n   return userMessage;\r\n};\r\n\r\n\r\n// Add comments about tracking errors per feature flag, logging toggle state, automatic disabling, and gradual recovery placeholder\r\n// Tracking errors per feature flag: The `featureFlagErrorCounts` object tracks consecutive errors for each unique `featureName` provided to `handleError`.\r\n// Logging toggle state: The current state of the associated feature flag is logged along with every error to provide context for debugging.\r\n// Automatic disabling logic: If a `featureName` is provided and the corresponding feature flag is enabled, a counter for that flag is incremented when an error occurs. If the counter reaches `ERROR_THRESHOLD` consecutive errors, the feature flag is automatically disabled via `disableFeature`, and a specific fallback message is returned. This provides a basic automatic rollback mechanism in case of persistent issues with a feature-flagged implementation. The counter is reset for a feature flag if it is disabled or if the error handling is called without a featureName.\r\n// Gradual Recovery System: A placeholder comment indicates the need for a system to periodically attempt to re-enable auto-disabled flags, potentially for a small percentage of traffic, to check if the issue is resolved and gradually recover. This is not yet implemented.\r\n// Notifications: A console warning is logged when a feature flag is automatically disabled. This should be replaced with or augmented by a proper notification system (e.g., sending alerts to monitoring or logging services).\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
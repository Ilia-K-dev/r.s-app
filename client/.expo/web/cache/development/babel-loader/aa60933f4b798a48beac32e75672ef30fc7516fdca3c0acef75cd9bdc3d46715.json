{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { FixedSizeList as VirtualizedList } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar generateUniqueId = function generateUniqueId() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'list';\n  return `${prefix}-${Math.random().toString(36).substring(2, 9)}`;\n};\nvar PerformanceOptimizedList = function PerformanceOptimizedList(_ref) {\n  var _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    renderItem = _ref.renderItem,\n    _ref$itemHeight = _ref.itemHeight,\n    itemHeight = _ref$itemHeight === void 0 ? 50 : _ref$itemHeight,\n    _ref$overscanCount = _ref.overscanCount,\n    overscanCount = _ref$overscanCount === void 0 ? 5 : _ref$overscanCount;\n  var listId = React.useMemo(function () {\n    return generateUniqueId('virtualized-list');\n  }, []);\n  var Row = useCallback(function (_ref2) {\n    var index = _ref2.index,\n      style = _ref2.style;\n    var item = data[index];\n    return _jsx(\"div\", {\n      style: style,\n      children: renderItem(item, index)\n    });\n  }, [data, renderItem]);\n  if (data.length === 0) {\n    return _jsx(\"div\", {\n      className: \"flex justify-center items-center p-4 text-gray-500\",\n      children: \"No items to display\"\n    });\n  }\n  return _jsx(\"div\", {\n    className: \"performance-optimized-list\",\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: _jsx(AutoSizer, {\n      children: function children(_ref3) {\n        var height = _ref3.height,\n          width = _ref3.width;\n        return _jsxs(VirtualizedList, {\n          id: listId,\n          height: height,\n          itemCount: data.length,\n          itemSize: itemHeight,\n          width: width,\n          overscanCount: overscanCount,\n          children: [Row, \" \"]\n        });\n      }\n    })\n  });\n};\nexport default PerformanceOptimizedList;","map":{"version":3,"names":["React","useCallback","useState","FixedSizeList","VirtualizedList","AutoSizer","jsx","_jsx","jsxs","_jsxs","generateUniqueId","prefix","arguments","length","undefined","Math","random","toString","substring","PerformanceOptimizedList","_ref","_ref$data","data","renderItem","_ref$itemHeight","itemHeight","_ref$overscanCount","overscanCount","listId","useMemo","Row","_ref2","index","style","item","children","className","height","width","_ref3","id","itemCount","itemSize"],"sources":["C:/Users/user/Documents/app.v3/client/src/shared/components/ui/PerformanceOptimizedList.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { FixedSizeList as VirtualizedList } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer'; // Correct import for AutoSizer\r\n\r\n/**\r\n * @typedef {object} PerformanceOptimizedListProps\r\n * @property {Array<object>} [data=[]] - The array of data items to display in the list.\r\n * @property {function(object, number): React.ReactNode} renderItem - A function that renders a single item in the list. Receives the item data and index as arguments.\r\n * @property {number} [itemHeight=50] - The fixed height of each item in the list.\r\n * @property {number} [overscanCount=5] - The number of items to render above and below the visible area.\r\n */\r\n\r\n/**\r\n * Simple function to generate unique IDs without external dependencies\r\n */\r\nconst generateUniqueId = (prefix = 'list') => {\r\n  return `${prefix}-${Math.random().toString(36).substring(2, 9)}`;\r\n};\r\n\r\n/**\r\n * @desc A performance-optimized list component that uses virtualization to efficiently render large lists.\r\n * It only renders the items that are currently visible in the viewport, plus a few extra (overscan).\r\n * Requires a fixed item height.\r\n * @param {PerformanceOptimizedListProps} props - The component props.\r\n * @returns {JSX.Element} - The rendered PerformanceOptimizedList component.\r\n */\r\nconst PerformanceOptimizedList = ({\r\n  data = [],\r\n  renderItem,\r\n  itemHeight = 50,\r\n  overscanCount = 5,\r\n}) => {\r\n  // Generate a unique ID for this list instance\r\n  const listId = React.useMemo(() => generateUniqueId('virtualized-list'), []);\r\n\r\n  /**\r\n   * @desc A memoized component function used by react-window to render individual rows.\r\n   * @param {object} props - Props provided by react-window.\r\n   * @param {number} props.index - The index of the item to render.\r\n   * @param {object} props.style - The style object to apply to the row element (includes position and size).\r\n   * @returns {JSX.Element} - The rendered row element.\r\n   */\r\n  const Row = useCallback(\r\n    ({ index, style }) => {\r\n      const item = data[index];\r\n      // Apply the style prop to the outer element for positioning\r\n      return <div style={style}>{renderItem(item, index)}</div>;\r\n    },\r\n    [data, renderItem] // Dependencies for useCallback\r\n  );\r\n\r\n  // Handle empty data array\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"flex justify-center items-center p-4 text-gray-500\">\r\n        No items to display\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"performance-optimized-list\" style={{ height: '100%', width: '100%' }}>\r\n      {/* AutoSizer makes the list fill its parent container */}\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <VirtualizedList\r\n            id={listId}\r\n            height={height} // Height of the list container\r\n            itemCount={data.length} // Total number of items in the list\r\n            itemSize={itemHeight} // Height of each individual item\r\n            width={width} // Width of the list container\r\n            overscanCount={overscanCount} // Number of items to render outside the visible area\r\n          >\r\n            {Row} {/* Render function for each row */}\r\n          </VirtualizedList>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceOptimizedList;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,aAAa,IAAIC,eAAe,QAAQ,cAAc;AAC/D,OAAOC,SAAS,MAAM,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAarD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAwB;EAAA,IAApBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EACvC,OAAO,GAAGD,MAAM,IAAII,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAClE,CAAC;AASD,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAAC,IAAA,EAKxB;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAJJE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;IACTE,UAAU,GAAAH,IAAA,CAAVG,UAAU;IAAAC,eAAA,GAAAJ,IAAA,CACVK,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,EAAE,GAAAA,eAAA;IAAAE,kBAAA,GAAAN,IAAA,CACfO,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,CAAC,GAAAA,kBAAA;EAGjB,IAAME,MAAM,GAAG5B,KAAK,CAAC6B,OAAO,CAAC;IAAA,OAAMnB,gBAAgB,CAAC,kBAAkB,CAAC;EAAA,GAAE,EAAE,CAAC;EAS5E,IAAMoB,GAAG,GAAG7B,WAAW,CACrB,UAAA8B,KAAA,EAAsB;IAAA,IAAnBC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;IACb,IAAMC,IAAI,GAAGZ,IAAI,CAACU,KAAK,CAAC;IAExB,OAAOzB,IAAA;MAAK0B,KAAK,EAAEA,KAAM;MAAAE,QAAA,EAAEZ,UAAU,CAACW,IAAI,EAAEF,KAAK;IAAC,CAAM,CAAC;EAC3D,CAAC,EACD,CAACV,IAAI,EAAEC,UAAU,CACnB,CAAC;EAGD,IAAID,IAAI,CAACT,MAAM,KAAK,CAAC,EAAE;IACrB,OACEN,IAAA;MAAK6B,SAAS,EAAC,oDAAoD;MAAAD,QAAA,EAAC;IAEpE,CAAK,CAAC;EAEV;EAEA,OACE5B,IAAA;IAAK6B,SAAS,EAAC,4BAA4B;IAACH,KAAK,EAAE;MAAEI,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAH,QAAA,EAEnF5B,IAAA,CAACF,SAAS;MAAA8B,QAAA,EACP,SAAAA,SAAAI,KAAA;QAAA,IAAGF,MAAM,GAAAE,KAAA,CAANF,MAAM;UAAEC,KAAK,GAAAC,KAAA,CAALD,KAAK;QAAA,OACf7B,KAAA,CAACL,eAAe;UACdoC,EAAE,EAAEZ,MAAO;UACXS,MAAM,EAAEA,MAAO;UACfI,SAAS,EAAEnB,IAAI,CAACT,MAAO;UACvB6B,QAAQ,EAAEjB,UAAW;UACrBa,KAAK,EAAEA,KAAM;UACbX,aAAa,EAAEA,aAAc;UAAAQ,QAAA,GAE5BL,GAAG,EAAC,GAAC;QAAA,CACS,CAAC;MAAA;IACnB,CACQ;EAAC,CACT,CAAC;AAEV,CAAC;AAED,eAAeX,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
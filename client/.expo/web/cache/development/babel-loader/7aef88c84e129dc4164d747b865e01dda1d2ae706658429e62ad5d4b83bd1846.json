{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts';\nimport { useAnalytics } from \"../../../features/analytics/hooks/useAnalytics\";\nimport ChartWrapper from \"../../../shared/components/charts/ChartWrapper\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nvar CategoryBreakdown = function CategoryBreakdown() {\n  var _useAnalytics = useAnalytics(),\n    spendingAnalytics = _useAnalytics.spendingAnalytics,\n    loading = _useAnalytics.loading,\n    error = _useAnalytics.error;\n  if (loading) {\n    return _jsx(\"div\", {\n      children: \"Loading...\"\n    });\n  }\n  if (error) {\n    return _jsxs(\"div\", {\n      children: [\"Error: \", error]\n    });\n  }\n  var data = Object.entries(spendingAnalytics.categoryBreakdown).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      category = _ref2[0],\n      amount = _ref2[1];\n    return {\n      name: category,\n      value: amount\n    };\n  });\n  return _jsx(ChartWrapper, {\n    title: \"Spending by Category\",\n    children: _jsxs(PieChart, {\n      width: 400,\n      height: 400,\n      children: [_jsx(Pie, {\n        data: data,\n        cx: 200,\n        cy: 200,\n        outerRadius: 150,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        label: true,\n        children: data.map(function (entry, index) {\n          return _jsx(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`);\n        })\n      }), _jsx(Tooltip, {}), _jsx(Legend, {})]\n    })\n  });\n};\nexport default CategoryBreakdown;","map":{"version":3,"names":["React","PieChart","Pie","Cell","Legend","Tooltip","useAnalytics","ChartWrapper","jsx","_jsx","jsxs","_jsxs","COLORS","CategoryBreakdown","_useAnalytics","spendingAnalytics","loading","error","children","data","Object","entries","categoryBreakdown","map","_ref","_ref2","_slicedToArray","category","amount","name","value","title","width","height","cx","cy","outerRadius","fill","dataKey","label","entry","index","length"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/CategoryBreakdown.js"],"sourcesContent":["import React from 'react'; //correct\nimport { PieChart, Pie, Cell, Legend, Tooltip } from 'recharts'; //correct\n\r\nimport { useAnalytics } from '../../../features/analytics/hooks/useAnalytics'; //correct\r\nimport ChartWrapper from '../../../shared/components/charts/ChartWrapper'; //corret\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst CategoryBreakdown = () => {\r\n  const { spendingAnalytics, loading, error } = useAnalytics();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  const data = Object.entries(spendingAnalytics.categoryBreakdown).map(([category, amount]) => ({\r\n    name: category,\r\n    value: amount,\r\n  }));\r\n\r\n  return (\r\n    <ChartWrapper title=\"Spending by Category\">\r\n      <PieChart width={400} height={400}>\r\n        <Pie data={data} cx={200} cy={200} outerRadius={150} fill=\"#8884d8\" dataKey=\"value\" label>\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend />\r\n      </PieChart>\r\n    </ChartWrapper>\r\n  );\r\n};\r\n\r\nexport default CategoryBreakdown;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,QAAQ,UAAU;AAE/D,SAASC,YAAY;AACrB,OAAOC,YAAY;AAAuD,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1E,IAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAE3D,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAC9B,IAAAC,aAAA,GAA8CR,YAAY,CAAC,CAAC;IAApDS,iBAAiB,GAAAD,aAAA,CAAjBC,iBAAiB;IAAEC,OAAO,GAAAF,aAAA,CAAPE,OAAO;IAAEC,KAAK,GAAAH,aAAA,CAALG,KAAK;EAEzC,IAAID,OAAO,EAAE;IACX,OAAOP,IAAA;MAAAS,QAAA,EAAK;IAAU,CAAK,CAAC;EAC9B;EAEA,IAAID,KAAK,EAAE;IACT,OAAON,KAAA;MAAAO,QAAA,GAAK,SAAO,EAACD,KAAK;IAAA,CAAM,CAAC;EAClC;EAEA,IAAME,IAAI,GAAGC,MAAM,CAACC,OAAO,CAACN,iBAAiB,CAACO,iBAAiB,CAAC,CAACC,GAAG,CAAC,UAAAC,IAAA;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAEG,QAAQ,GAAAF,KAAA;MAAEG,MAAM,GAAAH,KAAA;IAAA,OAAO;MAC5FI,IAAI,EAAEF,QAAQ;MACdG,KAAK,EAAEF;IACT,CAAC;EAAA,CAAC,CAAC;EAEH,OACEnB,IAAA,CAACF,YAAY;IAACwB,KAAK,EAAC,sBAAsB;IAAAb,QAAA,EACxCP,KAAA,CAACV,QAAQ;MAAC+B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAf,QAAA,GAChCT,IAAA,CAACP,GAAG;QAACiB,IAAI,EAAEA,IAAK;QAACe,EAAE,EAAE,GAAI;QAACC,EAAE,EAAE,GAAI;QAACC,WAAW,EAAE,GAAI;QAACC,IAAI,EAAC,SAAS;QAACC,OAAO,EAAC,OAAO;QAACC,KAAK;QAAArB,QAAA,EACtFC,IAAI,CAACI,GAAG,CAAC,UAACiB,KAAK,EAAEC,KAAK;UAAA,OACrBhC,IAAA,CAACN,IAAI;YAAuBkC,IAAI,EAAEzB,MAAM,CAAC6B,KAAK,GAAG7B,MAAM,CAAC8B,MAAM;UAAE,GAArD,QAAQD,KAAK,EAA0C,CAAC;QAAA,CACpE;MAAC,CACC,CAAC,EACNhC,IAAA,CAACJ,OAAO,IAAE,CAAC,EACXI,IAAA,CAACL,MAAM,IAAE,CAAC;IAAA,CACF;EAAC,CACC,CAAC;AAEnB,CAAC;AAED,eAAeS,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
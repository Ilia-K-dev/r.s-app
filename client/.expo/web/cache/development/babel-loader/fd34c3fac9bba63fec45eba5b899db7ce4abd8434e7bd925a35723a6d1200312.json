{"ast":null,"code":"import React, { memo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { formatCurrency } from \"../../../shared/utils/currency\";\nimport { formatDate } from \"../../../shared/utils/date\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SpendingChart = function SpendingChart(_ref) {\n  var _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data;\n  if (!data || data.length === 0) {\n    return _jsx(\"div\", {\n      className: \"h-full flex items-center justify-center text-gray-500\",\n      children: \"No data available\"\n    });\n  }\n  return _jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: _jsxs(LineChart, {\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [_jsx(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#E5E7EB\"\n      }), _jsx(XAxis, {\n        dataKey: \"date\",\n        stroke: \"#6B7280\",\n        fontSize: 12\n      }), _jsx(YAxis, {\n        stroke: \"#6B7280\",\n        fontSize: 12,\n        tickFormatter: function tickFormatter(value) {\n          return formatCurrency(value);\n        }\n      }), _jsx(Tooltip, {\n        formatter: function formatter(value) {\n          return [formatCurrency(value), 'Amount'];\n        },\n        labelStyle: {\n          color: '#111827'\n        },\n        contentStyle: {\n          backgroundColor: '#FFFFFF',\n          border: '1px solid #E5E7EB',\n          borderRadius: '0.375rem',\n          padding: '0.5rem'\n        }\n      }), _jsx(Line, {\n        type: \"monotone\",\n        dataKey: \"amount\",\n        stroke: \"#0EA5E9\",\n        strokeWidth: 2,\n        dot: {\n          fill: '#0EA5E9',\n          r: 4\n        },\n        activeDot: {\n          r: 6\n        }\n      })]\n    })\n  });\n};\nexport default memo(SpendingChart);","map":{"version":3,"names":["React","memo","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","formatCurrency","formatDate","jsx","_jsx","jsxs","_jsxs","SpendingChart","_ref","_ref$data","data","length","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","fontSize","tickFormatter","value","formatter","labelStyle","color","contentStyle","backgroundColor","border","borderRadius","padding","type","strokeWidth","dot","fill","r","activeDot"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/SpendingChart.js"],"sourcesContent":["import React, { memo } from 'react'; // Import memo\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { formatCurrency } from '../../../shared/utils/currency';\r\n// Assuming formatDate is still needed for XAxis tick formatting if dates are not in a standard format\r\nimport { formatDate } from '../../../shared/utils/date';\r\n\r\n\r\nexport const SpendingChart = ({ data = [] }) => {\r\n\r\n  if (!data || data.length === 0) {\r\n    return <div className=\"h-full flex items-center justify-center text-gray-500\">No data available</div>;\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n        <XAxis\r\n          dataKey=\"date\" // Assuming the backend provides 'date' field in the aggregated data\r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n          // Add tickFormatter if the date format from backend needs adjustment for display\r\n        />\r\n        <YAxis\r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n          tickFormatter={(value) => formatCurrency(value)}\r\n        />\r\n        <Tooltip\r\n          formatter={(value) => [formatCurrency(value), 'Amount']}\r\n          labelStyle={{ color: '#111827' }}\r\n          contentStyle={{\r\n            backgroundColor: '#FFFFFF',\r\n            border: '1px solid #E5E7EB',\r\n            borderRadius: '0.375rem',\r\n            padding: '0.5rem'\r\n          }}\r\n        />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"amount\" // Assuming the backend provides 'amount' field in the aggregated data\r\n          stroke=\"#0EA5E9\"\r\n          strokeWidth={2}\r\n          dot={{ fill: '#0EA5E9', r: 4 }}\r\n          activeDot={{ r: 6 }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default memo(SpendingChart); // Wrap with memo\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,QACd,UAAU;AACjB,SAASC,cAAc;AAEvB,SAASC,UAAU;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGxD,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAsB;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAAhBE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;EAEvC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAOP,IAAA;MAAKQ,SAAS,EAAC,uDAAuD;MAAAC,QAAA,EAAC;IAAiB,CAAK,CAAC;EACvG;EAEA,OACET,IAAA,CAACJ,mBAAmB;IAACc,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAAF,QAAA,EAC7CP,KAAA,CAACZ,SAAS;MAACgB,IAAI,EAAEA,IAAK;MAACM,MAAM,EAAE;QAAEC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAP,QAAA,GACxET,IAAA,CAACN,aAAa;QAACuB,eAAe,EAAC,KAAK;QAACC,MAAM,EAAC;MAAS,CAAE,CAAC,EACxDlB,IAAA,CAACR,KAAK;QACJ2B,OAAO,EAAC,MAAM;QACdD,MAAM,EAAC,SAAS;QAChBE,QAAQ,EAAE;MAAG,CAEd,CAAC,EACFpB,IAAA,CAACP,KAAK;QACJyB,MAAM,EAAC,SAAS;QAChBE,QAAQ,EAAE,EAAG;QACbC,aAAa,EAAE,SAAfA,aAAaA,CAAGC,KAAK;UAAA,OAAKzB,cAAc,CAACyB,KAAK,CAAC;QAAA;MAAC,CACjD,CAAC,EACFtB,IAAA,CAACL,OAAO;QACN4B,SAAS,EAAE,SAAXA,SAASA,CAAGD,KAAK;UAAA,OAAK,CAACzB,cAAc,CAACyB,KAAK,CAAC,EAAE,QAAQ,CAAC;QAAA,CAAC;QACxDE,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAU,CAAE;QACjCC,YAAY,EAAE;UACZC,eAAe,EAAE,SAAS;UAC1BC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,UAAU;UACxBC,OAAO,EAAE;QACX;MAAE,CACH,CAAC,EACF9B,IAAA,CAACT,IAAI;QACHwC,IAAI,EAAC,UAAU;QACfZ,OAAO,EAAC,QAAQ;QAChBD,MAAM,EAAC,SAAS;QAChBc,WAAW,EAAE,CAAE;QACfC,GAAG,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,CAAC,EAAE;QAAE,CAAE;QAC/BC,SAAS,EAAE;UAAED,CAAC,EAAE;QAAE;MAAE,CACrB,CAAC;IAAA,CACO;EAAC,CACO,CAAC;AAE1B,CAAC;AAED,eAAe9C,IAAI,CAACc,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
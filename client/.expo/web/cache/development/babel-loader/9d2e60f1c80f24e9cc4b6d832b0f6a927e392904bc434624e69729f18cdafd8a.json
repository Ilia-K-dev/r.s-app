{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { runComponentTest } from \"../testing/testRunner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var verifyComponent = function verifyComponent(Component) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (process.env.NODE_ENV !== 'development') {\n    console.warn('Component verification should only be used in development mode');\n    return false;\n  }\n  var results = runComponentTest(Component, props);\n  if (callback && typeof callback === 'function') {\n    callback(results);\n  }\n  return results.passed;\n};\nexport var withVerification = function withVerification(Component) {\n  var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (props) {\n    if (process.env.NODE_ENV === 'development') {\n      React.useEffect(function () {\n        var testProps = _objectSpread(_objectSpread({}, defaultProps), props);\n        verifyComponent(Component, testProps, function (results) {\n          if (!results.passed) {\n            console.warn(`Component ${Component.name || 'Unknown'} verification failed`);\n          }\n        });\n      }, []);\n    }\n    return _jsx(Component, _objectSpread({}, props));\n  };\n};\nexport var initializeComponentVerification = function initializeComponentVerification() {\n  if (process.env.NODE_ENV === 'development') {\n    window.verifyComponent = verifyComponent;\n    console.log('Component verification initialized. Use window.verifyComponent() in console.');\n  }\n};","map":{"version":3,"names":["React","runComponentTest","jsx","_jsx","verifyComponent","Component","props","arguments","length","undefined","callback","process","env","NODE_ENV","console","warn","results","passed","withVerification","defaultProps","useEffect","testProps","_objectSpread","name","initializeComponentVerification","window","log"],"sources":["C:/Users/user/Documents/app.v3/client/src/utils/development/verifyComponent.js"],"sourcesContent":["/**\r\n * verifyComponent.js\r\n * Last Modified: 5/22/2025 12:34 AM\r\n * Modified By: Cline\r\n * \r\n * Purpose: Provides utilities to verify components during development\r\n * Changes Made: Created new verification utility\r\n * Reasoning: To check frontend functionality without deployment\r\n */\r\n\r\nimport React from 'react';\r\nimport { runComponentTest } from '../testing/testRunner';\r\n\r\n/**\r\n * Verifies a component and provides feedback\r\n * @param {React.Component} Component - Component to verify\r\n * @param {Object} props - Props to pass to component\r\n * @param {Function} callback - Callback with results\r\n */\r\nexport const verifyComponent = (Component, props = {}, callback = null) => {\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    console.warn('Component verification should only be used in development mode');\r\n    return false;\r\n  }\r\n  \r\n  const results = runComponentTest(Component, props);\r\n  \r\n  if (callback && typeof callback === 'function') {\r\n    callback(results);\r\n  }\r\n  \r\n  return results.passed;\r\n};\r\n\r\n/**\r\n * Creates a higher-order component that verifies a component on mount\r\n * @param {React.Component} Component - Component to verify\r\n * @param {Object} defaultProps - Default props for verification\r\n * @returns {React.Component} - Enhanced component\r\n */\r\nexport const withVerification = (Component, defaultProps = {}) => {\r\n  // Return a wrapped component that includes verification\r\n  return (props) => {\r\n    // In development mode, verify the component on first render\r\n    if (process.env.NODE_ENV === 'development') {\r\n      React.useEffect(() => {\r\n        const testProps = { ...defaultProps, ...props };\r\n        verifyComponent(Component, testProps, (results) => {\r\n          // Log verification results but don't block rendering\r\n          if (!results.passed) {\r\n            console.warn(`Component ${Component.name || 'Unknown'} verification failed`);\r\n          }\r\n        });\r\n      }, []);\r\n    }\r\n    \r\n    // Render the original component with all props\r\n    return <Component {...props} />;\r\n  };\r\n};\r\n\r\n/**\r\n * Makes component verification available globally for console use\r\n */\r\nexport const initializeComponentVerification = () => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    // Add to window for console access\r\n    window.verifyComponent = verifyComponent;\r\n    \r\n    console.log('Component verification initialized. Use window.verifyComponent() in console.');\r\n  }\r\n};\r\n"],"mappings":";;;AAUA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAQzD,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,SAAS,EAAkC;EAAA,IAAhCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACpE,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1CC,OAAO,CAACC,IAAI,CAAC,gEAAgE,CAAC;IAC9E,OAAO,KAAK;EACd;EAEA,IAAMC,OAAO,GAAGf,gBAAgB,CAACI,SAAS,EAAEC,KAAK,CAAC;EAElD,IAAII,QAAQ,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IAC9CA,QAAQ,CAACM,OAAO,CAAC;EACnB;EAEA,OAAOA,OAAO,CAACC,MAAM;AACvB,CAAC;AAQD,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIb,SAAS,EAAwB;EAAA,IAAtBc,YAAY,GAAAZ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE3D,OAAO,UAACD,KAAK,EAAK;IAEhB,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1Cb,KAAK,CAACoB,SAAS,CAAC,YAAM;QACpB,IAAMC,SAAS,GAAAC,aAAA,CAAAA,aAAA,KAAQH,YAAY,GAAKb,KAAK,CAAE;QAC/CF,eAAe,CAACC,SAAS,EAAEgB,SAAS,EAAE,UAACL,OAAO,EAAK;UAEjD,IAAI,CAACA,OAAO,CAACC,MAAM,EAAE;YACnBH,OAAO,CAACC,IAAI,CAAC,aAAaV,SAAS,CAACkB,IAAI,IAAI,SAAS,sBAAsB,CAAC;UAC9E;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,EAAE,CAAC;IACR;IAGA,OAAOpB,IAAA,CAACE,SAAS,EAAAiB,aAAA,KAAKhB,KAAK,CAAG,CAAC;EACjC,CAAC;AACH,CAAC;AAKD,OAAO,IAAMkB,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAA,EAAS;EACnD,IAAIb,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAE1CY,MAAM,CAACrB,eAAe,GAAGA,eAAe;IAExCU,OAAO,CAACY,GAAG,CAAC,8EAA8E,CAAC;EAC7F;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
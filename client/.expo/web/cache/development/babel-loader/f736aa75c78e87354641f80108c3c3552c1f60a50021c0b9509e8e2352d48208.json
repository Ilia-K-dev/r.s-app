{"ast":null,"code":"import { someService } from \"../path/to/service\";\njest.mock(\"../../path/to/dependency1\", function () {\n  return {\n    dependency1Function: jest.fn(),\n    dependency1Object: {}\n  };\n});\njest.mock(\"../../path/to/dependency2\", function () {\n  return {\n    dependency2Function: jest.fn(),\n    dependency2Object: {}\n  };\n});\nglobal.someGlobalFunction = jest.fn();\ndescribe('Module Name', function () {\n  beforeEach(function () {\n    jest.clearAllMocks();\n  });\n  it('should do something', function () {\n    expect(true).toBe(true);\n  });\n});","map":{"version":3,"names":["someService","jest","mock","dependency1Function","fn","dependency1Object","dependency2Function","dependency2Object","global","someGlobalFunction","describe","beforeEach","clearAllMocks","it","expect","toBe"],"sources":["C:/Users/user/Documents/app.v3/client/src/__mocks__/test-template.js"],"sourcesContent":["/**\r\n * Template for creating new test files with consistent mocking approach\r\n *\r\n * Usage:\r\n * 1. Copy this template to your test file\r\n * 2. Replace the import statements with your actual imports\r\n * 3. Replace the mock implementations with your specific mocks\r\n * 4. Implement your actual test cases\r\n */\r\n\r\n// Import the module to test\r\nimport { someService } from '../path/to/service';\r\n\r\n// Mock dependencies\r\njest.mock('../../path/to/dependency1', () => ({\r\n  dependency1Function: jest.fn(),\r\n  dependency1Object: {}\r\n}));\r\n\r\njest.mock('../../path/to/dependency2', () => ({\r\n  dependency2Function: jest.fn(),\r\n  dependency2Object: {}\r\n}));\r\n\r\n// Mock any global functions needed by your tests\r\nglobal.someGlobalFunction = jest.fn();\r\n\r\ndescribe('Module Name', () => {\r\n  // Reset mocks before each test\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  // Add your test cases\r\n  it('should do something', () => {\r\n    // Arrange\r\n    // Act\r\n    // Assert\r\n    expect(true).toBe(true);\r\n  });\r\n});\r\n"],"mappings":"AAWA,SAASA,WAAW;AAGpBC,IAAI,CAACC,IAAI,8BAA8B;EAAA,OAAO;IAC5CC,mBAAmB,EAAEF,IAAI,CAACG,EAAE,CAAC,CAAC;IAC9BC,iBAAiB,EAAE,CAAC;EACtB,CAAC;AAAA,CAAC,CAAC;AAEHJ,IAAI,CAACC,IAAI,8BAA8B;EAAA,OAAO;IAC5CI,mBAAmB,EAAEL,IAAI,CAACG,EAAE,CAAC,CAAC;IAC9BG,iBAAiB,EAAE,CAAC;EACtB,CAAC;AAAA,CAAC,CAAC;AAGHC,MAAM,CAACC,kBAAkB,GAAGR,IAAI,CAACG,EAAE,CAAC,CAAC;AAErCM,QAAQ,CAAC,aAAa,EAAE,YAAM;EAE5BC,UAAU,CAAC,YAAM;IACfV,IAAI,CAACW,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAGFC,EAAE,CAAC,qBAAqB,EAAE,YAAM;IAI9BC,MAAM,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACzB,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
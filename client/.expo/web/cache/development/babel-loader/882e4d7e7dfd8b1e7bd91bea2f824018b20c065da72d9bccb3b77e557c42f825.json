{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useCallback, useEffect } from 'react';\nimport { useAuth } from \"../../auth/hooks/useAuth\";\nimport * as documentService from \"../services/documentProcessingService\";\nexport var useDocumentProcessing = function useDocumentProcessing() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    documents = _useState2[0],\n    setDocuments = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentDocument = _useState4[0],\n    setCurrentDocument = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    uploading = _useState8[0],\n    setUploading = _useState8[1];\n  var _useState9 = useState(0),\n    _useState0 = _slicedToArray(_useState9, 2),\n    uploadProgress = _useState0[0],\n    setUploadProgress = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    processing = _useState10[0],\n    setProcessing = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  var clearError = useCallback(function () {\n    setError(null);\n  }, []);\n  var loadDocuments = useCallback(_asyncToGenerator(function* () {\n    var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!user) return;\n    setLoading(true);\n    setError(null);\n    try {\n      var userDocuments = yield documentService.getUserDocuments(user.uid, filters);\n      setDocuments(userDocuments);\n    } catch (err) {\n      setError(err.message || 'Failed to load documents');\n      console.error('Error loading documents:', err);\n    } finally {\n      setLoading(false);\n    }\n  }), [user]);\n  var loadDocument = useCallback(function () {\n    var _ref2 = _asyncToGenerator(function* (documentId) {\n      setLoading(true);\n      setError(null);\n      try {\n        var document = yield documentService.getDocument(documentId);\n        setCurrentDocument(document);\n        return document;\n      } catch (err) {\n        setError(err.message || 'Failed to load document');\n        console.error('Error loading document:', err);\n        return null;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  var uploadDocument = useCallback(function () {\n    var _ref3 = _asyncToGenerator(function* (file, documentType) {\n      var metadata = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!user) {\n        setError('User not authenticated');\n        return null;\n      }\n      setUploading(true);\n      setUploadProgress(0);\n      setError(null);\n      try {\n        var simulateProgress = function simulateProgress() {\n          var progress = 0;\n          var interval = setInterval(function () {\n            progress += Math.random() * 10;\n            if (progress > 95) {\n              clearInterval(interval);\n              progress = 95;\n            }\n            setUploadProgress(Math.min(progress, 95));\n          }, 300);\n          return interval;\n        };\n        var progressInterval = simulateProgress();\n        var uploadedDocument = yield documentService.uploadDocument(file, user.uid, documentType, metadata);\n        clearInterval(progressInterval);\n        setUploadProgress(100);\n        setDocuments(function (prevDocs) {\n          return [uploadedDocument].concat(_toConsumableArray(prevDocs));\n        });\n        setCurrentDocument(uploadedDocument);\n        return uploadedDocument;\n      } catch (err) {\n        setError(err.message || 'Failed to upload document');\n        console.error('Error uploading document:', err);\n        return null;\n      } finally {\n        setUploading(false);\n      }\n    });\n    return function (_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [user]);\n  var processDocument = useCallback(function () {\n    var _ref4 = _asyncToGenerator(function* (documentId) {\n      var processingOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      setProcessing(true);\n      setError(null);\n      try {\n        var processedDocument = yield documentService.processDocument(documentId, processingOptions);\n        setCurrentDocument(processedDocument);\n        setDocuments(function (prevDocs) {\n          return prevDocs.map(function (doc) {\n            return doc.id === documentId ? processedDocument : doc;\n          });\n        });\n        return processedDocument;\n      } catch (err) {\n        setError(err.message || 'Failed to process document');\n        console.error('Error processing document:', err);\n        return null;\n      } finally {\n        setProcessing(false);\n      }\n    });\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  var deleteDocument = useCallback(function () {\n    var _ref5 = _asyncToGenerator(function* (documentId) {\n      setLoading(true);\n      setError(null);\n      try {\n        yield documentService.deleteDocument(documentId);\n        setDocuments(function (prevDocs) {\n          return prevDocs.filter(function (doc) {\n            return doc.id !== documentId;\n          });\n        });\n        if (currentDocument && currentDocument.id === documentId) {\n          setCurrentDocument(null);\n        }\n        return true;\n      } catch (err) {\n        setError(err.message || 'Failed to delete document');\n        console.error('Error deleting document:', err);\n        return false;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [currentDocument]);\n  useEffect(function () {\n    if (user) {\n      loadDocuments();\n    } else {\n      setDocuments([]);\n      setCurrentDocument(null);\n    }\n  }, [user, loadDocuments]);\n  return {\n    documents: documents,\n    currentDocument: currentDocument,\n    loading: loading,\n    uploading: uploading,\n    processing: processing,\n    uploadProgress: uploadProgress,\n    error: error,\n    loadDocuments: loadDocuments,\n    loadDocument: loadDocument,\n    uploadDocument: uploadDocument,\n    processDocument: processDocument,\n    deleteDocument: deleteDocument,\n    clearError: clearError\n  };\n};\nexport default useDocumentProcessing;","map":{"version":3,"names":["useState","useCallback","useEffect","useAuth","documentService","useDocumentProcessing","_useAuth","user","_useState","_useState2","_slicedToArray","documents","setDocuments","_useState3","_useState4","currentDocument","setCurrentDocument","_useState5","_useState6","loading","setLoading","_useState7","_useState8","uploading","setUploading","_useState9","_useState0","uploadProgress","setUploadProgress","_useState1","_useState10","processing","setProcessing","_useState11","_useState12","error","setError","clearError","loadDocuments","_asyncToGenerator","filters","arguments","length","undefined","userDocuments","getUserDocuments","uid","err","message","console","loadDocument","_ref2","documentId","document","getDocument","_x","apply","uploadDocument","_ref3","file","documentType","metadata","simulateProgress","progress","interval","setInterval","Math","random","clearInterval","min","progressInterval","uploadedDocument","prevDocs","concat","_toConsumableArray","_x2","_x3","processDocument","_ref4","processingOptions","processedDocument","map","doc","id","_x4","deleteDocument","_ref5","filter","_x5"],"sources":["C:/Users/user/Documents/app.v3/client/client/src/features/documents/hooks/useDocumentProcessing.js"],"sourcesContent":["// File: client/src/features/documents/hooks/useDocumentProcessing.js\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useAuth } from '../../auth/hooks/useAuth';\r\nimport * as documentService from '../services/documentProcessingService';\r\n\r\n/**\r\n * Hook for document processing operations\r\n * @returns {Object} Document processing methods and state\r\n */\r\nexport const useDocumentProcessing = () => {\r\n  const { user } = useAuth();\r\n  const [documents, setDocuments] = useState([]);\r\n  const [currentDocument, setCurrentDocument] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Reset error state\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  // Load user documents\r\n  const loadDocuments = useCallback(async (filters = {}) => {\r\n    if (!user) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const userDocuments = await documentService.getUserDocuments(user.uid, filters);\r\n      setDocuments(userDocuments);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to load documents');\r\n      console.error('Error loading documents:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  // Load a specific document\r\n  const loadDocument = useCallback(async (documentId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const document = await documentService.getDocument(documentId);\r\n      setCurrentDocument(document);\r\n      return document;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to load document');\r\n      console.error('Error loading document:', err);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Upload a document\r\n  const uploadDocument = useCallback(async (file, documentType, metadata = {}) => {\r\n    if (!user) {\r\n      setError('User not authenticated');\r\n      return null;\r\n    }\r\n\r\n    setUploading(true);\r\n    setUploadProgress(0);\r\n    setError(null);\r\n\r\n    try {\r\n      // Simulate upload progress since Firebase Storage doesn't provide progress events directly\r\n      // In a production app, you might use a different upload method that supports progress\r\n      const simulateProgress = () => {\r\n        let progress = 0;\r\n        const interval = setInterval(() => {\r\n          progress += Math.random() * 10;\r\n          if (progress > 95) {\r\n            clearInterval(interval);\r\n            progress = 95; // Cap at 95% until actual completion\r\n          }\r\n          setUploadProgress(Math.min(progress, 95));\r\n        }, 300);\r\n\r\n        return interval;\r\n      };\r\n\r\n      const progressInterval = simulateProgress();\r\n\r\n      // Perform the actual upload\r\n      const uploadedDocument = await documentService.uploadDocument(\r\n        file,\r\n        user.uid,\r\n        documentType,\r\n        metadata\r\n      );\r\n\r\n      // Clear the progress simulation\r\n      clearInterval(progressInterval);\r\n      setUploadProgress(100);\r\n\r\n      // Update documents list\r\n      setDocuments(prevDocs => [uploadedDocument, ...prevDocs]);\r\n      setCurrentDocument(uploadedDocument);\r\n\r\n      return uploadedDocument;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to upload document');\r\n      console.error('Error uploading document:', err);\r\n      return null;\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  // Process a document\r\n  const processDocument = useCallback(async (documentId, processingOptions = {}) => {\r\n    setProcessing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const processedDocument = await documentService.processDocument(documentId, processingOptions);\r\n\r\n      // Update current document and documents list\r\n      setCurrentDocument(processedDocument);\r\n      setDocuments(prevDocs => prevDocs.map(doc =>\r\n        doc.id === documentId ? processedDocument : doc\r\n      ));\r\n\r\n      return processedDocument;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to process document');\r\n      console.error('Error processing document:', err);\r\n      return null;\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  }, []);\r\n\r\n  // Delete a document\r\n  const deleteDocument = useCallback(async (documentId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      await documentService.deleteDocument(documentId);\r\n\r\n      // Update documents list\r\n      setDocuments(prevDocs => prevDocs.filter(doc => doc.id !== documentId));\r\n\r\n      // Clear current document if it's the one being deleted\r\n      if (currentDocument && currentDocument.id === documentId) {\r\n        setCurrentDocument(null);\r\n      }\r\n\r\n      return true;\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to delete document');\r\n      console.error('Error deleting document:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [currentDocument]);\r\n\r\n  // Load documents when the user changes\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadDocuments();\r\n    } else {\r\n      setDocuments([]);\r\n      setCurrentDocument(null);\r\n    }\r\n  }, [user, loadDocuments]);\r\n\r\n  return {\r\n    // State\r\n    documents,\r\n    currentDocument,\r\n    loading,\r\n    uploading,\r\n    processing,\r\n    uploadProgress,\r\n    error,\r\n\r\n    // Methods\r\n    loadDocuments,\r\n    loadDocument,\r\n    uploadDocument,\r\n    processDocument,\r\n    deleteDocument,\r\n    clearError\r\n  };\r\n};\r\n\r\n// Export the hook\r\nexport default useDocumentProcessing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
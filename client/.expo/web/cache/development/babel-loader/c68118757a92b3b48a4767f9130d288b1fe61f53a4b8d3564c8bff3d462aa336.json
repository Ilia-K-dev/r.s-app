{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, sendPasswordResetEmail, updateProfile } from 'firebase/auth';\nimport { useContext, useState, useEffect } from 'react';\nimport { auth } from \"../../../core/config/firebase\";\nimport { useAuth as useAuthContext, AuthProvider, AuthContext } from \"../../../core/contexts/AuthContext\";\nimport { useToast } from \"../../../shared/hooks/useToast\";\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  var _useToast = useToast(),\n    showToast = _useToast.showToast;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  var user = context.user,\n    setUser = context.setUser;\n  var login = function () {\n    var _ref = _asyncToGenerator(function* (email, password) {\n      setLoading(true);\n      try {\n        var result = yield signInWithEmailAndPassword(auth, email, password);\n        setUser(result.user);\n        showToast('Successfully logged in', 'success');\n        return result.user;\n      } catch (error) {\n        var errorMessage = 'Failed to login';\n        switch (error.code) {\n          case 'auth/user-not-found':\n            errorMessage = 'No account found with this email';\n            break;\n          case 'auth/wrong-password':\n            errorMessage = 'Invalid password';\n            break;\n          case 'auth/invalid-email':\n            errorMessage = 'Invalid email format';\n            break;\n          case 'auth/too-many-requests':\n            errorMessage = 'Too many failed attempts. Please try again later';\n            break;\n          default:\n            errorMessage = error.message;\n        }\n        showToast(errorMessage, 'error');\n        throw new Error(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var register = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password, name) {\n      setLoading(true);\n      try {\n        var result = yield createUserWithEmailAndPassword(auth, email, password);\n        yield updateProfile(result.user, {\n          displayName: name\n        });\n        setUser(result.user);\n        showToast('Account created successfully', 'success');\n        return result.user;\n      } catch (error) {\n        var errorMessage = 'Failed to create account';\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            errorMessage = 'Email is already registered';\n            break;\n          case 'auth/invalid-email':\n            errorMessage = 'Invalid email format';\n            break;\n          case 'auth/weak-password':\n            errorMessage = 'Password is too weak';\n            break;\n          default:\n            errorMessage = error.message;\n        }\n        showToast(errorMessage, 'error');\n        throw new Error(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function register(_x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        yield signOut(auth);\n        setUser(null);\n        showToast('Successfully logged out', 'success');\n      } catch (error) {\n        showToast('Failed to logout', 'error');\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function logout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var resetPassword = function () {\n    var _ref4 = _asyncToGenerator(function* (email) {\n      setLoading(true);\n      try {\n        yield sendPasswordResetEmail(auth, email);\n        showToast('Password reset email sent', 'success');\n      } catch (error) {\n        var errorMessage = 'Failed to send reset email';\n        switch (error.code) {\n          case 'auth/user-not-found':\n            errorMessage = 'No account found with this email';\n            break;\n          case 'auth/invalid-email':\n            errorMessage = 'Invalid email format';\n            break;\n          default:\n            errorMessage = error.message;\n        }\n        showToast(errorMessage, 'error');\n        throw new Error(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function resetPassword(_x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var updateUserProfile = function () {\n    var _ref5 = _asyncToGenerator(function* (data) {\n      setLoading(true);\n      try {\n        yield updateProfile(auth.currentUser, data);\n        setUser(_objectSpread({}, auth.currentUser));\n        showToast('Profile updated successfully', 'success');\n      } catch (error) {\n        showToast('Failed to update profile', 'error');\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateUserProfile(_x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return {\n    user: user,\n    loading: loading,\n    login: login,\n    register: register,\n    logout: logout,\n    resetPassword: resetPassword,\n    updateUserProfile: updateUserProfile\n  };\n};\nexport default useAuth;","map":{"version":3,"names":["signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","sendPasswordResetEmail","updateProfile","useContext","useState","useEffect","auth","useAuth","useAuthContext","AuthProvider","AuthContext","useToast","context","_useToast","showToast","_useState","_useState2","_slicedToArray","loading","setLoading","Error","user","setUser","login","_ref","_asyncToGenerator","email","password","result","error","errorMessage","code","message","_x","_x2","apply","arguments","register","_ref2","name","displayName","_x3","_x4","_x5","logout","_ref3","resetPassword","_ref4","_x6","updateUserProfile","_ref5","data","currentUser","_objectSpread","_x7"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/auth/hooks/useAuth.js"],"sourcesContent":["import {\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  sendPasswordResetEmail,\r\n  updateProfile,\r\n} from 'firebase/auth'; //correct\r\nimport { useContext, useState, useEffect } from 'react'; //correct\r\n\r\nimport { auth } from '../../../core/config/firebase'; //correct\r\nimport { useAuth as useAuthContext, AuthProvider, AuthContext } from '../../../core/contexts/AuthContext'; //correct\r\nimport { useToast } from '../../../shared/hooks/useToast'; //correct'\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  const { showToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n\r\n  const { user, setUser } = context;\r\n\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(result.user);\r\n      showToast('Successfully logged in', 'success');\r\n      return result.user;\r\n    } catch (error) {\r\n      let errorMessage = 'Failed to login';\r\n      switch (error.code) {\r\n        case 'auth/user-not-found':\r\n          errorMessage = 'No account found with this email';\r\n          break;\r\n        case 'auth/wrong-password':\r\n          errorMessage = 'Invalid password';\r\n          break;\r\n        case 'auth/invalid-email':\r\n          errorMessage = 'Invalid email format';\r\n          break;\r\n        case 'auth/too-many-requests':\r\n          errorMessage = 'Too many failed attempts. Please try again later';\r\n          break;\r\n        default:\r\n          errorMessage = error.message;\r\n      }\r\n      showToast(errorMessage, 'error');\r\n      throw new Error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (email, password, name) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await createUserWithEmailAndPassword(auth, email, password);\r\n      await updateProfile(result.user, { displayName: name });\r\n      setUser(result.user);\r\n      showToast('Account created successfully', 'success');\r\n      return result.user;\r\n    } catch (error) {\r\n      let errorMessage = 'Failed to create account';\r\n      switch (error.code) {\r\n        case 'auth/email-already-in-use':\r\n          errorMessage = 'Email is already registered';\r\n          break;\r\n        case 'auth/invalid-email':\r\n          errorMessage = 'Invalid email format';\r\n          break;\r\n        case 'auth/weak-password':\r\n          errorMessage = 'Password is too weak';\r\n          break;\r\n        default:\r\n          errorMessage = error.message;\r\n      }\r\n      showToast(errorMessage, 'error');\r\n      throw new Error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n      showToast('Successfully logged out', 'success');\r\n    } catch (error) {\r\n      showToast('Failed to logout', 'error');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async email => {\r\n    setLoading(true);\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      showToast('Password reset email sent', 'success');\r\n    } catch (error) {\r\n      let errorMessage = 'Failed to send reset email';\r\n      switch (error.code) {\r\n        case 'auth/user-not-found':\r\n          errorMessage = 'No account found with this email';\r\n          break;\r\n        case 'auth/invalid-email':\r\n          errorMessage = 'Invalid email format';\r\n          break;\r\n        default:\r\n          errorMessage = error.message;\r\n      }\r\n      showToast(errorMessage, 'error');\r\n      throw new Error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUserProfile = async data => {\r\n    setLoading(true);\r\n    try {\r\n      await updateProfile(auth.currentUser, data);\r\n      setUser({ ...auth.currentUser });\r\n      showToast('Profile updated successfully', 'success');\r\n    } catch (error) {\r\n      showToast('Failed to update profile', 'error');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    resetPassword,\r\n    updateUserProfile,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
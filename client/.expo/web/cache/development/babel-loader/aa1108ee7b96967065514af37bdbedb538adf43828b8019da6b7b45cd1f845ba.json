{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { collection, query, where, orderBy, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { useState, useEffect } from 'react';\nimport { db } from \"../../../core/config/firebase\";\nimport { useAuth } from \"../../../features/auth/hooks/useAuth\";\nexport var useReceipts = function useReceipts() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    receipts = _useState2[0],\n    setReceipts = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var fetchReceipts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      try {\n        setLoading(true);\n        var receiptsRef = collection(db, 'receipts');\n        var q = query(receiptsRef, where('userId', '==', user.uid), orderBy('date', 'desc'));\n        if (filters.startDate) {\n          q = query(q, where('date', '>=', filters.startDate));\n        }\n        if (filters.endDate) {\n          q = query(q, where('date', '<=', filters.endDate));\n        }\n        if (filters.category) {\n          q = query(q, where('category', '==', filters.category));\n        }\n        var snapshot = yield getDocs(q);\n        var receiptData = snapshot.docs.map(function (doc) {\n          return _objectSpread({\n            id: doc.id\n          }, doc.data());\n        });\n        setReceipts(receiptData);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchReceipts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var addReceipt = function () {\n    var _ref2 = _asyncToGenerator(function* (receiptData) {\n      try {\n        var receiptsRef = collection(db, 'receipts');\n        var newReceipt = _objectSpread(_objectSpread({}, receiptData), {}, {\n          userId: user.uid,\n          createdAt: new Date().toISOString()\n        });\n        var docRef = yield addDoc(receiptsRef, newReceipt);\n        return _objectSpread({\n          id: docRef.id\n        }, newReceipt);\n      } catch (err) {\n        throw new Error('Failed to add receipt');\n      }\n    });\n    return function addReceipt(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateReceipt = function () {\n    var _ref3 = _asyncToGenerator(function* (id, receiptData) {\n      try {\n        var receiptRef = doc(db, 'receipts', id);\n        yield updateDoc(receiptRef, _objectSpread(_objectSpread({}, receiptData), {}, {\n          updatedAt: new Date().toISOString()\n        }));\n      } catch (err) {\n        throw new Error('Failed to update receipt');\n      }\n    });\n    return function updateReceipt(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var deleteReceipt = function () {\n    var _ref4 = _asyncToGenerator(function* (id) {\n      try {\n        var receiptRef = doc(db, 'receipts', id);\n        yield deleteDoc(receiptRef);\n      } catch (err) {\n        throw new Error('Failed to delete receipt');\n      }\n    });\n    return function deleteReceipt(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (user) {\n      fetchReceipts();\n    }\n  }, [user]);\n  return {\n    receipts: receipts,\n    loading: loading,\n    error: error,\n    fetchReceipts: fetchReceipts,\n    addReceipt: addReceipt,\n    updateReceipt: updateReceipt,\n    deleteReceipt: deleteReceipt\n  };\n};","map":{"version":3,"names":["collection","query","where","orderBy","getDocs","addDoc","updateDoc","deleteDoc","doc","useState","useEffect","db","useAuth","useReceipts","_useState","_useState2","_slicedToArray","receipts","setReceipts","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useAuth","user","fetchReceipts","_ref","_asyncToGenerator","filters","arguments","length","undefined","receiptsRef","q","uid","startDate","endDate","category","snapshot","receiptData","docs","map","_objectSpread","id","data","err","message","apply","addReceipt","_ref2","newReceipt","userId","createdAt","Date","toISOString","docRef","Error","_x","updateReceipt","_ref3","receiptRef","updatedAt","_x2","_x3","deleteReceipt","_ref4","_x4"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/receipts/hooks/useReceipts.js"],"sourcesContent":["import {\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from 'firebase/firestore'; //correct\r\nimport { useState, useEffect } from 'react'; //correct\n\r\nimport { db } from '../../../core/config/firebase'; //correct\r\nimport { useAuth } from '../../../features/auth/hooks/useAuth'; //correct\r\n\r\nexport const useReceipts = () => {\r\n  const [receipts, setReceipts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  const fetchReceipts = async (filters = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      const receiptsRef = collection(db, 'receipts');\r\n      let q = query(receiptsRef, where('userId', '==', user.uid), orderBy('date', 'desc'));\r\n\r\n      if (filters.startDate) {\r\n        q = query(q, where('date', '>=', filters.startDate));\r\n      }\r\n      if (filters.endDate) {\r\n        q = query(q, where('date', '<=', filters.endDate));\r\n      }\r\n      if (filters.category) {\r\n        q = query(q, where('category', '==', filters.category));\r\n      }\r\n\r\n      const snapshot = await getDocs(q);\r\n      const receiptData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      setReceipts(receiptData);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addReceipt = async receiptData => {\r\n    try {\r\n      const receiptsRef = collection(db, 'receipts');\r\n      const newReceipt = {\r\n        ...receiptData,\r\n        userId: user.uid,\r\n        createdAt: new Date().toISOString(),\r\n      };\r\n\r\n      const docRef = await addDoc(receiptsRef, newReceipt);\r\n      return { id: docRef.id, ...newReceipt };\r\n    } catch (err) {\r\n      throw new Error('Failed to add receipt');\r\n    }\r\n  };\r\n\r\n  const updateReceipt = async (id, receiptData) => {\r\n    try {\r\n      const receiptRef = doc(db, 'receipts', id);\r\n      await updateDoc(receiptRef, {\r\n        ...receiptData,\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } catch (err) {\r\n      throw new Error('Failed to update receipt');\r\n    }\r\n  };\r\n\r\n  const deleteReceipt = async id => {\r\n    try {\r\n      const receiptRef = doc(db, 'receipts', id);\r\n      await deleteDoc(receiptRef);\r\n    } catch (err) {\r\n      throw new Error('Failed to delete receipt');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchReceipts();\r\n    }\r\n  }, [user]);\r\n\r\n  return {\r\n    receipts,\r\n    loading,\r\n    error,\r\n    fetchReceipts,\r\n    addReceipt,\r\n    updateReceipt,\r\n    deleteReceipt,\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
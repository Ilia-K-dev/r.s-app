{"ast":null,"code":"import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\nimport { Card } from \"../../../../shared/components/ui/Card\";\nimport { formatCurrency } from \"../../../../shared/utils/currency\";\nimport { formatDate } from \"../../../../shared/utils/date\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var StockPredictionChart = function StockPredictionChart(_ref) {\n  var data = _ref.data;\n  return _jsxs(Card, {\n    className: \"h-[400px]\",\n    children: [_jsx(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Stock Level Predictions\"\n    }), _jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: _jsxs(AreaChart, {\n        data: data,\n        children: [_jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#E5E7EB\"\n        }), _jsx(XAxis, {\n          dataKey: \"date\",\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickFormatter: function tickFormatter(value) {\n            return formatDate(value, 'MMM dd');\n          }\n        }), _jsx(YAxis, {\n          stroke: \"#6B7280\",\n          fontSize: 12\n        }), _jsx(Tooltip, {\n          content: function content(_ref2) {\n            var active = _ref2.active,\n              payload = _ref2.payload,\n              label = _ref2.label;\n            if (!active || !payload) return null;\n            return _jsxs(\"div\", {\n              className: \"bg-white p-3 shadow-lg border rounded-lg\",\n              children: [_jsx(\"p\", {\n                className: \"font-medium\",\n                children: formatDate(label, 'MMM dd, yyyy')\n              }), _jsxs(\"p\", {\n                children: [\"Predicted Stock: \", payload[0].value]\n              }), _jsxs(\"p\", {\n                children: [\"Confidence: \", (payload[1].value * 100).toFixed(1), \"%\"]\n              })]\n            });\n          }\n        }), _jsx(Legend, {}), _jsx(Area, {\n          type: \"monotone\",\n          dataKey: \"predictedStock\",\n          stroke: \"#0EA5E9\",\n          fill: \"#0EA5E9\",\n          fillOpacity: 0.2\n        }), _jsx(Area, {\n          type: \"monotone\",\n          dataKey: \"confidence\",\n          stroke: \"#22C55E\",\n          fill: \"#22C55E\",\n          fillOpacity: 0.1\n        })]\n      })\n    })]\n  });\n};\nexport var PriceElasticityChart = function PriceElasticityChart(_ref3) {\n  var data = _ref3.data;\n  return _jsxs(Card, {\n    className: \"h-[400px]\",\n    children: [_jsx(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Price Elasticity Analysis\"\n    }), _jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: _jsxs(LineChart, {\n        data: data,\n        children: [_jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#E5E7EB\"\n        }), _jsx(XAxis, {\n          dataKey: \"price\",\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickFormatter: function tickFormatter(value) {\n            return formatCurrency(value);\n          }\n        }), _jsx(YAxis, {\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickFormatter: function tickFormatter(value) {\n            return `${value} units`;\n          }\n        }), _jsx(Tooltip, {\n          content: function content(_ref4) {\n            var active = _ref4.active,\n              payload = _ref4.payload,\n              label = _ref4.label;\n            if (!active || !payload) return null;\n            return _jsxs(\"div\", {\n              className: \"bg-white p-3 shadow-lg border rounded-lg\",\n              children: [_jsxs(\"p\", {\n                className: \"font-medium\",\n                children: [\"Price: \", formatCurrency(label)]\n              }), _jsxs(\"p\", {\n                children: [\"Demand: \", payload[0].value, \" units\"]\n              }), _jsxs(\"p\", {\n                children: [\"Elasticity: \", payload[1].value.toFixed(2)]\n              })]\n            });\n          }\n        }), _jsx(Legend, {}), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"demand\",\n          stroke: \"#0EA5E9\",\n          strokeWidth: 2\n        }), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"elasticity\",\n          stroke: \"#22C55E\",\n          strokeWidth: 2\n        })]\n      })\n    })]\n  });\n};\nexport var SpendingForecastChart = function SpendingForecastChart(_ref5) {\n  var data = _ref5.data;\n  return _jsxs(Card, {\n    className: \"h-[400px]\",\n    children: [_jsx(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Spending Forecast\"\n    }), _jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: _jsxs(LineChart, {\n        data: data,\n        children: [_jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#E5E7EB\"\n        }), _jsx(XAxis, {\n          dataKey: \"month\",\n          stroke: \"#6B7280\",\n          fontSize: 12\n        }), _jsx(YAxis, {\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickFormatter: function tickFormatter(value) {\n            return formatCurrency(value);\n          }\n        }), _jsx(Tooltip, {\n          content: function content(_ref6) {\n            var _payload$;\n            var active = _ref6.active,\n              payload = _ref6.payload,\n              label = _ref6.label;\n            if (!active || !payload) return null;\n            return _jsxs(\"div\", {\n              className: \"bg-white p-3 shadow-lg border rounded-lg\",\n              children: [_jsx(\"p\", {\n                className: \"font-medium\",\n                children: label\n              }), _jsxs(\"p\", {\n                children: [\"Historical: \", payload[0].value ? formatCurrency(payload[0].value) : 'N/A']\n              }), _jsxs(\"p\", {\n                children: [\"Forecast: \", payload[1].value ? formatCurrency(payload[1].value) : 'N/A']\n              }), _jsxs(\"p\", {\n                children: [\"Confidence:\", ' ', (_payload$ = payload[2]) != null && _payload$.value ? `${(payload[2].value * 100).toFixed(1)}%` : 'N/A']\n              })]\n            });\n          }\n        }), _jsx(Legend, {}), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"historical\",\n          stroke: \"#0EA5E9\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#0EA5E9',\n            r: 4\n          }\n        }), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"forecast\",\n          stroke: \"#22C55E\",\n          strokeWidth: 2,\n          strokeDasharray: \"5 5\",\n          dot: {\n            fill: '#22C55E',\n            r: 4\n          }\n        }), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"confidence\",\n          stroke: \"#EAB308\",\n          strokeWidth: 1\n        })]\n      })\n    })]\n  });\n};\nexport var SeasonalPatternChart = function SeasonalPatternChart(_ref7) {\n  var data = _ref7.data;\n  return _jsxs(Card, {\n    className: \"h-[400px]\",\n    children: [_jsx(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Seasonal Patterns\"\n    }), _jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: _jsxs(LineChart, {\n        data: data,\n        children: [_jsx(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#E5E7EB\"\n        }), _jsx(XAxis, {\n          dataKey: \"month\",\n          stroke: \"#6B7280\",\n          fontSize: 12\n        }), _jsx(YAxis, {\n          stroke: \"#6B7280\",\n          fontSize: 12,\n          tickFormatter: function tickFormatter(value) {\n            return `${(value * 100).toFixed(0)}%`;\n          }\n        }), _jsx(Tooltip, {\n          content: function content(_ref8) {\n            var active = _ref8.active,\n              payload = _ref8.payload,\n              label = _ref8.label;\n            if (!active || !payload) return null;\n            return _jsxs(\"div\", {\n              className: \"bg-white p-3 shadow-lg border rounded-lg\",\n              children: [_jsx(\"p\", {\n                className: \"font-medium\",\n                children: label\n              }), _jsxs(\"p\", {\n                children: [\"Seasonal Factor: \", (payload[0].value * 100).toFixed(1), \"%\"]\n              }), _jsxs(\"p\", {\n                children: [\"Trend: \", payload[1].value > 1 ? 'Above Average' : 'Below Average']\n              })]\n            });\n          }\n        }), _jsx(Legend, {}), _jsx(Line, {\n          type: \"monotone\",\n          dataKey: \"seasonalFactor\",\n          stroke: \"#0EA5E9\",\n          strokeWidth: 2,\n          dot: {\n            fill: '#0EA5E9',\n            r: 4\n          }\n        })]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","Card","formatCurrency","formatDate","jsx","_jsx","jsxs","_jsxs","StockPredictionChart","_ref","data","className","children","width","height","strokeDasharray","stroke","dataKey","fontSize","tickFormatter","value","content","_ref2","active","payload","label","toFixed","type","fill","fillOpacity","PriceElasticityChart","_ref3","_ref4","strokeWidth","SpendingForecastChart","_ref5","_ref6","_payload$","dot","r","SeasonalPatternChart","_ref7","_ref8"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/dashboard/PredictiveCharts.js"],"sourcesContent":["import React from 'react'; //correct\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n} from 'recharts';\n\r\nimport { Card } from '../../../../shared/components/ui/Card'; //correct\r\nimport { formatCurrency } from '../../../../shared/utils/currency'; //correct\r\nimport { formatDate } from '../../../../shared/utils/date'; //correct\r\n\r\n// Stock Prediction Chart\r\nexport const StockPredictionChart = ({ data }) => (\r\n  <Card className=\"h-[400px]\">\r\n    <h3 className=\"text-lg font-semibold mb-4\">Stock Level Predictions</h3>\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <AreaChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n        <XAxis\r\n          dataKey=\"date\"\r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n          tickFormatter={value => formatDate(value, 'MMM dd')}\r\n        />\r\n        <YAxis stroke=\"#6B7280\" fontSize={12} />\r\n        <Tooltip\r\n          content={({ active, payload, label }) => {\r\n            if (!active || !payload) return null;\r\n            return (\r\n              <div className=\"bg-white p-3 shadow-lg border rounded-lg\">\r\n                <p className=\"font-medium\">{formatDate(label, 'MMM dd, yyyy')}</p>\r\n                <p>Predicted Stock: {payload[0].value}</p>\r\n                <p>Confidence: {(payload[1].value * 100).toFixed(1)}%</p>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n        <Legend />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"predictedStock\"\r\n          stroke=\"#0EA5E9\"\r\n          fill=\"#0EA5E9\"\r\n          fillOpacity={0.2}\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"confidence\"\r\n          stroke=\"#22C55E\"\r\n          fill=\"#22C55E\"\r\n          fillOpacity={0.1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  </Card>\r\n);\r\n\r\n// Price Elasticity Chart\r\nexport const PriceElasticityChart = ({ data }) => (\r\n  <Card className=\"h-[400px]\">\r\n    <h3 className=\"text-lg font-semibold mb-4\">Price Elasticity Analysis</h3>\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n        <XAxis\r\n          dataKey=\"price\"\r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n          tickFormatter={value => formatCurrency(value)}\r\n        />\r\n        <YAxis stroke=\"#6B7280\" fontSize={12} tickFormatter={value => `${value} units`} />\r\n        <Tooltip\r\n          content={({ active, payload, label }) => {\r\n            if (!active || !payload) return null;\r\n            return (\r\n              <div className=\"bg-white p-3 shadow-lg border rounded-lg\">\r\n                <p className=\"font-medium\">Price: {formatCurrency(label)}</p>\r\n                <p>Demand: {payload[0].value} units</p>\r\n                <p>Elasticity: {payload[1].value.toFixed(2)}</p>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"demand\" stroke=\"#0EA5E9\" strokeWidth={2} />\r\n        <Line type=\"monotone\" dataKey=\"elasticity\" stroke=\"#22C55E\" strokeWidth={2} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  </Card>\r\n);\r\n\r\n// Spending Forecast Chart\r\nexport const SpendingForecastChart = ({ data }) => (\r\n  <Card className=\"h-[400px]\">\r\n    <h3 className=\"text-lg font-semibold mb-4\">Spending Forecast</h3>\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n        <XAxis dataKey=\"month\" stroke=\"#6B7280\" fontSize={12} />\r\n        <YAxis stroke=\"#6B7280\" fontSize={12} tickFormatter={value => formatCurrency(value)} />\r\n        <Tooltip\r\n          content={({ active, payload, label }) => {\r\n            if (!active || !payload) return null;\r\n            return (\r\n              <div className=\"bg-white p-3 shadow-lg border rounded-lg\">\r\n                <p className=\"font-medium\">{label}</p>\r\n                <p>Historical: {payload[0].value ? formatCurrency(payload[0].value) : 'N/A'}</p>\r\n                <p>Forecast: {payload[1].value ? formatCurrency(payload[1].value) : 'N/A'}</p>\r\n                <p>\r\n                  Confidence:{' '}\r\n                  {payload[2]?.value ? `${(payload[2].value * 100).toFixed(1)}%` : 'N/A'}\r\n                </p>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"historical\"\r\n          stroke=\"#0EA5E9\"\r\n          strokeWidth={2}\r\n          dot={{ fill: '#0EA5E9', r: 4 }}\r\n        />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"forecast\"\r\n          stroke=\"#22C55E\"\r\n          strokeWidth={2}\r\n          strokeDasharray=\"5 5\"\r\n          dot={{ fill: '#22C55E', r: 4 }}\r\n        />\r\n        <Line type=\"monotone\" dataKey=\"confidence\" stroke=\"#EAB308\" strokeWidth={1} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  </Card>\r\n);\r\n\r\n// Seasonal Pattern Chart\r\nexport const SeasonalPatternChart = ({ data }) => (\r\n  <Card className=\"h-[400px]\">\r\n    <h3 className=\"text-lg font-semibold mb-4\">Seasonal Patterns</h3>\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <LineChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#E5E7EB\" />\r\n        <XAxis dataKey=\"month\" stroke=\"#6B7280\" fontSize={12} />\r\n        <YAxis\r\n          stroke=\"#6B7280\"\r\n          fontSize={12}\r\n          tickFormatter={value => `${(value * 100).toFixed(0)}%`}\r\n        />\r\n        <Tooltip\r\n          content={({ active, payload, label }) => {\r\n            if (!active || !payload) return null;\r\n            return (\r\n              <div className=\"bg-white p-3 shadow-lg border rounded-lg\">\r\n                <p className=\"font-medium\">{label}</p>\r\n                <p>Seasonal Factor: {(payload[0].value * 100).toFixed(1)}%</p>\r\n                <p>Trend: {payload[1].value > 1 ? 'Above Average' : 'Below Average'}</p>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"seasonalFactor\"\r\n          stroke=\"#0EA5E9\"\r\n          strokeWidth={2}\r\n          dot={{ fill: '#0EA5E9', r: 4 }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  </Card>\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
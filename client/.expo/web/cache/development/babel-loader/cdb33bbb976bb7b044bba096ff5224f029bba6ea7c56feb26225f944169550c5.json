{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport { Card } from \"../../../shared/components/ui/Card\";\nimport { Button } from \"../../../shared/components/ui/Button\";\nimport { Switch } from \"../../../shared/components/forms/Switch\";\nimport { Alert } from \"../../../shared/components/ui/Alert\";\nimport { useAuth } from \"../../auth/hooks/useAuth\";\nimport { useToast } from \"../../../shared/hooks/useToast\";\nimport { Save, Bell } from 'lucide-react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var NotificationSettings = function NotificationSettings() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useToast = useToast(),\n    showToast = _useToast.showToast;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    success = _useState6[0],\n    setSuccess = _useState6[1];\n  var _useState7 = useState({\n      emailNotifications: false,\n      pushNotifications: false,\n      receiptProcessed: true,\n      monthlyReports: true,\n      lowStockAlerts: true\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    preferences = _useState8[0],\n    setPreferences = _useState8[1];\n  useEffect(function () {\n    var fetchNotificationPreferences = function () {\n      var _ref = _asyncToGenerator(function* () {\n        setPreferences({\n          emailNotifications: true,\n          pushNotifications: false,\n          receiptProcessed: true,\n          monthlyReports: true,\n          lowStockAlerts: true\n        });\n      });\n      return function fetchNotificationPreferences() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (user) {\n      fetchNotificationPreferences();\n    }\n  }, [user]);\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (e) {\n      e.preventDefault();\n      setLoading(true);\n      setError(null);\n      setSuccess(false);\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n        setSuccess(true);\n        showToast('Notification settings updated', 'success');\n      } catch (err) {\n        setError('Failed to update notification settings');\n        showToast('Failed to update notification settings', 'error');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Card, {\n    className: \"p-6\",\n    children: [_jsx(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Notification Settings\"\n    }), error && _jsx(Alert, {\n      type: \"error\",\n      message: error,\n      className: \"mb-4\"\n    }), success && _jsx(Alert, {\n      type: \"success\",\n      message: \"Notification settings updated successfully\",\n      className: \"mb-4\"\n    }), _jsxs(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6\",\n      children: [_jsxs(\"div\", {\n        className: \"space-y-4\",\n        children: [_jsx(\"h3\", {\n          className: \"text-lg font-medium\",\n          children: \"Notification Channels\"\n        }), _jsxs(\"div\", {\n          className: \"space-y-3\",\n          children: [_jsx(Switch, {\n            label: \"Email Notifications\",\n            checked: preferences.emailNotifications,\n            onChange: function onChange(checked) {\n              return setPreferences(_objectSpread(_objectSpread({}, preferences), {}, {\n                emailNotifications: checked\n              }));\n            },\n            description: \"Receive notifications via email\"\n          }), _jsx(Switch, {\n            label: \"Push Notifications\",\n            checked: preferences.pushNotifications,\n            onChange: function onChange(checked) {\n              return setPreferences(_objectSpread(_objectSpread({}, preferences), {}, {\n                pushNotifications: checked\n              }));\n            },\n            description: \"Receive in-app notifications\"\n          })]\n        })]\n      }), _jsxs(\"div\", {\n        className: \"space-y-4\",\n        children: [_jsx(\"h3\", {\n          className: \"text-lg font-medium\",\n          children: \"Notification Types\"\n        }), _jsxs(\"div\", {\n          className: \"space-y-3\",\n          children: [_jsx(Switch, {\n            label: \"Receipt Processed\",\n            checked: preferences.receiptProcessed,\n            onChange: function onChange(checked) {\n              return setPreferences(_objectSpread(_objectSpread({}, preferences), {}, {\n                receiptProcessed: checked\n              }));\n            },\n            description: \"Notify when a receipt has been processed\"\n          }), _jsx(Switch, {\n            label: \"Monthly Reports\",\n            checked: preferences.monthlyReports,\n            onChange: function onChange(checked) {\n              return setPreferences(_objectSpread(_objectSpread({}, preferences), {}, {\n                monthlyReports: checked\n              }));\n            },\n            description: \"Receive monthly spending reports\"\n          }), _jsx(Switch, {\n            label: \"Low Stock Alerts\",\n            checked: preferences.lowStockAlerts,\n            onChange: function onChange(checked) {\n              return setPreferences(_objectSpread(_objectSpread({}, preferences), {}, {\n                lowStockAlerts: checked\n              }));\n            },\n            description: \"Get alerted when inventory items are running low\"\n          })]\n        })]\n      }), _jsx(\"div\", {\n        className: \"flex justify-end\",\n        children: _jsx(Button, {\n          type: \"submit\",\n          loading: loading,\n          icon: Save,\n          children: \"Save Preferences\"\n        })\n      })]\n    })]\n  });\n};\nexport default NotificationSettings;","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Switch","Alert","useAuth","useToast","Save","Bell","jsx","_jsx","jsxs","_jsxs","NotificationSettings","_useAuth","user","_useToast","showToast","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","success","setSuccess","_useState7","emailNotifications","pushNotifications","receiptProcessed","monthlyReports","lowStockAlerts","_useState8","preferences","setPreferences","fetchNotificationPreferences","_ref","_asyncToGenerator","apply","arguments","handleSubmit","_ref2","e","preventDefault","Promise","resolve","setTimeout","err","_x","className","children","type","message","onSubmit","label","checked","onChange","_objectSpread","description","icon"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/settings/components/NotificationSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card } from '../../../shared/components/ui/Card';\r\nimport { Button } from '../../../shared/components/ui/Button';\r\nimport { Switch } from '../../../shared/components/forms/Switch';\r\nimport { Alert } from '../../../shared/components/ui/Alert';\r\nimport { useAuth } from '../../auth/hooks/useAuth';\r\nimport { useToast } from '../../../shared/hooks/useToast';\r\nimport { Save, Bell } from 'lucide-react';\r\n\r\nexport const NotificationSettings = () => {\r\n  const { user } = useAuth();\r\n  const { showToast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  \r\n  const [preferences, setPreferences] = useState({\r\n    emailNotifications: false,\r\n    pushNotifications: false,\r\n    receiptProcessed: true,\r\n    monthlyReports: true,\r\n    lowStockAlerts: true\r\n  });\r\n  \r\n  useEffect(() => {\r\n    const fetchNotificationPreferences = async () => {\r\n      // In a real app, fetch user preferences from the backend\r\n      // For this example, we'll use dummy data\r\n      setPreferences({\r\n        emailNotifications: true,\r\n        pushNotifications: false,\r\n        receiptProcessed: true,\r\n        monthlyReports: true,\r\n        lowStockAlerts: true\r\n      });\r\n    };\r\n    \r\n    if (user) {\r\n      fetchNotificationPreferences();\r\n    }\r\n  }, [user]);\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n    \r\n    try {\r\n      // In a real app, save preferences to the backend\r\n      // For now, we'll just simulate a delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setSuccess(true);\r\n      showToast('Notification settings updated', 'success');\r\n    } catch (err) {\r\n      setError('Failed to update notification settings');\r\n      showToast('Failed to update notification settings', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"p-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Notification Settings</h2>\r\n      \r\n      {error && (\r\n        <Alert \r\n          type=\"error\" \r\n          message={error} \r\n          className=\"mb-4\" \r\n        />\r\n      )}\r\n      \r\n      {success && (\r\n        <Alert \r\n          type=\"success\" \r\n          message=\"Notification settings updated successfully\" \r\n          className=\"mb-4\" \r\n        />\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <div className=\"space-y-4\">\r\n          <h3 className=\"text-lg font-medium\">Notification Channels</h3>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <Switch\r\n              label=\"Email Notifications\"\r\n              checked={preferences.emailNotifications}\r\n              onChange={(checked) => setPreferences({ ...preferences, emailNotifications: checked })}\r\n              description=\"Receive notifications via email\"\r\n            />\r\n            \r\n            <Switch\r\n              label=\"Push Notifications\"\r\n              checked={preferences.pushNotifications}\r\n              onChange={(checked) => setPreferences({ ...preferences, pushNotifications: checked })}\r\n              description=\"Receive in-app notifications\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"space-y-4\">\r\n          <h3 className=\"text-lg font-medium\">Notification Types</h3>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <Switch\r\n              label=\"Receipt Processed\"\r\n              checked={preferences.receiptProcessed}\r\n              onChange={(checked) => setPreferences({ ...preferences, receiptProcessed: checked })}\r\n              description=\"Notify when a receipt has been processed\"\r\n            />\r\n            \r\n            <Switch\r\n              label=\"Monthly Reports\"\r\n              checked={preferences.monthlyReports}\r\n              onChange={(checked) => setPreferences({ ...preferences, monthlyReports: checked })}\r\n              description=\"Receive monthly spending reports\"\r\n            />\r\n            \r\n            <Switch\r\n              label=\"Low Stock Alerts\"\r\n              checked={preferences.lowStockAlerts}\r\n              onChange={(checked) => setPreferences({ ...preferences, lowStockAlerts: checked })}\r\n              description=\"Get alerted when inventory items are running low\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex justify-end\">\r\n          <Button\r\n            type=\"submit\"\r\n            loading={loading}\r\n            icon={Save}\r\n          >\r\n            Save Preferences\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NotificationSettings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
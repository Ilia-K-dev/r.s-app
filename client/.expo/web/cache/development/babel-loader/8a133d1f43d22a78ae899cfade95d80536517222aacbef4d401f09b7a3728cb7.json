{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nfunction logFirebaseStatus(message) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  console.log(`[Firebase] ${message}`, data);\n}\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAWx_ZcWGx8XoCl-fWXoO8TPJi7hzDrWjQ\",\n  authDomain: \"project-reciept-reader-id.firebaseapp.com\",\n  projectId: \"project-reciept-reader-id\",\n  storageBucket: \"project-reciept-reader-id.firebasestorage.app\",\n  messagingSenderId: \"747418219423\",\n  appId: \"1:747418219423:web:f77280788088223d55c3aa\"\n};\nvar app;\nvar auth;\nvar db;\nvar storage;\ntry {\n  if (!getApps().length) {\n    logFirebaseStatus(\"Initializing Firebase app...\");\n    app = initializeApp(firebaseConfig);\n    logFirebaseStatus(\"Firebase app initialized successfully\");\n  } else {\n    logFirebaseStatus(\"Firebase app already initialized\");\n    app = getApps()[0];\n  }\n  auth = getAuth(app);\n  db = getFirestore(app);\n  storage = getStorage(app);\n  logFirebaseStatus(\"Firebase services initialized successfully\", {\n    services: [\"Authentication\", \"Firestore\", \"Storage\"]\n  });\n} catch (error) {\n  console.error(\"CRITICAL ERROR: Firebase initialization failed\", error);\n  throw error;\n}\nexport { auth, db, storage, app };\nexport default app;","map":{"version":3,"names":["initializeApp","getApps","getAuth","getFirestore","getStorage","logFirebaseStatus","message","data","arguments","length","undefined","console","log","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","storage","services","error"],"sources":["C:/Users/user/Documents/app.v3/client/src/core/config/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// --- Diagnostic Logging Function ---\r\nfunction logFirebaseStatus(message, data = {}) {\r\n  console.log(`[Firebase] ${message}`, data);\r\n}\r\n\r\n// --- Hardcoded Firebase Configuration ---\r\n// IMPORTANT: Replace with environment variables once .env issues are resolved\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAWx_ZcWGx8XoCl-fWXoO8TPJi7hzDrWjQ\",\r\n  authDomain: \"project-reciept-reader-id.firebaseapp.com\",\r\n  projectId: \"project-reciept-reader-id\",\r\n  storageBucket: \"project-reciept-reader-id.firebasestorage.app\",\r\n  messagingSenderId: \"747418219423\",\r\n  appId: \"1:747418219423:web:f77280788088223d55c3aa\",\r\n};\r\n\r\n// --- Core Firebase Services ---\r\nlet app;\r\nlet auth;\r\nlet db;\r\nlet storage;\r\n\r\n// --- Initialize Firebase ---\r\ntry {\r\n  // Check if Firebase is already initialized\r\n  if (!getApps().length) {\r\n    logFirebaseStatus(\"Initializing Firebase app...\");\r\n    app = initializeApp(firebaseConfig);\r\n    logFirebaseStatus(\"Firebase app initialized successfully\");\r\n  } else {\r\n    logFirebaseStatus(\"Firebase app already initialized\");\r\n    app = getApps()[0];\r\n  }\r\n\r\n  // Initialize services\r\n  auth = getAuth(app);\r\n  db = getFirestore(app);\r\n  storage = getStorage(app);\r\n  logFirebaseStatus(\"Firebase services initialized successfully\", {\r\n    services: [\"Authentication\", \"Firestore\", \"Storage\"]\r\n  });\r\n} catch (error) {\r\n  console.error(\"CRITICAL ERROR: Firebase initialization failed\", error);\r\n  throw error;\r\n}\r\n\r\n// --- Future Environment Variable Support (Commented until fixed) ---\r\n/*\r\n// Define required environment variable keys\r\nconst requiredEnvKeys = [\r\n  'REACT_APP_FIREBASE_API_KEY',\r\n  'REACT_APP_FIREBASE_AUTH_DOMAIN',\r\n  'REACT_APP_FIREBASE_PROJECT_ID',\r\n  'REACT_APP_FIREBASE_STORAGE_BUCKET',\r\n  'REACT_APP_FIREBASE_MESSAGING_SENDER_ID',\r\n  'REACT_APP_FIREBASE_APP_ID'\r\n];\r\n\r\n// Validate environment variables\r\nconst validateEnvVariables = () => {\r\n  logFirebaseStatus(\"Validating Firebase environment variables...\");\r\n  const missingKeys = requiredEnvKeys.filter(key => \r\n    !process.env[key] || process.env[key].trim() === ''\r\n  );\r\n  \r\n  if (missingKeys.length > 0) {\r\n    const errorMsg = `CRITICAL ERROR: Missing or empty Firebase environment variables: ${missingKeys.join(', ')}. Check your .env file (e.g., .env.development in client/ folder), ensure all required REACT_APP_FIREBASE_... variables are set correctly, and restart the development server.`;\r\n    console.error(errorMsg); \r\n    throw new Error(errorMsg); \r\n  }\r\n  logFirebaseStatus(\"Firebase environment variables validated successfully.\");\r\n};\r\n\r\n// Create config from environment variables\r\nconst getConfigFromEnv = () => {\r\n  return {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  };\r\n};\r\n*/\r\n\r\n// Export Firebase services\r\nexport { auth, db, storage, app };\r\nexport default app;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,OAAO,QAAQ,cAAc;AACrD,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,UAAU,QAAQ,kBAAkB;AAG7C,SAASC,iBAAiBA,CAACC,OAAO,EAAa;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC3CG,OAAO,CAACC,GAAG,CAAC,cAAcN,OAAO,EAAE,EAAEC,IAAI,CAAC;AAC5C;AAIA,IAAMM,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,2CAA2C;EACvDC,SAAS,EAAE,2BAA2B;EACtCC,aAAa,EAAE,+CAA+C;EAC9DC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAGD,IAAIC,GAAG;AACP,IAAIC,IAAI;AACR,IAAIC,EAAE;AACN,IAAIC,OAAO;AAGX,IAAI;EAEF,IAAI,CAACtB,OAAO,CAAC,CAAC,CAACQ,MAAM,EAAE;IACrBJ,iBAAiB,CAAC,8BAA8B,CAAC;IACjDe,GAAG,GAAGpB,aAAa,CAACa,cAAc,CAAC;IACnCR,iBAAiB,CAAC,uCAAuC,CAAC;EAC5D,CAAC,MAAM;IACLA,iBAAiB,CAAC,kCAAkC,CAAC;IACrDe,GAAG,GAAGnB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB;EAGAoB,IAAI,GAAGnB,OAAO,CAACkB,GAAG,CAAC;EACnBE,EAAE,GAAGnB,YAAY,CAACiB,GAAG,CAAC;EACtBG,OAAO,GAAGnB,UAAU,CAACgB,GAAG,CAAC;EACzBf,iBAAiB,CAAC,4CAA4C,EAAE;IAC9DmB,QAAQ,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,SAAS;EACrD,CAAC,CAAC;AACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdd,OAAO,CAACc,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;EACtE,MAAMA,KAAK;AACb;AA2CA,SAASJ,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEH,GAAG;AAC/B,eAAeA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
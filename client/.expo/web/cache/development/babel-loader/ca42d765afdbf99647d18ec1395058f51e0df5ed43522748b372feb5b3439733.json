{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from \"../../auth/hooks/useAuth\";\nimport { receiptApi } from \"../services/receipts\";\nimport errorHandler from \"../../../shared/utils/errorHandler\";\nexport var useReceipts = function useReceipts() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    receipts = _useState2[0],\n    setReceipts = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState({\n      limit: 10,\n      startAfter: null,\n      hasNextPage: true\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    pagination = _useState8[0],\n    setPagination = _useState8[1];\n  var _useState9 = useState({}),\n    _useState10 = _slicedToArray(_useState9, 2),\n    filters = _useState10[0],\n    setFilters = _useState10[1];\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var fetchReceipts = useCallback(_asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      setLoading(true);\n      setError(null);\n      if (!user) {\n        throw new Error('User not authenticated');\n      }\n      var fetchOptions = _objectSpread(_objectSpread({\n        limit: pagination.limit,\n        startAfter: pagination.startAfter\n      }, filters), options);\n      var response = yield receiptApi.getReceipts(fetchOptions);\n      setReceipts(response.data.receipts || []);\n      setPagination(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          startAfter: response.data.pagination.lastVisible,\n          hasNextPage: response.data.pagination.hasNextPage\n        });\n      });\n    } catch (err) {\n      var userFriendlyMessage = errorHandler(err, 'Failed to fetch receipts.');\n      setError(userFriendlyMessage);\n    } finally {\n      setLoading(false);\n    }\n  }), [user, pagination.limit, pagination.startAfter, filters]);\n  var addReceipt = useCallback(function () {\n    var _ref2 = _asyncToGenerator(function* (receiptData) {\n      var imageFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      try {\n        setLoading(true);\n        setError(null);\n        if (!user) {\n          throw new Error('User not authenticated');\n        }\n        var result = yield receiptApi.createReceipt(receiptData, imageFile);\n        yield fetchReceipts({\n          startAfter: null\n        });\n        return result;\n      } catch (err) {\n        var userFriendlyMessage = errorHandler(err, 'Failed to add receipt.');\n        setError(userFriendlyMessage);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [user, fetchReceipts]);\n  var updateReceipt = useCallback(function () {\n    var _ref3 = _asyncToGenerator(function* (receiptId, receiptData) {\n      var imageFile = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      try {\n        setLoading(true);\n        setError(null);\n        if (!user) {\n          throw new Error('User not authenticated');\n        }\n        var result = yield receiptApi.updateReceipt(receiptId, receiptData, imageFile);\n        yield fetchReceipts();\n        return result;\n      } catch (err) {\n        var userFriendlyMessage = errorHandler(err, 'Failed to update receipt.');\n        setError(userFriendlyMessage);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function (_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [user, fetchReceipts]);\n  var deleteReceipt = useCallback(function () {\n    var _ref4 = _asyncToGenerator(function* (receiptId) {\n      try {\n        setLoading(true);\n        setError(null);\n        if (!user) {\n          throw new Error('User not authenticated');\n        }\n        yield receiptApi.deleteReceipt(receiptId);\n        yield fetchReceipts({\n          startAfter: null\n        });\n      } catch (err) {\n        var userFriendlyMessage = errorHandler(err, 'Failed to delete receipt.');\n        setError(userFriendlyMessage);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [user, fetchReceipts]);\n  useEffect(function () {\n    if (user) {\n      fetchReceipts();\n    } else {\n      setReceipts([]);\n    }\n  }, [user, fetchReceipts]);\n  return {\n    receipts: receipts,\n    loading: loading,\n    error: error,\n    pagination: pagination,\n    setPagination: setPagination,\n    filters: filters,\n    setFilters: setFilters,\n    fetchReceipts: fetchReceipts,\n    addReceipt: addReceipt,\n    updateReceipt: updateReceipt,\n    deleteReceipt: deleteReceipt\n  };\n};\nexport default useReceipts;","map":{"version":3,"names":["useState","useEffect","useCallback","useAuth","receiptApi","errorHandler","useReceipts","_useState","_useState2","_slicedToArray","receipts","setReceipts","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","limit","startAfter","hasNextPage","_useState8","pagination","setPagination","_useState9","_useState10","filters","setFilters","_useAuth","user","fetchReceipts","_asyncToGenerator","options","arguments","length","undefined","Error","fetchOptions","_objectSpread","response","getReceipts","data","prev","lastVisible","err","userFriendlyMessage","addReceipt","_ref2","receiptData","imageFile","result","createReceipt","_x","apply","updateReceipt","_ref3","receiptId","_x2","_x3","deleteReceipt","_ref4","_x4"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/receipts/hooks/useReceipts.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../auth/hooks/useAuth';\r\nimport { receiptApi } from '../services/receipts';\r\nimport errorHandler from '../../../shared/utils/errorHandler'; // Import the error handler utility\r\n\r\n/**\r\n * @typedef {object} Receipt\r\n * @property {string} id - The receipt ID.\r\n * @property {string} userId - The ID of the user who owns the receipt.\r\n * @property {string} merchant - The merchant name.\r\n * @property {Date} date - The date of the receipt.\r\n * @property {number} total - The total amount of the receipt.\r\n * // Add other relevant receipt properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} PaginationInfo\r\n * @property {number} limit - The number of items per page.\r\n * @property {string|null} startAfter - The ID of the last item from the previous page (for cursor-based pagination).\r\n * @property {boolean} hasNextPage - Indicates if there are more pages.\r\n */\r\n\r\n/**\r\n * @typedef {object} ReceiptFilters\r\n * @property {string} [category] - Filter by category.\r\n * @property {string} [merchant] - Filter by merchant name.\r\n * @property {string} [startDate] - Filter by start date (ISO 8601).\r\n * @property {string} [endDate] - Filter by end date (ISO 8601).\r\n * // Add other relevant filter properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} UseReceiptsReturn\r\n * @property {Receipt[]} receipts - Array of fetched receipts.\r\n * @property {boolean} loading - Loading state.\r\n * @property {string|null} error - Error message if fetching/mutating failed.\r\n * @property {PaginationInfo} pagination - Pagination information.\r\n * @property {function(PaginationInfo): void} setPagination - Function to update pagination state.\r\n * @property {ReceiptFilters} filters - Current filter state.\r\n * @property {function(ReceiptFilters): void} setFilters - Function to update filter state.\r\n * @property {function(object): Promise<void>} fetchReceipts - Function to fetch receipts with optional filters/pagination.\r\n * @property {function(object, File): Promise<object>} addReceipt - Function to add a new receipt.\r\n * @property {function(string, object, File): Promise<object>} updateReceipt - Function to update an existing receipt.\r\n * @property {function(string): Promise<void>} deleteReceipt - Function to delete a receipt.\r\n */\r\n\r\n/**\r\n * @desc Custom hook for fetching, adding, updating, and deleting user receipts.\r\n * Manages loading, error, pagination, and filter states.\r\n * @returns {UseReceiptsReturn} - Object containing receipts data, state, and functions.\r\n */\r\nexport const useReceipts = () => {\r\n  const [receipts, setReceipts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [pagination, setPagination] = useState({ limit: 10, startAfter: null, hasNextPage: true }); // Add pagination state\r\n  const [filters, setFilters] = useState({}); // Add filters state\r\n  const { user } = useAuth();\r\n\r\n  /**\r\n   * @desc Fetches receipts from the backend API with specified options.\r\n   * Updates receipts and pagination state.\r\n   * @param {object} [options] - Options to override current filters and pagination (e.g., { limit: 20, startAfter: 'abc', category: 'food' }).\r\n   * @returns {Promise<void>}\r\n   */\r\n  const fetchReceipts = useCallback(async (options = {}) => { // Accept options for filtering/pagination\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (!user) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n      // Merge default pagination and current filters with provided options\r\n      const fetchOptions = {\r\n          limit: pagination.limit,\r\n          startAfter: pagination.startAfter,\r\n          ...filters, // Include current filters\r\n          ...options // Allow overriding filters/pagination\r\n      };\r\n\r\n      const response = await receiptApi.getReceipts(fetchOptions);\r\n      setReceipts(response.data.receipts || []); // Assuming response structure is { receipts: [...], pagination: {...} }\r\n      setPagination(prev => ({ // Update pagination state from response\r\n          ...prev,\r\n          startAfter: response.data.pagination.lastVisible,\r\n          hasNextPage: response.data.pagination.hasNextPage\r\n      }));\r\n\r\n    } catch (err) {\r\n      const userFriendlyMessage = errorHandler(err, 'Failed to fetch receipts.');\r\n      setError(userFriendlyMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, pagination.limit, pagination.startAfter, filters]); // Add pagination and filters dependencies\r\n\r\n  /**\r\n   * @desc Adds a new receipt via the backend API.\r\n   * Refreshes the receipt list after successful addition.\r\n   * @param {object} receiptData - The data for the new receipt.\r\n   * @param {File} [imageFile=null] - Optional image file to upload with the receipt.\r\n   * @returns {Promise<object>} - A promise that resolves with the result from the API.\r\n   * @throws {Error} - Throws an error if the API request fails.\r\n   */\r\n  const addReceipt = useCallback(async (receiptData, imageFile = null) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (!user) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n      const result = await receiptApi.createReceipt(receiptData, imageFile);\r\n\r\n      // Refresh receipts list (go back to the first page to see the new receipt)\r\n      await fetchReceipts({ startAfter: null });\r\n\r\n      // errorHandler handles the toast internally\r\n      // showToast('Receipt added successfully', 'success');\r\n      return result;\r\n    } catch (err) {\r\n      const userFriendlyMessage = errorHandler(err, 'Failed to add receipt.');\r\n      setError(userFriendlyMessage);\r\n      throw err; // Re-throw for components that might need to catch\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, fetchReceipts]); // Add dependencies\r\n\r\n  /**\r\n   * @desc Updates an existing receipt via the backend API.\r\n   * Refreshes the receipt list after successful update.\r\n   * @param {string} receiptId - The ID of the receipt to update.\r\n   * @param {object} receiptData - The updated data for the receipt.\r\n   * @param {File} [imageFile=null] - Optional new image file to upload.\r\n   * @returns {Promise<object>} - A promise that resolves with the result from the API.\r\n   * @throws {Error} - Throws an error if the API request fails.\r\n   */\r\n  const updateReceipt = useCallback(async (receiptId, receiptData, imageFile = null) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (!user) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n      const result = await receiptApi.updateReceipt(receiptId, receiptData, imageFile);\r\n\r\n      // Refresh receipts list (stay on the current page)\r\n      await fetchReceipts();\r\n\r\n      // showToast('Receipt updated successfully', 'success');\r\n      return result;\r\n    } catch (err) {\r\n      const userFriendlyMessage = errorHandler(err, 'Failed to update receipt.');\r\n      setError(userFriendlyMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, fetchReceipts]); // Add dependencies\r\n\r\n  /**\r\n   * @desc Deletes a receipt via the backend API.\r\n   * Refreshes the receipt list after successful deletion.\r\n   * @param {string} receiptId - The ID of the receipt to delete.\r\n   * @returns {Promise<void>} - A promise that resolves when the deletion is complete.\r\n   * @throws {Error} - Throws an error if the API request fails.\r\n   */\r\n  const deleteReceipt = useCallback(async (receiptId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (!user) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n      await receiptApi.deleteReceipt(receiptId);\r\n\r\n      // Refresh receipts list (go back to the first page as the current page might be incomplete)\r\n      await fetchReceipts({ startAfter: null });\r\n\r\n      // showToast('Receipt deleted successfully', 'success');\r\n    } catch (err) {\r\n      const userFriendlyMessage = errorHandler(err, 'Failed to delete receipt.');\r\n      setError(userFriendlyMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, fetchReceipts]); // Add dependencies\r\n\r\n  // Fetch receipts when user changes or pagination/filters change\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchReceipts();\r\n    } else {\r\n      setReceipts([]);\r\n    }\r\n  }, [user, fetchReceipts]); // Add fetchReceipts as a dependency\r\n\r\n  return {\r\n    receipts,\r\n    loading,\r\n    error,\r\n    pagination, // Return pagination state\r\n    setPagination, // Return setPagination to allow components to control pagination\r\n    filters, // Return filters state\r\n    setFilters, // Return setFilters to allow components to control filters\r\n    fetchReceipts, // Keep fetchReceipts for manual refetching with options\r\n    addReceipt,\r\n    updateReceipt,\r\n    deleteReceipt\r\n  };\r\n};\r\n\r\nexport default useReceipts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
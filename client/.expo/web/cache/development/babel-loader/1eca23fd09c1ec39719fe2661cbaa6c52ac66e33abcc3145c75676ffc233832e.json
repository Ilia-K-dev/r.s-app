{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { getSpendingAnalytics, getInventoryAnalytics } from \"../services/analyticsService\";\nimport errorHandler from \"../../../shared/utils/errorHandler\";\nexport var useAnalytics = function useAnalytics(userId, startDate, endDate) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    spendingAnalytics = _useState2[0],\n    setSpendingAnalytics = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inventoryAnalytics = _useState4[0],\n    setInventoryAnalytics = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  useEffect(function () {\n    var fetchAnalytics = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          setLoading(true);\n          setError(null);\n          var spendingData = yield getSpendingAnalytics(userId, startDate, endDate);\n          var inventoryData = yield getInventoryAnalytics(userId);\n          setSpendingAnalytics(spendingData);\n          setInventoryAnalytics(inventoryData);\n        } catch (err) {\n          var userFriendlyMessage = errorHandler(err, 'Failed to fetch analytics.');\n          setError(userFriendlyMessage);\n        } finally {\n          setLoading(false);\n        }\n      });\n      return function fetchAnalytics() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (userId && startDate && endDate) {\n      fetchAnalytics();\n    } else {\n      setSpendingAnalytics(null);\n      setInventoryAnalytics(null);\n      setLoading(false);\n      setError(null);\n    }\n  }, [userId, startDate, endDate]);\n  return {\n    spendingAnalytics: spendingAnalytics,\n    inventoryAnalytics: inventoryAnalytics,\n    loading: loading,\n    error: error\n  };\n};\nexport default useAnalytics;","map":{"version":3,"names":["useState","useEffect","getSpendingAnalytics","getInventoryAnalytics","errorHandler","useAnalytics","userId","startDate","endDate","_useState","_useState2","_slicedToArray","spendingAnalytics","setSpendingAnalytics","_useState3","_useState4","inventoryAnalytics","setInventoryAnalytics","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","fetchAnalytics","_ref","_asyncToGenerator","spendingData","inventoryData","err","userFriendlyMessage","apply","arguments"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/hooks/useAnalytics.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport { getSpendingAnalytics, getInventoryAnalytics } from '../services/analyticsService';\r\nimport errorHandler from '../../../shared/utils/errorHandler'; // Import the error handler utility\r\n\r\n/**\r\n * @typedef {object} SpendingAnalytics\r\n * @property {number} total - Total spending.\r\n * @property {object} byCategory - Spending broken down by category.\r\n * @property {object} byVendor - Spending broken down by vendor.\r\n * @property {object} trends - Spending trends (daily, weekly, monthly).\r\n * @property {object} predictions - Predicted future spending.\r\n * // Add other relevant spending analytics properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} InventoryAnalytics\r\n * @property {object} stockLevels - Analysis of stock levels.\r\n * @property {object} turnover - Inventory turnover rates.\r\n * @property {object} optimization - Optimization recommendations.\r\n * @property {number} value - Total inventory value.\r\n * @property {object} metrics - Other inventory metrics.\r\n * // Add other relevant inventory analytics properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} UseAnalyticsReturn\r\n * @property {SpendingAnalytics|null} spendingAnalytics - Spending analytics data.\r\n * @property {InventoryAnalytics|null} inventoryAnalytics - Inventory analytics data.\r\n * @property {boolean} loading - Loading state.\r\n * @property {string|null} error - Error message if fetching failed.\r\n */\r\n\r\n/**\r\n * @desc Custom hook for fetching spending and inventory analytics data for a user within a date range.\r\n * Manages loading and error states.\r\n * @param {string} userId - The ID of the user.\r\n * @param {Date} startDate - Start date for spending analysis.\r\n * @param {Date} endDate - End date for spending analysis.\r\n * @returns {UseAnalyticsReturn} - Object containing analytics data, state, and functions.\r\n */\r\nexport const useAnalytics = (userId, startDate, endDate) => {\r\n  const [spendingAnalytics, setSpendingAnalytics] = useState(null);\r\n  const [inventoryAnalytics, setInventoryAnalytics] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * @desc Fetches spending and inventory analytics data from the backend services.\r\n     * Updates local state with fetched data or error.\r\n     * @returns {Promise<void>}\r\n     */\r\n    const fetchAnalytics = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const spendingData = await getSpendingAnalytics(userId, startDate, endDate);\r\n        const inventoryData = await getInventoryAnalytics(userId);\r\n\r\n        setSpendingAnalytics(spendingData);\r\n        setInventoryAnalytics(inventoryData);\r\n      } catch (err) {\r\n        const userFriendlyMessage = errorHandler(err, 'Failed to fetch analytics.');\r\n        setError(userFriendlyMessage);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Fetch analytics when userId, startDate, or endDate change\r\n    if (userId && startDate && endDate) {\r\n        fetchAnalytics();\r\n    } else {\r\n        // Reset state if required parameters are missing\r\n        setSpendingAnalytics(null);\r\n        setInventoryAnalytics(null);\r\n        setLoading(false);\r\n        setError(null);\r\n    }\r\n  }, [userId, startDate, endDate]); // Dependencies for useEffect\r\n\r\n  return {\r\n    spendingAnalytics,\r\n    inventoryAnalytics,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useAnalytics;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,oBAAoB,EAAEC,qBAAqB;AACpD,OAAOC,YAAY;AAsCnB,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAK;EAC1D,IAAAC,SAAA,GAAkDT,QAAQ,CAAC,IAAI,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzDG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAC9C,IAAAI,UAAA,GAAoDd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3DE,kBAAkB,GAAAD,UAAA;IAAEE,qBAAqB,GAAAF,UAAA;EAChD,IAAAG,UAAA,GAA8BlB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0BtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBtB,SAAS,CAAC,YAAM;IAMd,IAAMyB,cAAc;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACjC,IAAI;UACFP,UAAU,CAAC,IAAI,CAAC;UAChBI,QAAQ,CAAC,IAAI,CAAC;UAEd,IAAMI,YAAY,SAAS3B,oBAAoB,CAACI,MAAM,EAAEC,SAAS,EAAEC,OAAO,CAAC;UAC3E,IAAMsB,aAAa,SAAS3B,qBAAqB,CAACG,MAAM,CAAC;UAEzDO,oBAAoB,CAACgB,YAAY,CAAC;UAClCZ,qBAAqB,CAACa,aAAa,CAAC;QACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZ,IAAMC,mBAAmB,GAAG5B,YAAY,CAAC2B,GAAG,EAAE,4BAA4B,CAAC;UAC3EN,QAAQ,CAACO,mBAAmB,CAAC;QAC/B,CAAC,SAAS;UACRX,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAAA,gBAhBKK,cAAcA,CAAA;QAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAgBnB;IAGD,IAAI5B,MAAM,IAAIC,SAAS,IAAIC,OAAO,EAAE;MAChCkB,cAAc,CAAC,CAAC;IACpB,CAAC,MAAM;MAEHb,oBAAoB,CAAC,IAAI,CAAC;MAC1BI,qBAAqB,CAAC,IAAI,CAAC;MAC3BI,UAAU,CAAC,KAAK,CAAC;MACjBI,QAAQ,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,CAACnB,MAAM,EAAEC,SAAS,EAAEC,OAAO,CAAC,CAAC;EAEhC,OAAO;IACLI,iBAAiB,EAAjBA,iBAAiB;IACjBI,kBAAkB,EAAlBA,kBAAkB;IAClBI,OAAO,EAAPA,OAAO;IACPI,KAAK,EAALA;EACF,CAAC;AACH,CAAC;AAED,eAAenB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from 'react';\nimport { PieChart, Pie, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport { useTranslation } from 'react-i18next';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ModernCategoryChart = function ModernCategoryChart() {\n  var _useTranslation = useTranslation('analytics'),\n    t = _useTranslation.t,\n    i18n = _useTranslation.i18n;\n  var isRTL = i18n.language === 'he';\n  var data = [{\n    name: t('charts.categoryBreakdown.categories.categoryA'),\n    value: 400\n  }, {\n    name: t('charts.categoryBreakdown.categories.categoryB'),\n    value: 300\n  }, {\n    name: t('charts.categoryBreakdown.categories.categoryC'),\n    value: 300\n  }, {\n    name: t('charts.categoryBreakdown.categories.categoryD'),\n    value: 200\n  }];\n  var COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  return _jsx(\"div\", {\n    className: \"h-80\",\n    children: _jsx(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: _jsxs(PieChart, {\n        children: [_jsx(Pie, {\n          data: data,\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          dataKey: \"value\",\n          label: function label(_ref) {\n            var name = _ref.name,\n              percent = _ref.percent;\n            return `${name} ${(percent * 100).toFixed(0)}%`;\n          },\n          children: data.map(function (entry, index) {\n            return _jsx(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, `cell-${index}`);\n          })\n        }), _jsx(Tooltip, {\n          formatter: function formatter(value, name) {\n            return [`${value}`, `${name}`];\n          }\n        })]\n      })\n    })\n  });\n};\nexport default ModernCategoryChart;","map":{"version":3,"names":["React","PieChart","Pie","Tooltip","ResponsiveContainer","Cell","useTranslation","jsx","_jsx","jsxs","_jsxs","ModernCategoryChart","_useTranslation","t","i18n","isRTL","language","data","name","value","COLORS","className","children","width","height","cx","cy","outerRadius","fill","dataKey","label","_ref","percent","toFixed","map","entry","index","length","formatter"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/components/charts/ModernCategoryChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ModernCategoryChart = () => {\r\n  const { t, i18n } = useTranslation('analytics');\r\n  const isRTL = i18n.language === 'he';\r\n\r\n  // Placeholder data - translate category names\r\n  const data = [\r\n    { name: t('charts.categoryBreakdown.categories.categoryA'), value: 400 },\r\n    { name: t('charts.categoryBreakdown.categories.categoryB'), value: 300 },\r\n    { name: t('charts.categoryBreakdown.categories.categoryC'), value: 300 },\r\n    { name: t('charts.categoryBreakdown.categories.categoryD'), value: 200 },\r\n  ];\r\n\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n  return (\r\n    <div className=\"h-80\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`} // Add label formatter\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip \r\n            formatter={(value, name) => [`${value}`, `${name}`]} // Add tooltip formatter\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModernCategoryChart;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,IAAI,QAAQ,UAAU;AAC5E,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAChC,IAAAC,eAAA,GAAoBN,cAAc,CAAC,WAAW,CAAC;IAAvCO,CAAC,GAAAD,eAAA,CAADC,CAAC;IAAEC,IAAI,GAAAF,eAAA,CAAJE,IAAI;EACf,IAAMC,KAAK,GAAGD,IAAI,CAACE,QAAQ,KAAK,IAAI;EAGpC,IAAMC,IAAI,GAAG,CACX;IAAEC,IAAI,EAAEL,CAAC,CAAC,+CAA+C,CAAC;IAAEM,KAAK,EAAE;EAAI,CAAC,EACxE;IAAED,IAAI,EAAEL,CAAC,CAAC,+CAA+C,CAAC;IAAEM,KAAK,EAAE;EAAI,CAAC,EACxE;IAAED,IAAI,EAAEL,CAAC,CAAC,+CAA+C,CAAC;IAAEM,KAAK,EAAE;EAAI,CAAC,EACxE;IAAED,IAAI,EAAEL,CAAC,CAAC,+CAA+C,CAAC;IAAEM,KAAK,EAAE;EAAI,CAAC,CACzE;EAED,IAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAE3D,OACEZ,IAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EACnBd,IAAA,CAACJ,mBAAmB;MAACmB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAF,QAAA,EAC7CZ,KAAA,CAACT,QAAQ;QAAAqB,QAAA,GACPd,IAAA,CAACN,GAAG;UACFe,IAAI,EAAEA,IAAK;UACXQ,EAAE,EAAC,KAAK;UACRC,EAAE,EAAC,KAAK;UACRC,WAAW,EAAE,EAAG;UAChBC,IAAI,EAAC,SAAS;UACdC,OAAO,EAAC,OAAO;UACfC,KAAK,EAAE,SAAPA,KAAKA,CAAAC,IAAA;YAAA,IAAKb,IAAI,GAAAa,IAAA,CAAJb,IAAI;cAAEc,OAAO,GAAAD,IAAA,CAAPC,OAAO;YAAA,OAAO,GAAGd,IAAI,IAAI,CAACc,OAAO,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;UAAA,CAAC;UAAAX,QAAA,EAEtEL,IAAI,CAACiB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;YAAA,OACrB5B,IAAA,CAACH,IAAI;cAAuBuB,IAAI,EAAER,MAAM,CAACgB,KAAK,GAAGhB,MAAM,CAACiB,MAAM;YAAE,GAArD,QAAQD,KAAK,EAA0C,CAAC;UAAA,CACpE;QAAC,CACC,CAAC,EACN5B,IAAA,CAACL,OAAO;UACNmC,SAAS,EAAE,SAAXA,SAASA,CAAGnB,KAAK,EAAED,IAAI;YAAA,OAAK,CAAC,GAAGC,KAAK,EAAE,EAAE,GAAGD,IAAI,EAAE,CAAC;UAAA;QAAC,CACrD,CAAC;MAAA,CACM;IAAC,CACQ;EAAC,CACnB,CAAC;AAEV,CAAC;AAED,eAAeP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
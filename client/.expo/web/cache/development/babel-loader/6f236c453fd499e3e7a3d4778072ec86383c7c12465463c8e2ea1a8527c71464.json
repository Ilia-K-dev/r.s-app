{"ast":null,"code":"'use strict';\n\nvar pTry = require('p-try');\nvar pLimit = function pLimit(concurrency) {\n  if (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {\n    return Promise.reject(new TypeError('Expected `concurrency` to be a number from 1 and up'));\n  }\n  var queue = [];\n  var activeCount = 0;\n  var next = function next() {\n    activeCount--;\n    if (queue.length > 0) {\n      queue.shift()();\n    }\n  };\n  var run = function run(fn, resolve) {\n    activeCount++;\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    var result = pTry.apply(void 0, [fn].concat(args));\n    resolve(result);\n    result.then(next, next);\n  };\n  var enqueue = function enqueue(fn, resolve) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n    if (activeCount < concurrency) {\n      run.apply(void 0, [fn, resolve].concat(args));\n    } else {\n      queue.push(run.bind.apply(run, [null, fn, resolve].concat(args)));\n    }\n  };\n  var generator = function generator(fn) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    return new Promise(function (resolve) {\n      return enqueue.apply(void 0, [fn, resolve].concat(args));\n    });\n  };\n  Object.defineProperties(generator, {\n    activeCount: {\n      get: function get() {\n        return activeCount;\n      }\n    },\n    pendingCount: {\n      get: function get() {\n        return queue.length;\n      }\n    },\n    clearQueue: {\n      value: function value() {\n        queue.length = 0;\n      }\n    }\n  });\n  return generator;\n};\nmodule.exports = pLimit;\nmodule.exports.default = pLimit;","map":{"version":3,"names":["pTry","require","pLimit","concurrency","Number","isInteger","Infinity","Promise","reject","TypeError","queue","activeCount","next","length","shift","run","fn","resolve","_len","arguments","args","Array","_key","result","apply","concat","then","enqueue","_len2","_key2","push","bind","generator","_len3","_key3","Object","defineProperties","get","pendingCount","clearQueue","value","module","exports","default"],"sources":["C:/Users/user/Documents/app.v3/client/node_modules/@expo/webpack-config/node_modules/p-limit/index.js"],"sourcesContent":["'use strict';\nconst pTry = require('p-try');\n\nconst pLimit = concurrency => {\n\tif (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {\n\t\treturn Promise.reject(new TypeError('Expected `concurrency` to be a number from 1 and up'));\n\t}\n\n\tconst queue = [];\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.length > 0) {\n\t\t\tqueue.shift()();\n\t\t}\n\t};\n\n\tconst run = (fn, resolve, ...args) => {\n\t\tactiveCount++;\n\n\t\tconst result = pTry(fn, ...args);\n\n\t\tresolve(result);\n\n\t\tresult.then(next, next);\n\t};\n\n\tconst enqueue = (fn, resolve, ...args) => {\n\t\tif (activeCount < concurrency) {\n\t\t\trun(fn, resolve, ...args);\n\t\t} else {\n\t\t\tqueue.push(run.bind(null, fn, resolve, ...args));\n\t\t}\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => enqueue(fn, resolve, ...args));\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.length\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.length = 0;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn generator;\n};\n\nmodule.exports = pLimit;\nmodule.exports.default = pLimit;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport LRU from 'lru-cache';\nexport var runtimeCache = new LRU({\n  max: 500,\n  maxAge: 1000 * 60 * 5\n});\nexport var cachedApiCall = function () {\n  var _ref = _asyncToGenerator(function* (key, apiCall) {});\n  return function cachedApiCall(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var invalidateCacheEntry = function invalidateCacheEntry(key) {\n  runtimeCache.del(key);\n};\nexport var clearCache = function clearCache() {\n  runtimeCache.reset();\n};","map":{"version":3,"names":["LRU","runtimeCache","max","maxAge","cachedApiCall","_ref","_asyncToGenerator","key","apiCall","_x","_x2","apply","arguments","invalidateCacheEntry","del","clearCache","reset"],"sources":["C:/Users/user/Documents/app.v3/client/src/utils/performance/cache.js"],"sourcesContent":["// Last updated: 2025-05-08 12:49:51\r\nimport LRU from 'lru-cache';\r\n\r\n// Client-side caching\r\nexport const runtimeCache = new LRU({\r\n  max: 500,\r\n  maxAge: 1000 * 60 * 5 // 5 minutes\r\n});\r\n\r\nexport const cachedApiCall = async (key, apiCall) => {\r\n  // Implementation details...\r\n};\r\n\r\n// Add cache invalidation strategies\r\nexport const invalidateCacheEntry = (key) => {\r\n  runtimeCache.del(key);\r\n};\r\n\r\nexport const clearCache = () => {\r\n  runtimeCache.reset();\r\n};\r\n"],"mappings":";AACA,OAAOA,GAAG,MAAM,WAAW;AAG3B,OAAO,IAAMC,YAAY,GAAG,IAAID,GAAG,CAAC;EAClCE,GAAG,EAAE,GAAG;EACRC,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG;AACtB,CAAC,CAAC;AAEF,OAAO,IAAMC,aAAa;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,GAAG,EAAEC,OAAO,EAAK,CAErD,CAAC;EAAA,gBAFYJ,aAAaA,CAAAK,EAAA,EAAAC,GAAA;IAAA,OAAAL,IAAA,CAAAM,KAAA,OAAAC,SAAA;EAAA;AAAA,GAEzB;AAGD,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIN,GAAG,EAAK;EAC3CN,YAAY,CAACa,GAAG,CAACP,GAAG,CAAC;AACvB,CAAC;AAED,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAC9Bd,YAAY,CAACe,KAAK,CAAC,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect, useMemo } from 'react';\nimport { useAuth } from \"../../../features/auth/hooks/useAuth\";\nimport { useToast } from \"../../../shared/hooks/useToast\";\nimport api from \"../../../shared/services/api\";\nimport { localCache } from \"../../../shared/services/storage\";\nimport { formatDate } from \"../../../shared/utils/date\";\nimport { logger } from \"../../../shared/utils/logger\";\nvar calculateGrowthRate = function calculateGrowthRate(data) {\n  if (!data || data.length < 2) return 0;\n  var firstValue = data[0].amount;\n  var lastValue = data[data.length - 1].amount;\n  if (firstValue === 0) return lastValue > 0 ? 100 : 0;\n  return (lastValue - firstValue) / firstValue * 100;\n};\nvar generateForecast = function generateForecast(data) {\n  if (!data || data.length < 2) return [];\n  var xValues = data.map(function (_, i) {\n    return i;\n  });\n  var yValues = data.map(function (item) {\n    return item.amount;\n  });\n  var n = data.length;\n  var sumX = xValues.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n  var sumY = yValues.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n  var sumXY = xValues.reduce(function (a, b, i) {\n    return a + b * yValues[i];\n  }, 0);\n  var sumXX = xValues.reduce(function (a, b) {\n    return a + b * b;\n  }, 0);\n  var denominator = n * sumXX - sumX * sumX;\n  if (denominator === 0) {\n    var lastAmount = data[data.length - 1].amount;\n    return Array.from({\n      length: 7\n    }, function (_, i) {\n      return {\n        date: new Date(data[data.length - 1].date).setDate(new Date(data[data.length - 1].date).getDate() + i + 1),\n        amount: lastAmount\n      };\n    });\n  }\n  var slope = (n * sumXY - sumX * sumY) / denominator;\n  var intercept = (sumY - slope * sumX) / n;\n  return Array.from({\n    length: 7\n  }, function (_, i) {\n    return {\n      date: new Date(data[data.length - 1].date).setDate(new Date(data[data.length - 1].date).getDate() + i + 1),\n      amount: slope * (data.length + i) + intercept\n    };\n  });\n};\nexport var useReports = function useReports() {\n  var initialFilters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useToast = useToast(),\n    showToast = _useToast.showToast;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState({\n      spending: null,\n      categories: null,\n      trends: null\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    reports = _useState6[0],\n    setReports = _useState6[1];\n  var _useState7 = useState(_objectSpread({\n      startDate: formatDate(new Date(new Date().setDate(1)), 'yyyy-MM-dd'),\n      endDate: formatDate(new Date(), 'yyyy-MM-dd'),\n      category: 'all',\n      groupBy: 'day'\n    }, initialFilters)),\n    _useState8 = _slicedToArray(_useState7, 2),\n    filters = _useState8[0],\n    setFilters = _useState8[1];\n  var summaries = useMemo(function () {\n    if (!reports.spending) return null;\n    var totalSpent = reports.spending.reduce(function (sum, item) {\n      return sum + item.amount;\n    }, 0);\n    var avgPerDay = reports.spending.length > 0 ? totalSpent / reports.spending.length : 0;\n    var maxSpending = reports.spending.length > 0 ? Math.max.apply(Math, _toConsumableArray(reports.spending.map(function (item) {\n      return item.amount;\n    }))) : 0;\n    var minSpending = reports.spending.length > 0 ? Math.min.apply(Math, _toConsumableArray(reports.spending.map(function (item) {\n      return item.amount;\n    }))) : 0;\n    return {\n      totalSpent: totalSpent,\n      avgPerDay: avgPerDay,\n      maxSpending: maxSpending,\n      minSpending: minSpending,\n      transactionCount: reports.spending.length\n    };\n  }, [reports.spending]);\n  var categoryAnalysis = useMemo(function () {\n    if (!reports.categories || !summaries) return null;\n    return reports.categories.map(function (category) {\n      return _objectSpread(_objectSpread({}, category), {}, {\n        percentage: summaries.totalSpent > 0 ? category.total / summaries.totalSpent * 100 : 0\n      });\n    });\n  }, [reports.categories, summaries]);\n  var trendAnalysis = useMemo(function () {\n    if (!reports.trends) return null;\n    return {\n      data: reports.trends,\n      growth: calculateGrowthRate(reports.trends),\n      forecast: generateForecast(reports.trends)\n    };\n  }, [reports.trends]);\n  var fetchReports = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!user) return;\n      try {\n        setLoading(true);\n        setError(null);\n        var cacheKey = `reports_${user.uid}_${filters.startDate}_${filters.endDate}`;\n        var cachedData = localCache.get(cacheKey);\n        if (cachedData) {\n          setReports(cachedData);\n          logger.debug(`Reports loaded from cache for user ${user.uid}`);\n          return;\n        }\n        var _yield$Promise$all = yield Promise.all([api.reports.getSpendingReport(filters), api.reports.getCategoryReport(filters), api.reports.getTrendsReport(filters)]),\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3),\n          spendingRes = _yield$Promise$all2[0],\n          categoriesRes = _yield$Promise$all2[1],\n          trendsRes = _yield$Promise$all2[2];\n        var newReports = {\n          spending: spendingRes.data,\n          categories: categoriesRes.data,\n          trends: trendsRes.data\n        };\n        setReports(newReports);\n        localCache.set(cacheKey, newReports, 5 * 60 * 1000);\n        logger.debug(`Reports cached for user ${user.uid}`);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        var message = ((_err$response = err.response) == null ? void 0 : (_err$response$data = _err$response.data) == null ? void 0 : _err$response$data.message) || 'Failed to fetch reports';\n        setError(message);\n        showToast(message, 'error');\n        logger.error('Error fetching reports:', err);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchReports() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var updateFilters = function updateFilters(newFilters) {\n    setFilters(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), newFilters);\n    });\n  };\n  var exportReport = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'csv';\n      try {\n        var response = yield api.reports.exportReport(_objectSpread(_objectSpread({}, filters), {}, {\n          format: format\n        }));\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `report_${formatDate(new Date(), 'yyyy-MM-dd')}.${format}`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url);\n        showToast('Report exported successfully', 'success');\n      } catch (err) {\n        var _err$response2, _err$response2$data;\n        var message = ((_err$response2 = err.response) == null ? void 0 : (_err$response2$data = _err$response2.data) == null ? void 0 : _err$response2$data.message) || 'Failed to export report';\n        showToast(message, 'error');\n        logger.error('Error exporting report:', err);\n      }\n    });\n    return function exportReport() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (user) {\n      fetchReports();\n    }\n  }, [user, filters]);\n  return {\n    loading: loading,\n    error: error,\n    reports: reports,\n    filters: filters,\n    summaries: summaries,\n    categoryAnalysis: categoryAnalysis,\n    trendAnalysis: trendAnalysis,\n    updateFilters: updateFilters,\n    fetchReports: fetchReports,\n    exportReport: exportReport\n  };\n};\nexport default useReports;","map":{"version":3,"names":["useState","useEffect","useMemo","useAuth","useToast","api","localCache","formatDate","logger","calculateGrowthRate","data","length","firstValue","amount","lastValue","generateForecast","xValues","map","_","i","yValues","item","n","sumX","reduce","a","b","sumY","sumXY","sumXX","denominator","lastAmount","Array","from","date","Date","setDate","getDate","slope","intercept","useReports","initialFilters","arguments","undefined","_useAuth","user","_useToast","showToast","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","spending","categories","trends","_useState6","reports","setReports","_useState7","_objectSpread","startDate","endDate","category","groupBy","_useState8","filters","setFilters","summaries","totalSpent","sum","avgPerDay","maxSpending","Math","max","apply","_toConsumableArray","minSpending","min","transactionCount","categoryAnalysis","percentage","total","trendAnalysis","growth","forecast","fetchReports","_ref","_asyncToGenerator","cacheKey","uid","cachedData","get","debug","_yield$Promise$all","Promise","all","getSpendingReport","getCategoryReport","getTrendsReport","_yield$Promise$all2","spendingRes","categoriesRes","trendsRes","newReports","set","err","_err$response","_err$response$data","message","response","updateFilters","newFilters","prev","exportReport","_ref2","format","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","_err$response2","_err$response2$data"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/analytics/hooks/useReports.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react'; //correct\r\n\r\nimport { useAuth } from '../../../features/auth/hooks/useAuth'; //correct\r\nimport { useToast } from '../../../shared/hooks/useToast'; //correct\r\nimport api from '../../../shared/services/api'; //correct\r\nimport { localCache } from '../../../shared/services/storage'; // Assuming localCache is a simple key-value store with get/set/remove\r\nimport { formatDate } from '../../../shared/utils/date'; //correct\r\nimport { logger } from '../../../shared/utils/logger'; //correct\r\n\r\n/**\r\n * @typedef {object} ReportData\r\n * @property {Array<object>} spending - Spending data points.\r\n * @property {Array<object>} categories - Category breakdown data.\r\n * @property {Array<object>} trends - Trend data points.\r\n * // Add other relevant report data properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} ReportFilters\r\n * @property {string} startDate - Start date for reports (yyyy-MM-dd).\r\n * @property {string} endDate - End date for reports (yyyy-MM-dd).\r\n * @property {string} category - Filter by category ('all' or category ID).\r\n * @property {string} groupBy - Grouping for trends ('day', 'week', 'month', etc.).\r\n * // Add other relevant filter properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} ReportSummaries\r\n * @property {number} totalSpent - Total spending in the period.\r\n * @property {number} avgPerDay - Average spending per day.\r\n * @property {number} maxSpending - Maximum spending on a single day.\r\n * @property {number} minSpending - Minimum spending on a single day.\r\n * @property {number} transactionCount - Number of transactions.\r\n * // Add other relevant summary properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} CategoryAnalysis\r\n * @property {string} name - Category name.\r\n * @property {number} total - Total spent in the category.\r\n * @property {number} percentage - Percentage of total spending in this category.\r\n * // Add other relevant category analysis properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} TrendAnalysis\r\n * @property {Array<object>} data - Trend data points.\r\n * @property {number} growth - Growth rate percentage.\r\n * @property {Array<object>} forecast - Forecasted data points.\r\n * // Add other relevant trend analysis properties here\r\n */\r\n\r\n/**\r\n * @typedef {object} UseReportsReturn\r\n * @property {boolean} loading - Loading state.\r\n * @property {string|null} error - Error message if fetching failed.\r\n * @property {ReportData} reports - Fetched report data.\r\n * @property {ReportFilters} filters - Current filter state.\r\n * @property {ReportSummaries|null} summaries - Calculated report summaries.\r\n * @property {CategoryAnalysis[]|null} categoryAnalysis - Calculated category analysis.\r\n * @property {TrendAnalysis|null} trendAnalysis - Calculated trend analysis.\r\n * @property {function(object): void} updateFilters - Function to update filter state.\r\n * @property {function(): Promise<void>} fetchReports - Function to manually refetch reports.\r\n * @property {function(string): Promise<void>} exportReport - Function to export report data.\r\n */\r\n\r\n\r\n// Helper function to calculate growth rate\r\n/**\r\n * @desc Calculates the growth rate percentage from a series of data points.\r\n * @param {Array<object>} data - Array of data points with an 'amount' field.\r\n * @returns {number} - Growth rate percentage.\r\n */\r\nconst calculateGrowthRate = data => {\r\n  if (!data || data.length < 2) return 0;\r\n  const firstValue = data[0].amount;\r\n  const lastValue = data[data.length - 1].amount;\r\n  if (firstValue === 0) return lastValue > 0 ? 100 : 0; // Handle division by zero\r\n  return ((lastValue - firstValue) / firstValue) * 100;\r\n};\r\n\r\n// Helper function to generate simple forecast\r\n/**\r\n * @desc Generates a simple linear forecast based on historical data.\r\n * @param {Array<object>} data - Array of historical data points with 'date' and 'amount' fields.\r\n * @returns {Array<object>} - Array of forecasted data points.\r\n */\r\nconst generateForecast = data => {\r\n  if (!data || data.length < 2) return [];\r\n\r\n  // Simple linear regression\r\n  const xValues = data.map((_, i) => i);\r\n  const yValues = data.map(item => item.amount);\r\n\r\n  const n = data.length;\r\n  const sumX = xValues.reduce((a, b) => a + b, 0);\r\n  const sumY = yValues.reduce((a, b) => a + b, 0);\r\n  const sumXY = xValues.reduce((a, b, i) => a + b * yValues[i], 0);\r\n  const sumXX = xValues.reduce((a, b) => a + b * b, 0);\r\n\r\n  const denominator = (n * sumXX - sumX * sumX);\r\n  if (denominator === 0) {\r\n      // Cannot calculate slope, return a flat forecast based on the last value\r\n      const lastAmount = data[data.length - 1].amount;\r\n      return Array.from({ length: 7 }, (_, i) => ({\r\n          date: new Date(data[data.length - 1].date).setDate(\r\n              new Date(data[data.length - 1].date).getDate() + i + 1\r\n          ),\r\n          amount: lastAmount,\r\n      }));\r\n  }\r\n\r\n  const slope = (n * sumXY - sumX * sumY) / denominator;\r\n  const intercept = (sumY - slope * sumX) / n;\r\n\r\n  // Generate next 7 points\r\n  return Array.from({ length: 7 }, (_, i) => ({\r\n    date: new Date(data[data.length - 1].date).setDate(\r\n      new Date(data[data.length - 1].date).getDate() + i + 1\r\n    ),\r\n    amount: slope * (data.length + i) + intercept,\r\n  }));\r\n};\r\n\r\n/**\r\n * @desc Custom hook for fetching and analyzing analytics reports.\r\n * Manages loading, error, report data, filters, and calculated summaries/analysis.\r\n * @param {object} [initialFilters={}] - Initial filter values.\r\n * @returns {UseReportsReturn} - Object containing report data, state, and functions.\r\n */\r\nexport const useReports = (initialFilters = {}) => {\r\n  const { user } = useAuth();\r\n  const { showToast } = useToast();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [reports, setReports] = useState({\r\n    spending: null,\r\n    categories: null,\r\n    trends: null,\r\n  });\r\n  const [filters, setFilters] = useState({\r\n    startDate: formatDate(new Date(new Date().setDate(1)), 'yyyy-MM-dd'),\r\n    endDate: formatDate(new Date(), 'yyyy-MM-dd'),\r\n    category: 'all',\r\n    groupBy: 'day',\r\n    ...initialFilters,\r\n  });\r\n\r\n  // Summaries calculation\r\n  const summaries = useMemo(() => {\r\n    if (!reports.spending) return null;\r\n\r\n    const totalSpent = reports.spending.reduce((sum, item) => sum + item.amount, 0);\r\n    const avgPerDay = reports.spending.length > 0 ? totalSpent / reports.spending.length : 0;\r\n    const maxSpending =\r\n      reports.spending.length > 0 ? Math.max(...reports.spending.map(item => item.amount)) : 0;\r\n    const minSpending =\r\n      reports.spending.length > 0 ? Math.min(...reports.spending.map(item => item.amount)) : 0;\r\n\r\n    return {\r\n      totalSpent,\r\n      avgPerDay,\r\n      maxSpending,\r\n      minSpending,\r\n      transactionCount: reports.spending.length,\r\n    };\r\n  }, [reports.spending]);\r\n\r\n  // Category analysis\r\n  const categoryAnalysis = useMemo(() => {\r\n    if (!reports.categories || !summaries) return null;\r\n\r\n    return reports.categories.map(category => ({\r\n      ...category,\r\n      percentage: summaries.totalSpent > 0 ? (category.total / summaries.totalSpent) * 100 : 0,\r\n    }));\r\n  }, [reports.categories, summaries]);\r\n\r\n  // Trend analysis\r\n  const trendAnalysis = useMemo(() => {\r\n    if (!reports.trends) return null;\r\n\r\n    return {\r\n      data: reports.trends,\r\n      growth: calculateGrowthRate(reports.trends),\r\n      forecast: generateForecast(reports.trends),\r\n    };\r\n  }, [reports.trends]);\r\n\r\n  // Fetch reports data\r\n  /**\r\n   * @desc Fetches report data from the backend API based on current filters.\r\n   * Updates local state with fetched data or error. Uses caching.\r\n   * @returns {Promise<void>}\r\n   */\r\n  const fetchReports = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Check cache first\r\n      const cacheKey = `reports_${user.uid}_${filters.startDate}_${filters.endDate}`;\r\n      const cachedData = localCache.get(cacheKey);\r\n\r\n      if (cachedData) {\r\n        setReports(cachedData);\r\n        logger.debug(`Reports loaded from cache for user ${user.uid}`);\r\n        return;\r\n      }\r\n\r\n      // Fetch spending data\r\n      // Assuming api.reports has methods like getSpendingReport, getCategoryReport, getTrendsReport\r\n      const [spendingRes, categoriesRes, trendsRes] = await Promise.all([\r\n        api.reports.getSpendingReport(filters),\r\n        api.reports.getCategoryReport(filters),\r\n        api.reports.getTrendsReport(filters),\r\n      ]);\r\n\r\n      const newReports = {\r\n        spending: spendingRes.data,\r\n        categories: categoriesRes.data,\r\n        trends: trendsRes.data,\r\n      };\r\n\r\n      setReports(newReports);\r\n\r\n      // Cache the results\r\n      localCache.set(cacheKey, newReports, 5 * 60 * 1000); // Cache for 5 minutes\r\n      logger.debug(`Reports cached for user ${user.uid}`);\r\n\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Failed to fetch reports';\r\n      setError(message);\r\n      showToast(message, 'error');\r\n      logger.error('Error fetching reports:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update filters\r\n  /**\r\n   * @desc Updates the filter state and triggers a refetch of reports.\r\n   * @param {object} newFilters - Object containing the new filter values to merge.\r\n   * @returns {void}\r\n   */\r\n  const updateFilters = newFilters => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      ...newFilters,\r\n    }));\r\n  };\r\n\r\n  // Export report data\r\n  /**\r\n   * @desc Exports the current report data in the specified format.\r\n   * Calls the backend export API and triggers a file download.\r\n   * @param {string} [format='csv'] - The export format ('csv', 'pdf', 'json').\r\n   * @returns {Promise<void>}\r\n   */\r\n  const exportReport = async (format = 'csv') => {\r\n    try {\r\n      // Assuming api.reports.exportReport exists and handles the backend call\r\n      const response = await api.reports.exportReport({\r\n        ...filters,\r\n        format,\r\n      });\r\n\r\n      // Assuming the backend returns the file data directly or a download URL\r\n      // This implementation assumes the backend returns the file data as a Blob\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `report_${formatDate(new Date(), 'yyyy-MM-dd')}.${format}`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      window.URL.revokeObjectURL(url); // Clean up the object URL\r\n\r\n      showToast('Report exported successfully', 'success');\r\n\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Failed to export report';\r\n      showToast(message, 'error');\r\n      logger.error('Error exporting report:', err);\r\n    }\r\n  };\r\n\r\n  // Fetch reports when filters change\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchReports();\r\n    }\r\n  }, [user, filters]); // Dependencies for useEffect\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    reports,\r\n    filters,\r\n    summaries,\r\n    categoryAnalysis,\r\n    trendAnalysis,\r\n    updateFilters,\r\n    fetchReports,\r\n    exportReport,\r\n  };\r\n};\r\n\r\nexport default useReports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
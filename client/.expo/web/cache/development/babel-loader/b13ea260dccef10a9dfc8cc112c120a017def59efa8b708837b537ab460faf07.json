{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var testComponent = function testComponent(Component) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var rendered = null;\n  var testResults = {\n    passed: true,\n    errors: [],\n    warnings: [],\n    log: []\n  };\n  var originalConsole = {\n    error: console.error,\n    warn: console.warn,\n    log: console.log\n  };\n  console.error = function (msg) {\n    testResults.passed = false;\n    testResults.errors.push(msg);\n    originalConsole.error(`[TEST ERROR] ${msg}`);\n  };\n  console.warn = function (msg) {\n    testResults.warnings.push(msg);\n    originalConsole.warn(`[TEST WARNING] ${msg}`);\n  };\n  console.log = function (msg) {\n    testResults.log.push(msg);\n    originalConsole.log(`[TEST LOG] ${msg}`);\n  };\n  var TestWrapper = function TestWrapper() {\n    try {\n      rendered = _jsx(Component, _objectSpread({}, props));\n      return rendered;\n    } catch (error) {\n      testResults.passed = false;\n      testResults.errors.push(error.message);\n      originalConsole.error(`[TEST ERROR] Component failed to render: ${error.message}`);\n      return _jsxs(\"div\", {\n        children: [\"Component failed to render: \", error.message]\n      });\n    }\n  };\n  var cleanup = function cleanup() {\n    console.error = originalConsole.error;\n    console.warn = originalConsole.warn;\n    console.log = originalConsole.log;\n    return _objectSpread(_objectSpread({}, testResults), {}, {\n      output: rendered\n    });\n  };\n  return {\n    TestWrapper: TestWrapper,\n    cleanup: cleanup,\n    getResults: cleanup\n  };\n};\nexport var testComponentProps = function testComponentProps(Component) {\n  var propSets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [{}];\n  var results = [];\n  propSets.forEach(function (props, index) {\n    console.log(`Testing prop set ${index + 1}/${propSets.length}`);\n    var _testComponent = testComponent(Component, props),\n      TestWrapper = _testComponent.TestWrapper,\n      getResults = _testComponent.getResults;\n    try {\n      var element = _jsx(TestWrapper, {});\n      results.push(_objectSpread({\n        propSet: props\n      }, getResults()));\n    } catch (error) {\n      results.push({\n        propSet: props,\n        passed: false,\n        errors: [error.message],\n        warnings: [],\n        log: []\n      });\n    }\n  });\n  return results;\n};\nexport var displayTestResults = function displayTestResults(results) {\n  console.log('=== COMPONENT TEST RESULTS ===');\n  if (Array.isArray(results)) {\n    results.forEach(function (result, index) {\n      console.log(`\\n--- Test ${index + 1} ---`);\n      console.log(`Props tested:`, result.propSet);\n      console.log(`Passed:`, result.passed ? '✅ YES' : '❌ NO');\n      if (result.errors.length > 0) {\n        console.log(`Errors (${result.errors.length}):`);\n        result.errors.forEach(function (err) {\n          return console.log(`  - ${err}`);\n        });\n      }\n      if (result.warnings.length > 0) {\n        console.log(`Warnings (${result.warnings.length}):`);\n        result.warnings.forEach(function (warn) {\n          return console.log(`  - ${warn}`);\n        });\n      }\n    });\n  } else {\n    console.log(`Passed:`, results.passed ? '✅ YES' : '❌ NO');\n    if (results.errors.length > 0) {\n      console.log(`Errors (${results.errors.length}):`);\n      results.errors.forEach(function (err) {\n        return console.log(`  - ${err}`);\n      });\n    }\n    if (results.warnings.length > 0) {\n      console.log(`Warnings (${results.warnings.length}):`);\n      results.warnings.forEach(function (warn) {\n        return console.log(`  - ${warn}`);\n      });\n    }\n  }\n  console.log('\\n=== END TEST RESULTS ===');\n};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","testComponent","Component","props","arguments","length","undefined","rendered","testResults","passed","errors","warnings","log","originalConsole","error","console","warn","msg","push","TestWrapper","_objectSpread","message","children","cleanup","output","getResults","testComponentProps","propSets","results","forEach","index","_testComponent","element","propSet","displayTestResults","Array","isArray","result","err"],"sources":["C:/Users/user/Documents/app.v3/client/src/utils/testing/componentTester.js"],"sourcesContent":["/**\r\n * componentTester.js\r\n * Last Modified: 5/22/2025 12:33 AM\r\n * Modified By: Cline\r\n * \r\n * Purpose: Provides utilities for testing React components without deployment\r\n * Changes Made: Created new testing utility\r\n * Reasoning: To enable frontend component verification without deployment\r\n */\r\n\r\nimport React from 'react';\r\n\r\n/**\r\n * Wraps a component with test utilities to verify its functionality\r\n * @param {React.Component} Component - The component to test\r\n * @param {Object} props - Props to pass to the component\r\n * @returns {Object} - Component with test utilities\r\n */\r\nexport const testComponent = (Component, props = {}) => {\r\n  // Store render output\r\n  let rendered = null;\r\n  \r\n  // Store test results\r\n  const testResults = {\r\n    passed: true,\r\n    errors: [],\r\n    warnings: [],\r\n    log: []\r\n  };\r\n  \r\n  // Override console methods to capture output\r\n  const originalConsole = {\r\n    error: console.error,\r\n    warn: console.warn,\r\n    log: console.log\r\n  };\r\n  \r\n  // Setup console overrides\r\n  console.error = (msg) => {\r\n    testResults.passed = false;\r\n    testResults.errors.push(msg);\r\n    originalConsole.error(`[TEST ERROR] ${msg}`);\r\n  };\r\n  \r\n  console.warn = (msg) => {\r\n    testResults.warnings.push(msg);\r\n    originalConsole.warn(`[TEST WARNING] ${msg}`);\r\n  };\r\n  \r\n  console.log = (msg) => {\r\n    testResults.log.push(msg);\r\n    originalConsole.log(`[TEST LOG] ${msg}`);\r\n  };\r\n  \r\n  // Create test wrapper component\r\n  const TestWrapper = () => {\r\n    try {\r\n      rendered = <Component {...props} />;\r\n      return rendered;\r\n    } catch (error) {\r\n      testResults.passed = false;\r\n      testResults.errors.push(error.message);\r\n      originalConsole.error(`[TEST ERROR] Component failed to render: ${error.message}`);\r\n      return <div>Component failed to render: {error.message}</div>;\r\n    }\r\n  };\r\n  \r\n  // Restore console after testing\r\n  const cleanup = () => {\r\n    console.error = originalConsole.error;\r\n    console.warn = originalConsole.warn;\r\n    console.log = originalConsole.log;\r\n    \r\n    // Return test results\r\n    return {\r\n      ...testResults,\r\n      output: rendered\r\n    };\r\n  };\r\n  \r\n  return {\r\n    TestWrapper,\r\n    cleanup,\r\n    getResults: cleanup\r\n  };\r\n};\r\n\r\n/**\r\n * Tests a component's props handling\r\n * @param {React.Component} Component - The component to test\r\n * @param {Array<Object>} propSets - Array of prop sets to test\r\n * @returns {Object} - Test results for each prop set\r\n */\r\nexport const testComponentProps = (Component, propSets = [{}]) => {\r\n  const results = [];\r\n  \r\n  propSets.forEach((props, index) => {\r\n    console.log(`Testing prop set ${index + 1}/${propSets.length}`);\r\n    const { TestWrapper, getResults } = testComponent(Component, props);\r\n    \r\n    // Render with these props\r\n    try {\r\n      const element = <TestWrapper />;\r\n      // We're not actually rendering to the DOM, just checking if it fails during creation\r\n      results.push({\r\n        propSet: props,\r\n        ...getResults()\r\n      });\r\n    } catch (error) {\r\n      results.push({\r\n        propSet: props,\r\n        passed: false,\r\n        errors: [error.message],\r\n        warnings: [],\r\n        log: []\r\n      });\r\n    }\r\n  });\r\n  \r\n  return results;\r\n};\r\n\r\n/**\r\n * Renders test results to the console\r\n * @param {Object} results - Test results to display\r\n */\r\nexport const displayTestResults = (results) => {\r\n  console.log('=== COMPONENT TEST RESULTS ===');\r\n  \r\n  if (Array.isArray(results)) {\r\n    // Handle multiple test results (from testComponentProps)\r\n    results.forEach((result, index) => {\r\n      console.log(`\\n--- Test ${index + 1} ---`);\r\n      console.log(`Props tested:`, result.propSet);\r\n      console.log(`Passed:`, result.passed ? '✅ YES' : '❌ NO');\r\n      \r\n      if (result.errors.length > 0) {\r\n        console.log(`Errors (${result.errors.length}):`);\r\n        result.errors.forEach(err => console.log(`  - ${err}`));\r\n      }\r\n      \r\n      if (result.warnings.length > 0) {\r\n        console.log(`Warnings (${result.warnings.length}):`);\r\n        result.warnings.forEach(warn => console.log(`  - ${warn}`));\r\n      }\r\n    });\r\n  } else {\r\n    // Handle single test result\r\n    console.log(`Passed:`, results.passed ? '✅ YES' : '❌ NO');\r\n    \r\n    if (results.errors.length > 0) {\r\n      console.log(`Errors (${results.errors.length}):`);\r\n      results.errors.forEach(err => console.log(`  - ${err}`));\r\n    }\r\n    \r\n    if (results.warnings.length > 0) {\r\n      console.log(`Warnings (${results.warnings.length}):`);\r\n      results.warnings.forEach(warn => console.log(`  - ${warn}`));\r\n    }\r\n  }\r\n  \r\n  console.log('\\n=== END TEST RESULTS ===');\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { generateChartColors } from \"../../../shared/components/charts/chartHelpers\";\nimport { formatCurrency } from \"../../../shared/utils/currency\";\nimport { formatDate } from \"../../../shared/utils/date\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ChartComponent = function ChartComponent(_ref) {\n  var _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'line' : _ref$type,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    _ref$config = _ref.config,\n    config = _ref$config === void 0 ? {} : _ref$config,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 400 : _ref$height;\n  var _config$xAxis = config.xAxis,\n    xAxis = _config$xAxis === void 0 ? 'date' : _config$xAxis,\n    _config$yAxis = config.yAxis,\n    yAxis = _config$yAxis === void 0 ? 'value' : _config$yAxis,\n    _config$color = config.color,\n    color = _config$color === void 0 ? '#0EA5E9' : _config$color,\n    _config$formatter = config.formatter,\n    formatter = _config$formatter === void 0 ? function (value) {\n      return value;\n    } : _config$formatter,\n    _config$dateFormat = config.dateFormat,\n    dateFormat = _config$dateFormat === void 0 ? 'MMM dd' : _config$dateFormat,\n    _config$showGrid = config.showGrid,\n    showGrid = _config$showGrid === void 0 ? true : _config$showGrid,\n    _config$showLegend = config.showLegend,\n    showLegend = _config$showLegend === void 0 ? true : _config$showLegend,\n    _config$colors = config.colors,\n    colors = _config$colors === void 0 ? [] : _config$colors,\n    innerRadius = config.innerRadius,\n    outerRadius = config.outerRadius;\n  var chartColors = useMemo(function () {\n    if (colors.length > 0) return colors;\n    return generateChartColors(data.length);\n  }, [colors, data.length]);\n  var renderChart = function renderChart() {\n    switch (type) {\n      case 'line':\n        return _jsxs(LineChart, {\n          data: data,\n          children: [showGrid && _jsx(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }), _jsx(XAxis, {\n            dataKey: xAxis,\n            tickFormatter: function tickFormatter(value) {\n              return formatDate(value, dateFormat);\n            }\n          }), _jsx(YAxis, {\n            tickFormatter: formatter\n          }), _jsx(Tooltip, {}), showLegend && _jsx(Legend, {}), _jsx(Line, {\n            type: \"monotone\",\n            dataKey: yAxis,\n            stroke: color,\n            activeDot: {\n              r: 8\n            }\n          })]\n        });\n      case 'bar':\n        return _jsxs(BarChart, {\n          data: data,\n          children: [showGrid && _jsx(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }), _jsx(XAxis, {\n            dataKey: xAxis,\n            tickFormatter: function tickFormatter(value) {\n              return formatDate(value, dateFormat);\n            }\n          }), _jsx(YAxis, {\n            tickFormatter: formatter\n          }), _jsx(Tooltip, {}), showLegend && _jsx(Legend, {}), _jsx(Bar, {\n            dataKey: yAxis,\n            fill: color\n          })]\n        });\n      case 'pie':\n      case 'donut':\n        return _jsxs(PieChart, {\n          children: [_jsx(Pie, {\n            data: data,\n            cx: \"50%\",\n            cy: \"50%\",\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            fill: color,\n            dataKey: yAxis,\n            label: true,\n            children: data.map(function (entry, index) {\n              return _jsx(Cell, {\n                fill: chartColors[index % chartColors.length]\n              }, `cell-${index}`);\n            })\n          }), _jsx(Tooltip, {}), showLegend && _jsx(Legend, {})]\n        });\n      default:\n        return null;\n    }\n  };\n  return _jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: height,\n    children: renderChart()\n  });\n};","map":{"version":3,"names":["React","useMemo","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","generateChartColors","formatCurrency","formatDate","jsx","_jsx","jsxs","_jsxs","ChartComponent","_ref","_ref$type","type","_ref$data","data","_ref$config","config","_ref$height","height","_config$xAxis","xAxis","_config$yAxis","yAxis","_config$color","color","_config$formatter","formatter","value","_config$dateFormat","dateFormat","_config$showGrid","showGrid","_config$showLegend","showLegend","_config$colors","colors","innerRadius","outerRadius","chartColors","length","renderChart","children","strokeDasharray","dataKey","tickFormatter","stroke","activeDot","r","fill","cx","cy","label","map","entry","index","width"],"sources":["C:/Users/user/Documents/app.v3/client/src/shared/components/charts/ChartComponent.js"],"sourcesContent":["import React, { useMemo } from 'react'; //correct\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  BarChart,\r\n  Bar,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts'; //correct\n\r\nimport { generateChartColors } from '../../../shared/components/charts/chartHelpers'; //correct\r\nimport { formatCurrency } from '../../../shared/utils/currency'; //correct\r\nimport { formatDate } from '../../../shared/utils/date'; //correct\r\n\r\nexport const ChartComponent = ({ type = 'line', data = [], config = {}, height = 400 }) => {\r\n  const {\r\n    xAxis = 'date',\r\n    yAxis = 'value',\r\n    color = '#0EA5E9',\r\n    formatter = value => value,\r\n    dateFormat = 'MMM dd',\r\n    showGrid = true,\r\n    showLegend = true,\r\n    colors = [],\r\n    innerRadius,\r\n    outerRadius,\r\n  } = config;\r\n\r\n  const chartColors = useMemo(() => {\r\n    if (colors.length > 0) return colors;\r\n    return generateChartColors(data.length);\r\n  }, [colors, data.length]);\r\n\r\n  const renderChart = () => {\r\n    switch (type) {\r\n      case 'line':\r\n        return (\r\n          <LineChart data={data}>\r\n            {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\r\n            <XAxis dataKey={xAxis} tickFormatter={value => formatDate(value, dateFormat)} />\r\n            <YAxis tickFormatter={formatter} />\r\n            <Tooltip />\r\n            {showLegend && <Legend />}\r\n            <Line type=\"monotone\" dataKey={yAxis} stroke={color} activeDot={{ r: 8 }} />\r\n          </LineChart>\r\n        );\r\n\r\n      case 'bar':\r\n        return (\r\n          <BarChart data={data}>\r\n            {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\r\n            <XAxis dataKey={xAxis} tickFormatter={value => formatDate(value, dateFormat)} />\r\n            <YAxis tickFormatter={formatter} />\r\n            <Tooltip />\r\n            {showLegend && <Legend />}\r\n            <Bar dataKey={yAxis} fill={color} />\r\n          </BarChart>\r\n        );\r\n\r\n      case 'pie':\r\n      case 'donut':\r\n        return (\r\n          <PieChart>\r\n            <Pie\r\n              data={data}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={innerRadius}\r\n              outerRadius={outerRadius}\r\n              fill={color}\r\n              dataKey={yAxis}\r\n              label\r\n            >\r\n              {data.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip />\r\n            {showLegend && <Legend />}\r\n          </PieChart>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={height}>\r\n      {renderChart()}\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SACEC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,GAAG,EACHC,QAAQ,EACRC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QACd,UAAU;AAEjB,SAASC,mBAAmB;AAC5B,SAASC,cAAc;AACvB,SAASC,UAAU;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExD,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAgE;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAA1DE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,MAAM,GAAAA,SAAA;IAAAE,SAAA,GAAAH,IAAA,CAAEI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;IAAAE,WAAA,GAAAL,IAAA,CAAEM,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,CAAC,CAAC,GAAAA,WAAA;IAAAE,WAAA,GAAAP,IAAA,CAAEQ,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,GAAG,GAAAA,WAAA;EAClF,IAAAE,aAAA,GAWIH,MAAM,CAVRI,KAAK;IAALA,KAAK,GAAAD,aAAA,cAAG,MAAM,GAAAA,aAAA;IAAAE,aAAA,GAUZL,MAAM,CATRM,KAAK;IAALA,KAAK,GAAAD,aAAA,cAAG,OAAO,GAAAA,aAAA;IAAAE,aAAA,GASbP,MAAM,CARRQ,KAAK;IAALA,KAAK,GAAAD,aAAA,cAAG,SAAS,GAAAA,aAAA;IAAAE,iBAAA,GAQfT,MAAM,CAPRU,SAAS;IAATA,SAAS,GAAAD,iBAAA,cAAG,UAAAE,KAAK;MAAA,OAAIA,KAAK;IAAA,IAAAF,iBAAA;IAAAG,kBAAA,GAOxBZ,MAAM,CANRa,UAAU;IAAVA,UAAU,GAAAD,kBAAA,cAAG,QAAQ,GAAAA,kBAAA;IAAAE,gBAAA,GAMnBd,MAAM,CALRe,QAAQ;IAARA,QAAQ,GAAAD,gBAAA,cAAG,IAAI,GAAAA,gBAAA;IAAAE,kBAAA,GAKbhB,MAAM,CAJRiB,UAAU;IAAVA,UAAU,GAAAD,kBAAA,cAAG,IAAI,GAAAA,kBAAA;IAAAE,cAAA,GAIflB,MAAM,CAHRmB,MAAM;IAANA,MAAM,GAAAD,cAAA,cAAG,EAAE,GAAAA,cAAA;IACXE,WAAW,GAETpB,MAAM,CAFRoB,WAAW;IACXC,WAAW,GACTrB,MAAM,CADRqB,WAAW;EAGb,IAAMC,WAAW,GAAGlD,OAAO,CAAC,YAAM;IAChC,IAAI+C,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE,OAAOJ,MAAM;IACpC,OAAOjC,mBAAmB,CAACY,IAAI,CAACyB,MAAM,CAAC;EACzC,CAAC,EAAE,CAACJ,MAAM,EAAErB,IAAI,CAACyB,MAAM,CAAC,CAAC;EAEzB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,QAAQ5B,IAAI;MACV,KAAK,MAAM;QACT,OACEJ,KAAA,CAACnB,SAAS;UAACyB,IAAI,EAAEA,IAAK;UAAA2B,QAAA,GACnBV,QAAQ,IAAIzB,IAAA,CAACR,aAAa;YAAC4C,eAAe,EAAC;UAAK,CAAE,CAAC,EACpDpC,IAAA,CAACV,KAAK;YAAC+C,OAAO,EAAEvB,KAAM;YAACwB,aAAa,EAAE,SAAfA,aAAaA,CAAEjB,KAAK;cAAA,OAAIvB,UAAU,CAACuB,KAAK,EAAEE,UAAU,CAAC;YAAA;UAAC,CAAE,CAAC,EAChFvB,IAAA,CAACT,KAAK;YAAC+C,aAAa,EAAElB;UAAU,CAAE,CAAC,EACnCpB,IAAA,CAACP,OAAO,IAAE,CAAC,EACVkC,UAAU,IAAI3B,IAAA,CAACN,MAAM,IAAE,CAAC,EACzBM,IAAA,CAAChB,IAAI;YAACsB,IAAI,EAAC,UAAU;YAAC+B,OAAO,EAAErB,KAAM;YAACuB,MAAM,EAAErB,KAAM;YAACsB,SAAS,EAAE;cAAEC,CAAC,EAAE;YAAE;UAAE,CAAE,CAAC;QAAA,CACnE,CAAC;MAGhB,KAAK,KAAK;QACR,OACEvC,KAAA,CAACjB,QAAQ;UAACuB,IAAI,EAAEA,IAAK;UAAA2B,QAAA,GAClBV,QAAQ,IAAIzB,IAAA,CAACR,aAAa;YAAC4C,eAAe,EAAC;UAAK,CAAE,CAAC,EACpDpC,IAAA,CAACV,KAAK;YAAC+C,OAAO,EAAEvB,KAAM;YAACwB,aAAa,EAAE,SAAfA,aAAaA,CAAEjB,KAAK;cAAA,OAAIvB,UAAU,CAACuB,KAAK,EAAEE,UAAU,CAAC;YAAA;UAAC,CAAE,CAAC,EAChFvB,IAAA,CAACT,KAAK;YAAC+C,aAAa,EAAElB;UAAU,CAAE,CAAC,EACnCpB,IAAA,CAACP,OAAO,IAAE,CAAC,EACVkC,UAAU,IAAI3B,IAAA,CAACN,MAAM,IAAE,CAAC,EACzBM,IAAA,CAACd,GAAG;YAACmD,OAAO,EAAErB,KAAM;YAAC0B,IAAI,EAAExB;UAAM,CAAE,CAAC;QAAA,CAC5B,CAAC;MAGf,KAAK,KAAK;MACV,KAAK,OAAO;QACV,OACEhB,KAAA,CAACf,QAAQ;UAAAgD,QAAA,GACPnC,IAAA,CAACZ,GAAG;YACFoB,IAAI,EAAEA,IAAK;YACXmC,EAAE,EAAC,KAAK;YACRC,EAAE,EAAC,KAAK;YACRd,WAAW,EAAEA,WAAY;YACzBC,WAAW,EAAEA,WAAY;YACzBW,IAAI,EAAExB,KAAM;YACZmB,OAAO,EAAErB,KAAM;YACf6B,KAAK;YAAAV,QAAA,EAEJ3B,IAAI,CAACsC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;cAAA,OACrBhD,IAAA,CAACX,IAAI;gBAAuBqD,IAAI,EAAEV,WAAW,CAACgB,KAAK,GAAGhB,WAAW,CAACC,MAAM;cAAE,GAA/D,QAAQe,KAAK,EAAoD,CAAC;YAAA,CAC9E;UAAC,CACC,CAAC,EACNhD,IAAA,CAACP,OAAO,IAAE,CAAC,EACVkC,UAAU,IAAI3B,IAAA,CAACN,MAAM,IAAE,CAAC;QAAA,CACjB,CAAC;MAGf;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,OACEM,IAAA,CAACL,mBAAmB;IAACsD,KAAK,EAAC,MAAM;IAACrC,MAAM,EAAEA,MAAO;IAAAuB,QAAA,EAC9CD,WAAW,CAAC;EAAC,CACK,CAAC;AAE1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
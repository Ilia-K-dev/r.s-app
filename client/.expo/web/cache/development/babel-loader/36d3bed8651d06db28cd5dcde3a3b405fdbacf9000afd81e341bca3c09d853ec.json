{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { processImage } from \"./imageProcessing\";\nexport var processReceipt = function () {\n  var _ref = _asyncToGenerator(function* (file) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    try {\n      var processedImage = yield processImage(file, options);\n      var receiptMetadata = {\n        type: 'receipt',\n        processedAt: new Date().toISOString(),\n        originalFileName: file.name,\n        processingOptions: options\n      };\n      return {\n        file: processedImage,\n        metadata: receiptMetadata\n      };\n    } catch (error) {\n      console.error('Receipt processing error:', error);\n      throw new Error('Failed to process receipt');\n    }\n  });\n  return function processReceipt(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["processImage","processReceipt","_ref","_asyncToGenerator","file","options","arguments","length","undefined","processedImage","receiptMetadata","type","processedAt","Date","toISOString","originalFileName","name","processingOptions","metadata","error","console","Error","_x","apply"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/documents/utils/receiptProcessing.js"],"sourcesContent":["import { processImage } from './imageProcessing'; //correct\r\n\r\nexport const processReceipt = async (file, options = {}) => {\r\n  try {\r\n    // First process the image\r\n    const processedImage = await processImage(file, options);\r\n\r\n    // Add receipt-specific metadata\r\n    const receiptMetadata = {\r\n      type: 'receipt',\r\n      processedAt: new Date().toISOString(),\r\n      originalFileName: file.name,\r\n      processingOptions: options,\r\n    };\r\n\r\n    // Return processed file with metadata\r\n    return {\r\n      file: processedImage,\r\n      metadata: receiptMetadata,\r\n    };\r\n  } catch (error) {\r\n    console.error('Receipt processing error:', error);\r\n    throw new Error('Failed to process receipt');\r\n  }\r\n};\r\n"],"mappings":";AAAA,SAASA,YAAY;AAErB,OAAO,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAI,EAAmB;IAAA,IAAjBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACrD,IAAI;MAEF,IAAMG,cAAc,SAAST,YAAY,CAACI,IAAI,EAAEC,OAAO,CAAC;MAGxD,IAAMK,eAAe,GAAG;QACtBC,IAAI,EAAE,SAAS;QACfC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACrCC,gBAAgB,EAAEX,IAAI,CAACY,IAAI;QAC3BC,iBAAiB,EAAEZ;MACrB,CAAC;MAGD,OAAO;QACLD,IAAI,EAAEK,cAAc;QACpBS,QAAQ,EAAER;MACZ,CAAC;IACH,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC;EAAA,gBAtBYpB,cAAcA,CAAAqB,EAAA;IAAA,OAAApB,IAAA,CAAAqB,KAAA,OAAAjB,SAAA;EAAA;AAAA,GAsB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
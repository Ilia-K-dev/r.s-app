{"ast":null,"code":"var testHelper = require(\"../../__mocks__/testHelper\");\nvar mockButtonModule = function mockButtonModule() {\n  return testHelper.createMock({\n    Button: jest.fn(function (props) {\n      return {\n        type: 'Button',\n        props: props\n      };\n    }),\n    buttonVariants: jest.fn(function () {\n      return 'button-variant-class';\n    })\n  });\n};\njest.mock(\"../../design-system/components/Button\", mockButtonModule);\nimport { Button, buttonVariants } from \"../../design-system/components/Button\";\ndescribe('Button component', function () {\n  beforeEach(function () {\n    jest.clearAllMocks();\n  });\n  it('should pass a basic test', function () {\n    expect(Button).toBeDefined();\n    expect(buttonVariants).toBeDefined();\n  });\n  it('should pass props correctly', function () {\n    var result = Button({\n      variant: 'primary',\n      size: 'lg',\n      children: 'Test Button'\n    });\n    expect(result.type).toBe('Button');\n    expect(result.props.variant).toBe('primary');\n    expect(result.props.size).toBe('lg');\n    expect(result.props.children).toBe('Test Button');\n  });\n});","map":{"version":3,"names":["testHelper","require","mockButtonModule","createMock","Button","jest","fn","props","type","buttonVariants","mock","describe","beforeEach","clearAllMocks","it","expect","toBeDefined","result","variant","size","children","toBe"],"sources":["C:/Users/user/Documents/app.v3/client/src/components/__tests__/Button.test.js"],"sourcesContent":["// client/src/components/__tests__/Button.test.js\r\n\r\n// Import the test helper if needed for component tests\r\nconst testHelper = require('../../__mocks__/testHelper');\r\n\r\n// Define the mock factory function\r\nconst mockButtonModule = () => {\r\n  return testHelper.createMock({\r\n    Button: jest.fn(props => ({\r\n      type: 'Button',\r\n      props\r\n    })),\r\n    buttonVariants: jest.fn(() => 'button-variant-class')\r\n  });\r\n};\r\n\r\n// Correctly mock the Button component based on its actual location\r\njest.mock('../../design-system/components/Button', mockButtonModule);\r\n\r\n// Import the mocked component\r\nimport { Button, buttonVariants } from '../../design-system/components/Button';\r\n\r\ndescribe('Button component', () => {\r\n  // Reset mocks before each test\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  // Basic existence test\r\n  it('should pass a basic test', () => {\r\n    expect(Button).toBeDefined();\r\n    expect(buttonVariants).toBeDefined();\r\n  });\r\n\r\n  // Test with props\r\n  it('should pass props correctly', () => {\r\n    // Arrange & Act\r\n    const result = Button({\r\n      variant: 'primary',\r\n      size: 'lg',\r\n      children: 'Test Button'\r\n    });\r\n\r\n    // Assert\r\n    expect(result.type).toBe('Button');\r\n    expect(result.props.variant).toBe('primary');\r\n    expect(result.props.size).toBe('lg');\r\n    expect(result.props.children).toBe('Test Button');\r\n  });\r\n});\r\n"],"mappings":"AAGA,IAAMA,UAAU,GAAGC,OAAO,6BAA6B,CAAC;AAGxD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,OAAOF,UAAU,CAACG,UAAU,CAAC;IAC3BC,MAAM,EAAEC,IAAI,CAACC,EAAE,CAAC,UAAAC,KAAK;MAAA,OAAK;QACxBC,IAAI,EAAE,QAAQ;QACdD,KAAK,EAALA;MACF,CAAC;IAAA,CAAC,CAAC;IACHE,cAAc,EAAEJ,IAAI,CAACC,EAAE,CAAC;MAAA,OAAM,sBAAsB;IAAA;EACtD,CAAC,CAAC;AACJ,CAAC;AAGDD,IAAI,CAACK,IAAI,0CAA0CR,gBAAgB,CAAC;AAGpE,SAASE,MAAM,EAAEK,cAAc;AAE/BE,QAAQ,CAAC,kBAAkB,EAAE,YAAM;EAEjCC,UAAU,CAAC,YAAM;IACfP,IAAI,CAACQ,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAGFC,EAAE,CAAC,0BAA0B,EAAE,YAAM;IACnCC,MAAM,CAACX,MAAM,CAAC,CAACY,WAAW,CAAC,CAAC;IAC5BD,MAAM,CAACN,cAAc,CAAC,CAACO,WAAW,CAAC,CAAC;EACtC,CAAC,CAAC;EAGFF,EAAE,CAAC,6BAA6B,EAAE,YAAM;IAEtC,IAAMG,MAAM,GAAGb,MAAM,CAAC;MACpBc,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAGFL,MAAM,CAACE,MAAM,CAACT,IAAI,CAAC,CAACa,IAAI,CAAC,QAAQ,CAAC;IAClCN,MAAM,CAACE,MAAM,CAACV,KAAK,CAACW,OAAO,CAAC,CAACG,IAAI,CAAC,SAAS,CAAC;IAC5CN,MAAM,CAACE,MAAM,CAACV,KAAK,CAACY,IAAI,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IACpCN,MAAM,CAACE,MAAM,CAACV,KAAK,CAACa,QAAQ,CAAC,CAACC,IAAI,CAAC,aAAa,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nfunction debugEnvironmentVariables() {\n  console.log('--- DEBUGGING ENVIRONMENT VARIABLES ---');\n  console.log('NODE_ENV:', process.env.NODE_ENV);\n  var reactAppVars = Object.keys(process.env).filter(function (key) {\n    return key.startsWith('REACT_APP_');\n  });\n  console.log('Found REACT_APP_ variables:', reactAppVars);\n  var firebaseKeys = ['REACT_APP_FIREBASE_API_KEY', 'REACT_APP_FIREBASE_AUTH_DOMAIN', 'REACT_APP_FIREBASE_PROJECT_ID', 'REACT_APP_FIREBASE_STORAGE_BUCKET', 'REACT_APP_FIREBASE_MESSAGING_SENDER_ID', 'REACT_APP_FIREBASE_APP_ID'];\n  firebaseKeys.forEach(function (key) {\n    console.log(`${key}:`, process.env[key] ? '*** SET ***' : '!!! NOT SET !!!');\n  });\n  console.log('--- END DEBUGGING ---');\n}\nif (process.env.NODE_ENV === 'development') {\n  debugEnvironmentVariables();\n}\nvar requiredEnvKeys = ['REACT_APP_FIREBASE_API_KEY', 'REACT_APP_FIREBASE_AUTH_DOMAIN', 'REACT_APP_FIREBASE_PROJECT_ID', 'REACT_APP_FIREBASE_STORAGE_BUCKET', 'REACT_APP_FIREBASE_MESSAGING_SENDER_ID', 'REACT_APP_FIREBASE_APP_ID'];\nvar validateEnvVariables = function validateEnvVariables() {\n  console.log(\"Validating Firebase environment variables...\");\n  var missingKeys = requiredEnvKeys.filter(function (key) {\n    return !process.env[key] || process.env[key].trim() === '';\n  });\n  if (missingKeys.length > 0) {\n    var errorMsg = `CRITICAL ERROR: Missing or empty Firebase environment variables: ${missingKeys.join(', ')}. Check your .env file (e.g., .env.development in client/ folder), ensure all required REACT_APP_FIREBASE_... variables are set correctly, and restart the development server.`;\n    console.error(errorMsg);\n    throw new Error(errorMsg);\n  }\n  console.log(\"Firebase environment variables validated successfully.\");\n};\nvalidateEnvVariables();\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nvar app;\nvar auth;\nvar db;\nvar storage;\ntry {\n  if (!getApps().length) {\n    console.log(\"Initializing Firebase app...\");\n    app = initializeApp(firebaseConfig);\n    console.log(\"Firebase app initialized.\");\n  } else {\n    console.log(\"Firebase app already initialized.\");\n    app = getApps()[0];\n  }\n  auth = getAuth(app);\n  db = getFirestore(app);\n  storage = getStorage(app);\n  console.log(\"Firebase services (Auth, Firestore, Storage) initialized.\");\n} catch (error) {\n  if (!error.message.startsWith('CRITICAL ERROR')) {\n    console.error('Firebase service initialization failed:', error);\n  }\n  throw error;\n}\nexport { auth, db, storage, app };\nexport default app;","map":{"version":3,"names":["initializeApp","getApps","getAuth","getFirestore","getStorage","debugEnvironmentVariables","console","log","process","env","NODE_ENV","reactAppVars","Object","keys","filter","key","startsWith","firebaseKeys","forEach","requiredEnvKeys","validateEnvVariables","missingKeys","trim","length","errorMsg","join","error","Error","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","auth","db","storage","message"],"sources":["C:/Users/user/Documents/app.v3/client/src/core/config/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// --- Environment Variable Debugging ---\r\nfunction debugEnvironmentVariables() {\r\n  console.log('--- DEBUGGING ENVIRONMENT VARIABLES ---');\r\n  console.log('NODE_ENV:', process.env.NODE_ENV);\r\n  // Log all REACT_APP_ variables found\r\n  const reactAppVars = Object.keys(process.env).filter(key => key.startsWith('REACT_APP_'));\r\n  console.log('Found REACT_APP_ variables:', reactAppVars);\r\n\r\n  // Log specific Firebase keys and their values (or indicate if missing)\r\n  const firebaseKeys = [\r\n    'REACT_APP_FIREBASE_API_KEY',\r\n    'REACT_APP_FIREBASE_AUTH_DOMAIN',\r\n    'REACT_APP_FIREBASE_PROJECT_ID',\r\n    'REACT_APP_FIREBASE_STORAGE_BUCKET',\r\n    'REACT_APP_FIREBASE_MESSAGING_SENDER_ID',\r\n    'REACT_APP_FIREBASE_APP_ID'\r\n  ];\r\n  firebaseKeys.forEach(key => {\r\n    console.log(`${key}:`, process.env[key] ? '*** SET ***' : '!!! NOT SET !!!'); // Avoid logging actual keys\r\n  });\r\n  console.log('--- END DEBUGGING ---');\r\n}\r\n\r\n// Call debug function early, only in development\r\nif (process.env.NODE_ENV === 'development') {\r\n  debugEnvironmentVariables();\r\n}\r\n// --- End Debugging ---\r\n\r\n\r\n// Define required environment variable keys\r\nconst requiredEnvKeys = [\r\n  'REACT_APP_FIREBASE_API_KEY',\r\n  'REACT_APP_FIREBASE_AUTH_DOMAIN',\r\n  'REACT_APP_FIREBASE_PROJECT_ID',\r\n  'REACT_APP_FIREBASE_STORAGE_BUCKET',\r\n  'REACT_APP_FIREBASE_MESSAGING_SENDER_ID',\r\n  'REACT_APP_FIREBASE_APP_ID'\r\n];\r\n\r\n// Validate environment variables before creating the config object\r\nconst validateEnvVariables = () => {\r\n  console.log(\"Validating Firebase environment variables...\");\r\n  const missingKeys = requiredEnvKeys.filter(key => \r\n    !process.env[key] || process.env[key].trim() === ''\r\n  );\r\n  \r\n  if (missingKeys.length > 0) {\r\n    const errorMsg = `CRITICAL ERROR: Missing or empty Firebase environment variables: ${missingKeys.join(', ')}. Check your .env file (e.g., .env.development in client/ folder), ensure all required REACT_APP_FIREBASE_... variables are set correctly, and restart the development server.`;\r\n    console.error(errorMsg); \r\n    throw new Error(errorMsg); \r\n  }\r\n  console.log(\"Firebase environment variables validated successfully.\");\r\n};\r\n\r\n// Validate environment variables immediately\r\nvalidateEnvVariables(); \r\n\r\n// Create the config object using the validated environment variables\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nlet app;\r\nlet auth;\r\nlet db;\r\nlet storage;\r\n\r\ntry {\r\n  // Initialization check\r\n  if (!getApps().length) {\r\n    console.log(\"Initializing Firebase app...\");\r\n    app = initializeApp(firebaseConfig);\r\n    console.log(\"Firebase app initialized.\");\r\n  } else {\r\n    console.log(\"Firebase app already initialized.\");\r\n    app = getApps()[0]; \r\n  }\r\n\r\n  // Initialize services\r\n  auth = getAuth(app);\r\n  db = getFirestore(app);\r\n  storage = getStorage(app);\r\n  console.log(\"Firebase services (Auth, Firestore, Storage) initialized.\");\r\n\r\n} catch (error) {\r\n  if (!error.message.startsWith('CRITICAL ERROR')) {\r\n      console.error('Firebase service initialization failed:', error);\r\n  }\r\n  throw error; \r\n}\r\n\r\n// Export initialized services\r\nexport { auth, db, storage, app }; \r\nexport default app;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
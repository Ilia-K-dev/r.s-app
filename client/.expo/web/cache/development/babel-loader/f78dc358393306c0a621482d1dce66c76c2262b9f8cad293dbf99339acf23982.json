{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar DebugHelper = function () {\n  \"use strict\";\n\n  function DebugHelper() {\n    _classCallCheck(this, DebugHelper);\n  }\n  return _createClass(DebugHelper, null, [{\n    key: \"logModuleResolution\",\n    value: function logModuleResolution(moduleName) {\n      console.log(`[Jest Debug] Attempting to resolve module: ${moduleName}`);\n      try {\n        console.log(`[Jest Debug] Module ${moduleName} resolution attempted`);\n      } catch (error) {\n        console.error(`[Jest Debug] Error resolving module ${moduleName}:`, error);\n      }\n    }\n  }, {\n    key: \"logMockStatus\",\n    value: function logMockStatus(mockName) {\n      console.log(`[Jest Debug] Mock status for ${mockName}:`, {\n        isMockFunction: typeof jest.isMockFunction === 'function' && jest.isMockFunction(global[mockName]),\n        isDefined: global[mockName] !== undefined\n      });\n    }\n  }]);\n}();\nglobal.DebugHelper = DebugHelper;\nmodule.exports = DebugHelper;","map":{"version":3,"names":["DebugHelper","_classCallCheck","_createClass","key","value","logModuleResolution","moduleName","console","log","error","logMockStatus","mockName","isMockFunction","jest","global","isDefined","undefined","module","exports"],"sources":["C:/Users/user/Documents/app.v3/client/src/__mocks__/debugHelper.js"],"sourcesContent":["/**\r\n * Helper to debug Jest configuration and module resolution\r\n */\r\nclass DebugHelper {\r\n  static logModuleResolution(moduleName) {\r\n    console.log(`[Jest Debug] Attempting to resolve module: ${moduleName}`);\r\n    try {\r\n      // Logging the resolved module path would go here\r\n      // This is just a placeholder as Jest doesn't expose this info directly\r\n      console.log(`[Jest Debug] Module ${moduleName} resolution attempted`);\r\n    } catch (error) {\r\n      console.error(`[Jest Debug] Error resolving module ${moduleName}:`, error);\r\n    }\r\n  }\r\n\r\n  static logMockStatus(mockName) {\r\n    console.log(`[Jest Debug] Mock status for ${mockName}:`, {\r\n      isMockFunction: typeof jest.isMockFunction === 'function' && jest.isMockFunction(global[mockName]),\r\n      isDefined: global[mockName] !== undefined,\r\n    });\r\n  }\r\n}\r\n\r\n// Expose the helper globally\r\nglobal.DebugHelper = DebugHelper;\r\n\r\nmodule.exports = DebugHelper;\r\n"],"mappings":";;IAGMA,WAAW;EAAA;;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,WAAA;IAAAG,GAAA;IAAAC,KAAA,EACf,SAAOC,mBAAmBA,CAACC,UAAU,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,8CAA8CF,UAAU,EAAE,CAAC;MACvE,IAAI;QAGFC,OAAO,CAACC,GAAG,CAAC,uBAAuBF,UAAU,uBAAuB,CAAC;MACvE,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uCAAuCH,UAAU,GAAG,EAAEG,KAAK,CAAC;MAC5E;IACF;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAOM,aAAaA,CAACC,QAAQ,EAAE;MAC7BJ,OAAO,CAACC,GAAG,CAAC,gCAAgCG,QAAQ,GAAG,EAAE;QACvDC,cAAc,EAAE,OAAOC,IAAI,CAACD,cAAc,KAAK,UAAU,IAAIC,IAAI,CAACD,cAAc,CAACE,MAAM,CAACH,QAAQ,CAAC,CAAC;QAClGI,SAAS,EAAED,MAAM,CAACH,QAAQ,CAAC,KAAKK;MAClC,CAAC,CAAC;IACJ;EAAC;AAAA;AAIHF,MAAM,CAACd,WAAW,GAAGA,WAAW;AAEhCiB,MAAM,CAACC,OAAO,GAAGlB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
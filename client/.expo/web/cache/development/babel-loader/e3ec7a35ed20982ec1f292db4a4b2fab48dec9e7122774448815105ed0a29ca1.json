{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { storage } from \"../../../core/config/firebase\";\nimport { processImage } from \"../utils/imageProcessing\";\nexport var visionService = {\n  processReceipt: function () {\n    var _processReceipt = _asyncToGenerator(function* (file) {\n      try {\n        var processedImage = yield processImage(file);\n        var filename = `receipts/${Date.now()}_${file.name}`;\n        var storageRef = storage.ref(filename);\n        yield storageRef.put(processedImage);\n        var imageUrl = yield storageRef.getDownloadURL();\n        var response = yield fetch('/api/vision/detect-text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            imageUrl: imageUrl\n          })\n        });\n        if (!response.ok) throw new Error('Failed to process receipt');\n        var data = yield response.json();\n        return {\n          text: data.text,\n          imageUrl: imageUrl,\n          confidence: data.confidence,\n          items: data.items || []\n        };\n      } catch (error) {\n        console.error('Vision service error:', error);\n        throw new Error('Failed to process receipt image');\n      }\n    });\n    function processReceipt(_x) {\n      return _processReceipt.apply(this, arguments);\n    }\n    return processReceipt;\n  }()\n};","map":{"version":3,"names":["storage","processImage","visionService","processReceipt","_processReceipt","_asyncToGenerator","file","processedImage","filename","Date","now","name","storageRef","ref","put","imageUrl","getDownloadURL","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","text","confidence","items","error","console","_x","apply","arguments"],"sources":["C:/Users/user/Documents/app.v3/client/src/features/documents/services/visionService.js"],"sourcesContent":["// src/services/vision/visionService.js\r\nimport { storage } from '../../../core/config/firebase';\r\nimport { processImage } from '../utils/imageProcessing';\r\n\r\nexport const visionService = {\r\n  async processReceipt(file) {\r\n    try {\r\n      // Process the image first\r\n      const processedImage = await processImage(file);\r\n\r\n      // Generate unique filename\r\n      const filename = `receipts/${Date.now()}_${file.name}`;\r\n      const storageRef = storage.ref(filename);\r\n\r\n      // Upload to Firebase Storage\r\n      await storageRef.put(processedImage);\r\n      const imageUrl = await storageRef.getDownloadURL();\r\n\r\n      // Get text from Vision API\r\n      const response = await fetch('/api/vision/detect-text', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ imageUrl }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to process receipt');\r\n\r\n      const data = await response.json();\r\n      return {\r\n        text: data.text,\r\n        imageUrl,\r\n        confidence: data.confidence,\r\n        items: data.items || [],\r\n      };\r\n    } catch (error) {\r\n      console.error('Vision service error:', error);\r\n      throw new Error('Failed to process receipt image');\r\n    }\r\n  },\r\n};\r\n"],"mappings":";AACA,SAASA,OAAO;AAChB,SAASC,YAAY;AAErB,OAAO,IAAMC,aAAa,GAAG;EACrBC,cAAc;IAAA,IAAAC,eAAA,GAAAC,iBAAA,YAACC,IAAI,EAAE;MACzB,IAAI;QAEF,IAAMC,cAAc,SAASN,YAAY,CAACK,IAAI,CAAC;QAG/C,IAAME,QAAQ,GAAG,YAAYC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIJ,IAAI,CAACK,IAAI,EAAE;QACtD,IAAMC,UAAU,GAAGZ,OAAO,CAACa,GAAG,CAACL,QAAQ,CAAC;QAGxC,MAAMI,UAAU,CAACE,GAAG,CAACP,cAAc,CAAC;QACpC,IAAMQ,QAAQ,SAASH,UAAU,CAACI,cAAc,CAAC,CAAC;QAGlD,IAAMC,QAAQ,SAASC,KAAK,CAAC,yBAAyB,EAAE;UACtDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER,QAAQ,EAARA;UAAS,CAAC;QACnC,CAAC,CAAC;QAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAE9D,IAAMC,IAAI,SAAST,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,OAAO;UACLC,IAAI,EAAEF,IAAI,CAACE,IAAI;UACfb,QAAQ,EAARA,QAAQ;UACRc,UAAU,EAAEH,IAAI,CAACG,UAAU;UAC3BC,KAAK,EAAEJ,IAAI,CAACI,KAAK,IAAI;QACvB,CAAC;MACH,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,MAAM,IAAIN,KAAK,CAAC,iCAAiC,CAAC;MACpD;IACF,CAAC;IAAA,SAjCKtB,cAAcA,CAAA8B,EAAA;MAAA,OAAA7B,eAAA,CAAA8B,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAdhC,cAAc;EAAA;AAkCtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
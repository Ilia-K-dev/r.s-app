{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar Range = require(\"./Range\");\nmodule.exports.stringHints = function stringHints(schema, logic) {\n  var hints = [];\n  var type = 'string';\n  var currentSchema = _objectSpread({}, schema);\n  if (!logic) {\n    var tmpLength = currentSchema.minLength;\n    var tmpFormat = currentSchema.formatMinimum;\n    var tmpExclusive = currentSchema.formatExclusiveMaximum;\n    currentSchema.minLength = currentSchema.maxLength;\n    currentSchema.maxLength = tmpLength;\n    currentSchema.formatMinimum = currentSchema.formatMaximum;\n    currentSchema.formatMaximum = tmpFormat;\n    currentSchema.formatExclusiveMaximum = !currentSchema.formatExclusiveMinimum;\n    currentSchema.formatExclusiveMinimum = !tmpExclusive;\n  }\n  if (typeof currentSchema.minLength === 'number') {\n    if (currentSchema.minLength === 1) {\n      type = 'non-empty string';\n    } else {\n      var length = Math.max(currentSchema.minLength - 1, 0);\n      hints.push(`should be longer than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n  if (typeof currentSchema.maxLength === 'number') {\n    if (currentSchema.maxLength === 0) {\n      type = 'empty string';\n    } else {\n      var _length = currentSchema.maxLength + 1;\n      hints.push(`should be shorter than ${_length} character${_length > 1 ? 's' : ''}`);\n    }\n  }\n  if (currentSchema.pattern) {\n    hints.push(`should${logic ? '' : ' not'} match pattern ${JSON.stringify(currentSchema.pattern)}`);\n  }\n  if (currentSchema.format) {\n    hints.push(`should${logic ? '' : ' not'} match format ${JSON.stringify(currentSchema.format)}`);\n  }\n  if (currentSchema.formatMinimum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMinimum ? '>' : '>='} ${JSON.stringify(currentSchema.formatMinimum)}`);\n  }\n  if (currentSchema.formatMaximum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMaximum ? '<' : '<='} ${JSON.stringify(currentSchema.formatMaximum)}`);\n  }\n  return [type].concat(hints);\n};\nmodule.exports.numberHints = function numberHints(schema, logic) {\n  var hints = [schema.type === 'integer' ? 'integer' : 'number'];\n  var range = new Range();\n  if (typeof schema.minimum === 'number') {\n    range.left(schema.minimum);\n  }\n  if (typeof schema.exclusiveMinimum === 'number') {\n    range.left(schema.exclusiveMinimum, true);\n  }\n  if (typeof schema.maximum === 'number') {\n    range.right(schema.maximum);\n  }\n  if (typeof schema.exclusiveMaximum === 'number') {\n    range.right(schema.exclusiveMaximum, true);\n  }\n  var rangeFormat = range.format(logic);\n  if (rangeFormat) {\n    hints.push(rangeFormat);\n  }\n  if (typeof schema.multipleOf === 'number') {\n    hints.push(`should${logic ? '' : ' not'} be multiple of ${schema.multipleOf}`);\n  }\n  return hints;\n};","map":{"version":3,"names":["_defineProperty","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","Range","module","exports","stringHints","schema","logic","hints","type","currentSchema","tmpLength","minLength","tmpFormat","formatMinimum","tmpExclusive","formatExclusiveMaximum","maxLength","formatMaximum","formatExclusiveMinimum","Math","max","pattern","JSON","stringify","format","concat","numberHints","range","minimum","left","exclusiveMinimum","maximum","right","exclusiveMaximum","rangeFormat","multipleOf"],"sources":["C:/Users/user/Documents/app.v3/client/node_modules/@expo/webpack-config/node_modules/schema-utils/dist/util/hints.js"],"sourcesContent":["\"use strict\";\n\nconst Range = require('./Range');\n/** @typedef {import(\"../validate\").Schema} Schema */\n\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */\n\n\nmodule.exports.stringHints = function stringHints(schema, logic) {\n  const hints = [];\n  let type = 'string';\n  const currentSchema = { ...schema\n  };\n\n  if (!logic) {\n    const tmpLength = currentSchema.minLength;\n    const tmpFormat = currentSchema.formatMinimum;\n    const tmpExclusive = currentSchema.formatExclusiveMaximum;\n    currentSchema.minLength = currentSchema.maxLength;\n    currentSchema.maxLength = tmpLength;\n    currentSchema.formatMinimum = currentSchema.formatMaximum;\n    currentSchema.formatMaximum = tmpFormat;\n    currentSchema.formatExclusiveMaximum = !currentSchema.formatExclusiveMinimum;\n    currentSchema.formatExclusiveMinimum = !tmpExclusive;\n  }\n\n  if (typeof currentSchema.minLength === 'number') {\n    if (currentSchema.minLength === 1) {\n      type = 'non-empty string';\n    } else {\n      const length = Math.max(currentSchema.minLength - 1, 0);\n      hints.push(`should be longer than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n\n  if (typeof currentSchema.maxLength === 'number') {\n    if (currentSchema.maxLength === 0) {\n      type = 'empty string';\n    } else {\n      const length = currentSchema.maxLength + 1;\n      hints.push(`should be shorter than ${length} character${length > 1 ? 's' : ''}`);\n    }\n  }\n\n  if (currentSchema.pattern) {\n    hints.push(`should${logic ? '' : ' not'} match pattern ${JSON.stringify(currentSchema.pattern)}`);\n  }\n\n  if (currentSchema.format) {\n    hints.push(`should${logic ? '' : ' not'} match format ${JSON.stringify(currentSchema.format)}`);\n  }\n\n  if (currentSchema.formatMinimum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMinimum ? '>' : '>='} ${JSON.stringify(currentSchema.formatMinimum)}`);\n  }\n\n  if (currentSchema.formatMaximum) {\n    hints.push(`should be ${currentSchema.formatExclusiveMaximum ? '<' : '<='} ${JSON.stringify(currentSchema.formatMaximum)}`);\n  }\n\n  return [type].concat(hints);\n};\n/**\n * @param {Schema} schema\n * @param {boolean} logic\n * @return {string[]}\n */\n\n\nmodule.exports.numberHints = function numberHints(schema, logic) {\n  const hints = [schema.type === 'integer' ? 'integer' : 'number'];\n  const range = new Range();\n\n  if (typeof schema.minimum === 'number') {\n    range.left(schema.minimum);\n  }\n\n  if (typeof schema.exclusiveMinimum === 'number') {\n    range.left(schema.exclusiveMinimum, true);\n  }\n\n  if (typeof schema.maximum === 'number') {\n    range.right(schema.maximum);\n  }\n\n  if (typeof schema.exclusiveMaximum === 'number') {\n    range.right(schema.exclusiveMaximum, true);\n  }\n\n  const rangeFormat = range.format(logic);\n\n  if (rangeFormat) {\n    hints.push(rangeFormat);\n  }\n\n  if (typeof schema.multipleOf === 'number') {\n    hints.push(`should${logic ? '' : ' not'} be multiple of ${schema.multipleOf}`);\n  }\n\n  return hints;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
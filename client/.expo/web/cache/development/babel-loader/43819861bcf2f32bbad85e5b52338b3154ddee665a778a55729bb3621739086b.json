{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { RouterProvider } from 'react-router-dom';\nimport { AuthProvider } from \"./core/contexts/AuthContext\";\nimport { ToastProvider } from \"./core/contexts/ToastContext\";\nimport router from \"./routes\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from \"./locales\";\nimport { env } from \"./core/config/environment\";\nimport { testApiConnection } from \"./shared/utils/apiConnectionTest\";\nimport { useToast } from \"./shared/hooks/useToast\";\nimport DebugPanel from \"./components/debug/DebugPanel\";\nimport \"./core/config/firebase\";\nimport \"../src/shared/styles/index.css\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useToast = useToast(),\n    showToast = _useToast.showToast;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    apiConnected = _useState2[0],\n    setApiConnected = _useState2[1];\n  useEffect(function () {\n    testApiConnection(function (url) {\n      if (process.env.NODE_ENV !== 'production') {\n        showToast(`Connected to API: ${url}`, 'success');\n      }\n      setApiConnected(true);\n    }, function (errorMsg) {\n      showToast(`API connection issue: ${errorMsg}`, 'warning');\n      setApiConnected(false);\n    });\n  }, [showToast]);\n  var renderApiWarning = function renderApiWarning() {\n    if (!apiConnected && process.env.NODE_ENV !== 'production') {\n      return _jsx(\"div\", {\n        className: \"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4\",\n        children: _jsx(\"p\", {\n          children: \"API connection issues detected. Some features may not work.\"\n        })\n      });\n    }\n    return null;\n  };\n  return _jsxs(ThemeProvider, {\n    children: [\" \", _jsxs(I18nextProvider, {\n      i18n: i18n,\n      children: [\" \", _jsx(AuthProvider, {\n        children: _jsxs(ToastProvider, {\n          children: [!env.IS_PRODUCTION && _jsx(\"div\", {\n            className: \"fixed top-0 right-0 bg-yellow-500 text-black px-2 py-1 text-xs font-bold z-50\",\n            children: process.env.NODE_ENV\n          }), renderApiWarning(), \" \", _jsx(RouterProvider, {\n            router: router\n          })]\n        })\n      })]\n    })]\n  });\n};\n{\n  process.env.NODE_ENV === 'development' && _jsx(DebugPanel, {\n    position: \"bottom-right\"\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","RouterProvider","AuthProvider","ToastProvider","router","ThemeProvider","I18nextProvider","i18n","env","testApiConnection","useToast","DebugPanel","jsx","_jsx","jsxs","_jsxs","App","_useToast","showToast","_useState","_useState2","_slicedToArray","apiConnected","setApiConnected","url","process","NODE_ENV","errorMsg","renderApiWarning","className","children","IS_PRODUCTION","position"],"sources":["C:/Users/user/Documents/app.v3/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Added useEffect and useState\r\nimport { RouterProvider } from 'react-router-dom';\r\nimport { AuthProvider } from './core/contexts/AuthContext';\r\nimport { ToastProvider } from './core/contexts/ToastContext';\r\nimport router from './routes';\r\nimport { ThemeProvider } from './contexts/ThemeContext'; // Import ThemeProvider\r\nimport { I18nextProvider } from 'react-i18next'; // Import I18nextProvider\r\nimport i18n from './locales'; // Import i18n configuration\r\nimport { env } from './core/config/environment'; // Import env\r\nimport { testApiConnection } from './shared/utils/apiConnectionTest'; // Import testApiConnection\r\nimport { useToast } from './shared/hooks/useToast'; // Import useToast\r\nimport DebugPanel from './components/debug/DebugPanel'; // Import DebugPanel\r\n\r\n// Import Firebase to ensure it's initialized once, but don't re-initialize\r\nimport './core/config/firebase';\r\nimport '../src/shared/styles/index.css';\r\n\r\nconst App = () => { // Changed to a functional component to use hooks\r\n  const { showToast } = useToast(); // Use useToast hook\r\n  const [apiConnected, setApiConnected] = useState(true); // Add apiConnected state\r\n\r\n  useEffect(() => {\r\n    // Test API connection on app startup\r\n    testApiConnection(\r\n      (url) => {\r\n        // Only show success in development\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          showToast(`Connected to API: ${url}`, 'success');\r\n        }\r\n        setApiConnected(true);\r\n      },\r\n      (errorMsg) => {\r\n        showToast(`API connection issue: ${errorMsg}`, 'warning');\r\n        setApiConnected(false);\r\n      }\r\n    );\r\n  }, [showToast]); // Added showToast to dependencies\r\n\r\n  // Optional: Show a banner if API is not connected (in development only)\r\n  const renderApiWarning = () => {\r\n    if (!apiConnected && process.env.NODE_ENV !== 'production') {\r\n      return (\r\n        <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4\">\r\n          <p>API connection issues detected. Some features may not work.</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider> {/* Wrap with ThemeProvider */}\r\n      <I18nextProvider i18n={i18n}> {/* Wrap with I18nextProvider */}\r\n        <AuthProvider>\r\n          <ToastProvider>\r\n            {!env.IS_PRODUCTION && ( // Conditional environment indicator\r\n              <div className=\"fixed top-0 right-0 bg-yellow-500 text-black px-2 py-1 text-xs font-bold z-50\">\r\n                {process.env.NODE_ENV}\r\n              </div>\r\n            )}\r\n            {renderApiWarning()} {/* Render API warning */}\r\n            <RouterProvider router={router} />\r\n          </ToastProvider>\r\n        </AuthProvider>\r\n      </I18nextProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n// Include debug panel in development mode\r\n{process.env.NODE_ENV === 'development' && (\r\n  <DebugPanel position=\"bottom-right\" />\r\n)}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY;AACrB,SAASC,aAAa;AACtB,OAAOC,MAAM;AACb,SAASC,aAAa;AACtB,SAASC,eAAe,QAAQ,eAAe;AAC/C,OAAOC,IAAI;AACX,SAASC,GAAG;AACZ,SAASC,iBAAiB;AAC1B,SAASC,QAAQ;AACjB,OAAOC,UAAU;AAGjB;AACA;AAAwC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExC,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAsBP,QAAQ,CAAC,CAAC;IAAxBQ,SAAS,GAAAD,SAAA,CAATC,SAAS;EACjB,IAAAC,SAAA,GAAwCnB,QAAQ,CAAC,IAAI,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpCrB,SAAS,CAAC,YAAM;IAEdU,iBAAiB,CACf,UAACe,GAAG,EAAK;MAEP,IAAIC,OAAO,CAACjB,GAAG,CAACkB,QAAQ,KAAK,YAAY,EAAE;QACzCR,SAAS,CAAC,qBAAqBM,GAAG,EAAE,EAAE,SAAS,CAAC;MAClD;MACAD,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,EACD,UAACI,QAAQ,EAAK;MACZT,SAAS,CAAC,yBAAyBS,QAAQ,EAAE,EAAE,SAAS,CAAC;MACzDJ,eAAe,CAAC,KAAK,CAAC;IACxB,CACF,CAAC;EACH,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAGf,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAI,CAACN,YAAY,IAAIG,OAAO,CAACjB,GAAG,CAACkB,QAAQ,KAAK,YAAY,EAAE;MAC1D,OACEb,IAAA;QAAKgB,SAAS,EAAC,qEAAqE;QAAAC,QAAA,EAClFjB,IAAA;UAAAiB,QAAA,EAAG;QAA2D,CAAG;MAAC,CAC/D,CAAC;IAEV;IACA,OAAO,IAAI;EACb,CAAC;EAED,OACEf,KAAA,CAACV,aAAa;IAAAyB,QAAA,GAAC,GAAC,EACdf,KAAA,CAACT,eAAe;MAACC,IAAI,EAAEA,IAAK;MAAAuB,QAAA,GAAC,GAAC,EAC5BjB,IAAA,CAACX,YAAY;QAAA4B,QAAA,EACXf,KAAA,CAACZ,aAAa;UAAA2B,QAAA,GACX,CAACtB,GAAG,CAACuB,aAAa,IACjBlB,IAAA;YAAKgB,SAAS,EAAC,+EAA+E;YAAAC,QAAA,EAC3FL,OAAO,CAACjB,GAAG,CAACkB;UAAQ,CAClB,CACN,EACAE,gBAAgB,CAAC,CAAC,EAAC,GAAC,EACrBf,IAAA,CAACZ,cAAc;YAACG,MAAM,EAAEA;UAAO,CAAE,CAAC;QAAA,CACrB;MAAC,CACJ,CAAC;IAAA,CACA,CAAC;EAAA,CACL,CAAC;AAEpB,CAAC;AAGD;EAACqB,OAAO,CAACjB,GAAG,CAACkB,QAAQ,KAAK,aAAa,IACrCb,IAAA,CAACF,UAAU;IAACqB,QAAQ,EAAC;EAAc,CAAE,CACtC;AAAA;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
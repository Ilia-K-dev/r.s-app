{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport Constants from 'expo-constants';\nfunction logFirebaseStatus(message) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  console.log(`[Firebase] ${message}`, data);\n}\nvar apiKey = process.env.REACT_APP_FIREBASE_API_KEY;\nvar authDomain = process.env.REACT_APP_FIREBASE_AUTH_DOMAIN;\nvar projectId = process.env.REACT_APP_FIREBASE_PROJECT_ID;\nvar storageBucket = process.env.REACT_APP_FIREBASE_STORAGE_BUCKET;\nvar messagingSenderId = process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID;\nvar appId = process.env.REACT_APP_FIREBASE_APP_ID;\nvar measurementId = process.env.REACT_APP_FIREBASE_MEASUREMENT_ID;\nconsole.log(`[Firebase] API Key: ${apiKey ? apiKey.substring(0, 4) + '...' + apiKey.substring(apiKey.length - 4) : 'undefined'}`);\nconsole.log(`[Firebase] Auth Domain: ${authDomain}`);\nconsole.log(`[Firebase] Project ID: ${projectId}`);\nconsole.log(`[Firebase] Storage Bucket: ${storageBucket}`);\nconsole.log(`[Firebase] Messaging Sender ID: ${messagingSenderId}`);\nconsole.log(`[Firebase] App ID: ${appId}`);\nconsole.log(`[Firebase] Measurement ID: ${measurementId}`);\nvar firebaseConfig = {\n  apiKey: apiKey,\n  authDomain: authDomain,\n  projectId: projectId,\n  storageBucket: storageBucket,\n  messagingSenderId: messagingSenderId,\n  appId: appId,\n  measurementId: measurementId\n};\nvar app;\nvar auth;\nvar db;\nvar storage;\ntry {\n  if (!getApps().length) {\n    logFirebaseStatus(\"Initializing Firebase app...\");\n    app = initializeApp(firebaseConfig);\n    logFirebaseStatus(\"Firebase app initialized successfully\");\n  } else {\n    logFirebaseStatus(\"Firebase app already initialized\");\n    app = getApps()[0];\n  }\n  auth = getAuth(app);\n  db = getFirestore(app);\n  storage = getStorage(app);\n  logFirebaseStatus(\"Firebase services initialized successfully\", {\n    services: [\"Authentication\", \"Firestore\", \"Storage\"]\n  });\n} catch (error) {\n  console.error(\"CRITICAL ERROR: Firebase initialization failed\", error);\n  console.error(\"[Firebase] Initialization error details:\", error);\n  throw error;\n}\nexport { auth, db, storage, app };","map":{"version":3,"names":["initializeApp","getApps","getAuth","getFirestore","getStorage","Constants","logFirebaseStatus","message","data","arguments","length","undefined","console","log","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","substring","firebaseConfig","app","auth","db","storage","services","error"],"sources":["C:/Users/user/Documents/app.v3/client/src/core/config/firebase.js"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\nimport Constants from 'expo-constants';\r\n\r\n// --- Diagnostic Logging Function ---\r\nfunction logFirebaseStatus(message, data = {}) {\r\n  console.log(`[Firebase] ${message}`, data);\r\n}\r\n\r\n// Modified as part of build error fix task on 2025-05-08, 3:10:26 AM\r\n// Implementing Option A: Manual Configuration Handling to address auth/invalid-api-key error.\r\n// Explicitly extracting environment variables before creating firebaseConfig object.\r\n\r\n// --- Firebase Configuration from Environment Variables ---\r\n// Explicitly extract configuration values from process.env\r\nconst apiKey = process.env.REACT_APP_FIREBASE_API_KEY;\r\nconst authDomain = process.env.REACT_APP_FIREBASE_AUTH_DOMAIN;\r\nconst projectId = process.env.REACT_APP_FIREBASE_PROJECT_ID;\r\nconst storageBucket = process.env.REACT_APP_FIREBASE_STORAGE_BUCKET;\r\nconst messagingSenderId = process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID;\r\nconst appId = process.env.REACT_APP_FIREBASE_APP_ID;\r\nconst measurementId = process.env.REACT_APP_FIREBASE_MEASUREMENT_ID;\r\n\r\n// Log exact values (partially masked for security)\r\nconsole.log(`[Firebase] API Key: ${apiKey ? apiKey.substring(0, 4) + '...' + apiKey.substring(apiKey.length - 4) : 'undefined'}`);\r\nconsole.log(`[Firebase] Auth Domain: ${authDomain}`);\r\nconsole.log(`[Firebase] Project ID: ${projectId}`);\r\nconsole.log(`[Firebase] Storage Bucket: ${storageBucket}`);\r\nconsole.log(`[Firebase] Messaging Sender ID: ${messagingSenderId}`);\r\nconsole.log(`[Firebase] App ID: ${appId}`);\r\nconsole.log(`[Firebase] Measurement ID: ${measurementId}`);\r\n\r\n\r\n// Create config object manually\r\nconst firebaseConfig = {\r\n  apiKey,\r\n  authDomain,\r\n  projectId,\r\n  storageBucket,\r\n  messagingSenderId,\r\n  appId,\r\n  measurementId\r\n};\r\n\r\n\r\n// --- Core Firebase Services ---\r\nlet app;\r\nlet auth;\r\nlet db;\r\nlet storage;\r\n\r\n// --- Initialize Firebase ---\r\ntry {\r\n  // Check if Firebase is already initialized\r\n  if (!getApps().length) {\r\n    logFirebaseStatus(\"Initializing Firebase app...\");\r\n    app = initializeApp(firebaseConfig);\r\n    logFirebaseStatus(\"Firebase app initialized successfully\");\r\n  } else {\r\n    logFirebaseStatus(\"Firebase app already initialized\");\r\n    app = getApps()[0];\r\n  }\r\n\r\n  // Initialize services\r\n  auth = getAuth(app);\r\n  db = getFirestore(app);\r\n  storage = getStorage(app);\r\n  logFirebaseStatus(\"Firebase services initialized successfully\", {\r\n    services: [\"Authentication\", \"Firestore\", \"Storage\"]\r\n  });\r\n} catch (error) {\r\n  console.error(\"CRITICAL ERROR: Firebase initialization failed\", error);\r\n  // Log the error details for debugging\r\n  console.error(\"[Firebase] Initialization error details:\", error);\r\n  throw error;\r\n}\r\n\r\n// Export Firebase services\r\nexport { auth, db, storage, app };\r\n// Export default for backward compatibility (optional, depending on usage)\r\n// export default firebaseConfig; // Removed as config is now accessed via Constants\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from'react';import{testComponent,displayTestResults}from\"./componentTester\";import{jsx as _jsx}from\"react/jsx-runtime\";export var runComponentTest=function runComponentTest(Component){var props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};console.log(`Testing component ${Component.name||'Unknown'}`);var _testComponent=testComponent(Component,props),TestWrapper=_testComponent.TestWrapper,getResults=_testComponent.getResults;try{var element=_jsx(TestWrapper,{});var results=getResults();if(options.logResults!==false){displayTestResults(results);}return _objectSpread(_objectSpread({},results),{},{componentName:Component.name||'Unknown'});}catch(error){console.error('Error in test runner:',error);return{passed:false,errors:[error.message],warnings:[],log:[],componentName:Component.name||'Unknown'};}};export var runTestSuite=function runTestSuite(componentMap){var propsMap=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var results={total:Object.keys(componentMap).length,passed:0,failed:0,componentResults:{}};console.log(`Running test suite with ${results.total} components`);Object.entries(componentMap).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],Component=_ref2[1];var props=propsMap[name]||{};var componentResult=runComponentTest(Component,props,{logResults:false});results.componentResults[name]=componentResult;if(componentResult.passed){results.passed+=1;}else{results.failed+=1;}});console.log(`=== TEST SUITE RESULTS ===`);console.log(`Total components: ${results.total}`);console.log(`Passed: ${results.passed}`);console.log(`Failed: ${results.failed}`);if(results.failed>0){console.log(`\\nFailed components:`);Object.entries(results.componentResults).filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),_=_ref4[0],result=_ref4[1];return!result.passed;}).forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),name=_ref6[0],result=_ref6[1];console.log(`- ${name}: ${result.errors.length} errors`);});}return results;};window.testComponent=function(componentPath){try{import(`../../../${componentPath}`).then(function(module){var Component=module.default;runComponentTest(Component);}).catch(function(error){console.error(`Failed to import component from path: ${componentPath}`,error);});}catch(error){console.error(`Error testing component: ${error.message}`);}};","map":{"version":3,"names":["React","testComponent","displayTestResults","jsx","_jsx","runComponentTest","Component","props","arguments","length","undefined","options","console","log","name","_testComponent","TestWrapper","getResults","element","results","logResults","_objectSpread","componentName","error","passed","errors","message","warnings","runTestSuite","componentMap","propsMap","total","Object","keys","failed","componentResults","entries","forEach","_ref","_ref2","_slicedToArray","componentResult","filter","_ref3","_ref4","_","result","_ref5","_ref6","window","componentPath","then","module","default","catch"],"sources":["C:/Users/user/Documents/app.v3/client/src/utils/testing/testRunner.js"],"sourcesContent":["/**\r\n * testRunner.js\r\n * Last Modified: 5/22/2025 12:34 AM\r\n * Modified By: Cline\r\n * \r\n * Purpose: Provides functions to test components programmatically\r\n * Changes Made: Created new test runner utility\r\n * Reasoning: To enable component testing without deployment\r\n */\r\n\r\nimport React from 'react';\r\nimport { testComponent, displayTestResults } from './componentTester';\r\n\r\n/**\r\n * Tests a component and returns results\r\n * @param {React.Component} Component - Component to test\r\n * @param {Object} props - Props to pass to component\r\n * @param {Object} options - Test options\r\n * @returns {Object} - Test results\r\n */\r\nexport const runComponentTest = (Component, props = {}, options = {}) => {\r\n  console.log(`Testing component ${Component.name || 'Unknown'}`);\r\n  \r\n  const { TestWrapper, getResults } = testComponent(Component, props);\r\n  \r\n  try {\r\n    // Create component (doesn't actually render to DOM)\r\n    const element = <TestWrapper />;\r\n    const results = getResults();\r\n    \r\n    // Display results to console if requested\r\n    if (options.logResults !== false) {\r\n      displayTestResults(results);\r\n    }\r\n    \r\n    return {\r\n      ...results,\r\n      componentName: Component.name || 'Unknown'\r\n    };\r\n  } catch (error) {\r\n    console.error('Error in test runner:', error);\r\n    return {\r\n      passed: false,\r\n      errors: [error.message],\r\n      warnings: [],\r\n      log: [],\r\n      componentName: Component.name || 'Unknown'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Tests multiple components and aggregates results\r\n * @param {Object} componentMap - Map of component names to components\r\n * @param {Object} propsMap - Map of component names to props\r\n * @returns {Object} - Aggregated test results\r\n */\r\nexport const runTestSuite = (componentMap, propsMap = {}) => {\r\n  const results = {\r\n    total: Object.keys(componentMap).length,\r\n    passed: 0,\r\n    failed: 0,\r\n    componentResults: {}\r\n  };\r\n  \r\n  console.log(`Running test suite with ${results.total} components`);\r\n  \r\n  Object.entries(componentMap).forEach(([name, Component]) => {\r\n    const props = propsMap[name] || {};\r\n    const componentResult = runComponentTest(Component, props, { logResults: false });\r\n    \r\n    results.componentResults[name] = componentResult;\r\n    \r\n    if (componentResult.passed) {\r\n      results.passed += 1;\r\n    } else {\r\n      results.failed += 1;\r\n    }\r\n  });\r\n  \r\n  // Log summary\r\n  console.log(`=== TEST SUITE RESULTS ===`);\r\n  console.log(`Total components: ${results.total}`);\r\n  console.log(`Passed: ${results.passed}`);\r\n  console.log(`Failed: ${results.failed}`);\r\n  \r\n  if (results.failed > 0) {\r\n    console.log(`\\nFailed components:`);\r\n    Object.entries(results.componentResults)\r\n      .filter(([_, result]) => !result.passed)\r\n      .forEach(([name, result]) => {\r\n        console.log(`- ${name}: ${result.errors.length} errors`);\r\n      });\r\n  }\r\n  \r\n  return results;\r\n};\r\n\r\n// Export a simple testing function that can be used directly in the console\r\nwindow.testComponent = (componentPath) => {\r\n  try {\r\n    // Dynamic import - note this will only work for components exported as default\r\n    import(`../../../${componentPath}`)\r\n      .then(module => {\r\n        const Component = module.default;\r\n        runComponentTest(Component);\r\n      })\r\n      .catch(error => {\r\n        console.error(`Failed to import component from path: ${componentPath}`, error);\r\n      });\r\n  } catch (error) {\r\n    console.error(`Error testing component: ${error.message}`);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
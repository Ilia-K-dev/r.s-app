{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from'react';import{RouterProvider}from'react-router-dom';import{AuthProvider}from\"./core/contexts/AuthContext\";import{ToastProvider}from\"./core/contexts/ToastContext\";import router from\"./routes\";import{ThemeProvider}from\"./contexts/ThemeContext\";import{I18nextProvider}from'react-i18next';import i18n from\"./locales\";import{env}from\"./core/config/environment\";import{testApiConnection}from\"./shared/utils/apiConnectionTest\";import{useToast}from\"./shared/hooks/useToast\";import DebugPanel from\"./components/debug/DebugPanel\";import\"./core/config/firebase\";import\"../src/shared/styles/index.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useToast=useToast(),showToast=_useToast.showToast;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),apiConnected=_useState2[0],setApiConnected=_useState2[1];useEffect(function(){testApiConnection(function(url){if(process.env.NODE_ENV!=='production'){showToast(`Connected to API: ${url}`,'success');}setApiConnected(true);},function(errorMsg){showToast(`API connection issue: ${errorMsg}`,'warning');setApiConnected(false);});},[showToast]);var renderApiWarning=function renderApiWarning(){if(!apiConnected&&process.env.NODE_ENV!=='production'){return _jsx(\"div\",{className:\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4\",children:_jsx(\"p\",{children:\"API connection issues detected. Some features may not work.\"})});}return null;};return _jsxs(ThemeProvider,{children:[\" \",_jsxs(I18nextProvider,{i18n:i18n,children:[\" \",_jsx(AuthProvider,{children:_jsxs(ToastProvider,{children:[!env.IS_PRODUCTION&&_jsx(\"div\",{className:\"fixed top-0 right-0 bg-yellow-500 text-black px-2 py-1 text-xs font-bold z-50\",children:process.env.NODE_ENV}),renderApiWarning(),\" \",_jsx(RouterProvider,{router:router})]})})]})]});};{process.env.NODE_ENV==='development'&&_jsx(DebugPanel,{position:\"bottom-right\"});}export default App;","map":{"version":3,"names":["React","useEffect","useState","RouterProvider","AuthProvider","ToastProvider","router","ThemeProvider","I18nextProvider","i18n","env","testApiConnection","useToast","DebugPanel","jsx","_jsx","jsxs","_jsxs","App","_useToast","showToast","_useState","_useState2","_slicedToArray","apiConnected","setApiConnected","url","process","NODE_ENV","errorMsg","renderApiWarning","className","children","IS_PRODUCTION","position"],"sources":["C:/Users/user/Documents/app.v3/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Added useEffect and useState\r\nimport { RouterProvider } from 'react-router-dom';\r\nimport { AuthProvider } from './core/contexts/AuthContext';\r\nimport { ToastProvider } from './core/contexts/ToastContext';\r\nimport router from './routes';\r\nimport { ThemeProvider } from './contexts/ThemeContext'; // Import ThemeProvider\r\nimport { I18nextProvider } from 'react-i18next'; // Import I18nextProvider\r\nimport i18n from './locales'; // Import i18n configuration\r\nimport { env } from './core/config/environment'; // Import env\r\nimport { testApiConnection } from './shared/utils/apiConnectionTest'; // Import testApiConnection\r\nimport { useToast } from './shared/hooks/useToast'; // Import useToast\r\nimport DebugPanel from './components/debug/DebugPanel'; // Import DebugPanel\r\n\r\n// Import Firebase to ensure it's initialized once, but don't re-initialize\r\nimport './core/config/firebase';\r\nimport '../src/shared/styles/index.css';\r\n\r\nconst App = () => { // Changed to a functional component to use hooks\r\n  const { showToast } = useToast(); // Use useToast hook\r\n  const [apiConnected, setApiConnected] = useState(true); // Add apiConnected state\r\n\r\n  useEffect(() => {\r\n    // Test API connection on app startup\r\n    testApiConnection(\r\n      (url) => {\r\n        // Only show success in development\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          showToast(`Connected to API: ${url}`, 'success');\r\n        }\r\n        setApiConnected(true);\r\n      },\r\n      (errorMsg) => {\r\n        showToast(`API connection issue: ${errorMsg}`, 'warning');\r\n        setApiConnected(false);\r\n      }\r\n    );\r\n  }, [showToast]); // Added showToast to dependencies\r\n\r\n  // Optional: Show a banner if API is not connected (in development only)\r\n  const renderApiWarning = () => {\r\n    if (!apiConnected && process.env.NODE_ENV !== 'production') {\r\n      return (\r\n        <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-4\">\r\n          <p>API connection issues detected. Some features may not work.</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider> {/* Wrap with ThemeProvider */}\r\n      <I18nextProvider i18n={i18n}> {/* Wrap with I18nextProvider */}\r\n        <AuthProvider>\r\n          <ToastProvider>\r\n            {!env.IS_PRODUCTION && ( // Conditional environment indicator\r\n              <div className=\"fixed top-0 right-0 bg-yellow-500 text-black px-2 py-1 text-xs font-bold z-50\">\r\n                {process.env.NODE_ENV}\r\n              </div>\r\n            )}\r\n            {renderApiWarning()} {/* Render API warning */}\r\n            <RouterProvider router={router} />\r\n          </ToastProvider>\r\n        </AuthProvider>\r\n      </I18nextProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n// Include debug panel in development mode\r\n{process.env.NODE_ENV === 'development' && (\r\n  <DebugPanel position=\"bottom-right\" />\r\n)}\r\n\r\nexport default App;\r\n"],"mappings":"iEAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,cAAc,KAAQ,kBAAkB,CACjD,OAASC,YAAY,mCACrB,OAASC,aAAa,oCACtB,MAAO,CAAAC,MAAM,gBACb,OAASC,aAAa,+BACtB,OAASC,eAAe,KAAQ,eAAe,CAC/C,MAAO,CAAAC,IAAI,iBACX,OAASC,GAAG,iCACZ,OAASC,iBAAiB,wCAC1B,OAASC,QAAQ,+BACjB,MAAO,CAAAC,UAAU,qCAGjB,+BACA,uCAAwC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,IAAAC,SAAA,CAAsBP,QAAQ,CAAC,CAAC,CAAxBQ,SAAS,CAAAD,SAAA,CAATC,SAAS,CACjB,IAAAC,SAAA,CAAwCnB,QAAQ,CAAC,IAAI,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IAEpCrB,SAAS,CAAC,UAAM,CAEdU,iBAAiB,CACf,SAACe,GAAG,CAAK,CAEP,GAAIC,OAAO,CAACjB,GAAG,CAACkB,QAAQ,GAAK,YAAY,CAAE,CACzCR,SAAS,CAAC,qBAAqBM,GAAG,EAAE,CAAE,SAAS,CAAC,CAClD,CACAD,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CACD,SAACI,QAAQ,CAAK,CACZT,SAAS,CAAC,yBAAyBS,QAAQ,EAAE,CAAE,SAAS,CAAC,CACzDJ,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CACH,CAAC,CAAE,CAACL,SAAS,CAAC,CAAC,CAGf,GAAM,CAAAU,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC7B,GAAI,CAACN,YAAY,EAAIG,OAAO,CAACjB,GAAG,CAACkB,QAAQ,GAAK,YAAY,CAAE,CAC1D,MACE,CAAAb,IAAA,QAAKgB,SAAS,CAAC,qEAAqE,CAAAC,QAAA,CAClFjB,IAAA,MAAAiB,QAAA,CAAG,6DAA2D,CAAG,CAAC,CAC/D,CAAC,CAEV,CACA,MAAO,KAAI,CACb,CAAC,CAED,MACE,CAAAf,KAAA,CAACV,aAAa,EAAAyB,QAAA,EAAC,GAAC,CACdf,KAAA,CAACT,eAAe,EAACC,IAAI,CAAEA,IAAK,CAAAuB,QAAA,EAAC,GAAC,CAC5BjB,IAAA,CAACX,YAAY,EAAA4B,QAAA,CACXf,KAAA,CAACZ,aAAa,EAAA2B,QAAA,EACX,CAACtB,GAAG,CAACuB,aAAa,EACjBlB,IAAA,QAAKgB,SAAS,CAAC,+EAA+E,CAAAC,QAAA,CAC3FL,OAAO,CAACjB,GAAG,CAACkB,QAAQ,CAClB,CACN,CACAE,gBAAgB,CAAC,CAAC,CAAC,GAAC,CACrBf,IAAA,CAACZ,cAAc,EAACG,MAAM,CAAEA,MAAO,CAAE,CAAC,EACrB,CAAC,CACJ,CAAC,EACA,CAAC,EACL,CAAC,CAEpB,CAAC,CAGD,CAACqB,OAAO,CAACjB,GAAG,CAACkB,QAAQ,GAAK,aAAa,EACrCb,IAAA,CAACF,UAAU,EAACqB,QAAQ,CAAC,cAAc,CAAE,CACtC,EAED,cAAe,CAAAhB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}